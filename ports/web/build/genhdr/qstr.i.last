# 1 "unix_display.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 330 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "unix_display.c" 2

# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 1
# 32 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_main.h" 1
# 25 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_main.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h" 1
# 31 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_config.h" 1
# 25 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_config.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_platform.h" 1
# 224 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_platform.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 225 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_platform.h" 2
# 246 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_platform.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GetPlatform (void);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 253 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_platform.h" 2
# 26 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_config.h" 2
# 49 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_config.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_config_emscripten.h" 1
# 50 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_config.h" 2
# 32 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h" 2








# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/sys/types.h" 1 3






# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/features.h" 1 3
# 8 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/sys/types.h" 2 3
# 57 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/sys/types.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 1 3
# 81 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef long long int time_t;




typedef int suseconds_t;





typedef struct {
    union {
        int __i[10];
        volatile int __vi[10];
        unsigned __s[10];
    } __u;



    const char *_a_transferredcanvases;

} pthread_attr_t;




typedef struct { union { int __i[6]; volatile int __vi[6]; volatile void *__p[6]; } __u; } pthread_mutex_t;
# 118 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef struct { union { int __i[12]; volatile int __vi[12]; void *__p[12]; } __u; } pthread_cond_t;
# 128 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef struct { union { int __i[sizeof(long)==8?14:8]; volatile int __vi[sizeof(long)==8?14:8]; void *__p[sizeof(long)==8?7:8]; } __u; } pthread_rwlock_t;




typedef struct { union { int __i[5]; volatile int __vi[5]; void *__p[5]; } __u; } pthread_barrier_t;





typedef unsigned long int size_t;
# 154 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef long int ssize_t;
# 231 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef unsigned mode_t;




typedef unsigned long int nlink_t;




typedef long long int off_t;




typedef unsigned long long int ino_t;




typedef unsigned int dev_t;




typedef int blksize_t;




typedef int blkcnt_t;




typedef unsigned int fsblkcnt_t;




typedef unsigned int fsfilcnt_t;
# 287 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef void * timer_t;




typedef int clockid_t;




typedef int clock_t;
# 318 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef int pid_t;




typedef unsigned id_t;




typedef unsigned uid_t;




typedef unsigned gid_t;




typedef int key_t;




typedef unsigned useconds_t;
# 356 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef struct __pthread * pthread_t;





typedef int pthread_once_t;




typedef unsigned pthread_key_t;




typedef int pthread_spinlock_t;




typedef struct { unsigned __attr; } pthread_mutexattr_t;




typedef struct { unsigned __attr; } pthread_condattr_t;




typedef struct { unsigned __attr; } pthread_barrierattr_t;




typedef struct { unsigned __attr[2]; } pthread_rwlockattr_t;
# 58 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/sys/types.h" 2 3
# 41 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h" 2


# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/stdio.h" 1 3




# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 1 3
# 29 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/stddef.h" 1 3
# 35 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/stddef.h" 3
typedef long int ptrdiff_t;
# 46 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/stddef.h" 3
typedef long unsigned int size_t;
# 74 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/stddef.h" 3
typedef int wchar_t;
# 30 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 2 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/stdint.h" 1 3
# 52 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/stdint.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/stdint.h" 1 3
# 20 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/stdint.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 1 3
# 144 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef unsigned long int uintptr_t;
# 159 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef long int intptr_t;
# 175 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef signed char int8_t;




typedef short int16_t;




typedef int int32_t;




typedef long long int int64_t;




typedef long long int intmax_t;




typedef unsigned char uint8_t;




typedef unsigned short uint16_t;




typedef unsigned int uint32_t;




typedef unsigned long long int uint64_t;
# 225 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef unsigned long long int uintmax_t;
# 21 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/stdint.h" 2 3

typedef int8_t int_fast8_t;
typedef int64_t int_fast64_t;

typedef int8_t int_least8_t;
typedef int16_t int_least16_t;
typedef int32_t int_least32_t;
typedef int64_t int_least64_t;

typedef uint8_t uint_fast8_t;
typedef uint64_t uint_fast64_t;

typedef uint8_t uint_least8_t;
typedef uint16_t uint_least16_t;
typedef uint32_t uint_least32_t;
typedef uint64_t uint_least64_t;
# 95 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/stdint.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/stdint.h" 1 3
typedef int32_t int_fast16_t;
typedef int32_t int_fast32_t;
typedef uint32_t uint_fast16_t;
typedef uint32_t uint_fast32_t;
# 96 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/stdint.h" 2 3
# 53 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/stdint.h" 2 3
# 31 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 2 3





                                                             ;
                                                              ;
                                                              ;
                                                               ;
                                                              ;
                                                               ;
                                                              ;
                                                               ;
                                                            ;







typedef long unsigned int __wasi_size_t;

                                                                  ;
                                                                     ;




typedef uint64_t __wasi_filesize_t;

                                                                      ;
                                                                         ;




typedef uint64_t __wasi_timestamp_t;

                                                                       ;
                                                                          ;




typedef uint32_t __wasi_clockid_t;
# 102 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
                                                                     ;
                                                                        ;







typedef uint16_t __wasi_errno_t;
# 498 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
                                                                   ;
                                                                      ;




typedef uint64_t __wasi_rights_t;
# 663 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
                                                                    ;
                                                                       ;




typedef uint32_t __wasi_fd_t;

                                                                ;
                                                                   ;




typedef struct __wasi_iovec_t {



    uint8_t * buf;




    __wasi_size_t buf_len;

} __wasi_iovec_t;

                                                                   ;
                                                                      ;
                                                                            ;
                                                                                ;




typedef struct __wasi_ciovec_t {



    const uint8_t * buf;




    __wasi_size_t buf_len;

} __wasi_ciovec_t;

                                                                    ;
                                                                       ;
                                                                             ;
                                                                                 ;




typedef int64_t __wasi_filedelta_t;

                                                                       ;
                                                                          ;




typedef uint8_t __wasi_whence_t;
# 744 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
                                                                    ;
                                                                       ;






typedef uint64_t __wasi_dircookie_t;

                                                                       ;
                                                                          ;




typedef uint32_t __wasi_dirnamlen_t;

                                                                       ;
                                                                          ;




typedef uint64_t __wasi_inode_t;

                                                                   ;
                                                                      ;




typedef uint8_t __wasi_filetype_t;
# 818 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
                                                                      ;
                                                                         ;




typedef struct __wasi_dirent_t {



    __wasi_dircookie_t d_next;




    __wasi_inode_t d_ino;




    __wasi_dirnamlen_t d_namlen;




    __wasi_filetype_t d_type;

} __wasi_dirent_t;

                                                                     ;
                                                                       ;
                                                                                ;
                                                                               ;
                                                                                   ;
                                                                                 ;




typedef uint8_t __wasi_advice_t;
# 889 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
                                                                    ;
                                                                       ;




typedef uint16_t __wasi_fdflags_t;
# 924 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
                                                                     ;
                                                                        ;




typedef struct __wasi_fdstat_t {



    __wasi_filetype_t fs_filetype;




    __wasi_fdflags_t fs_flags;




    __wasi_rights_t fs_rights_base;





    __wasi_rights_t fs_rights_inheriting;

} __wasi_fdstat_t;

                                                                     ;
                                                                       ;
                                                                                     ;
                                                                                  ;
                                                                                        ;
                                                                                               ;





typedef uint64_t __wasi_device_t;

                                                                    ;
                                                                       ;




typedef uint16_t __wasi_fstflags_t;
# 995 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
                                                                      ;
                                                                         ;




typedef uint32_t __wasi_lookupflags_t;






                                                                         ;
                                                                            ;




typedef uint16_t __wasi_oflags_t;
# 1036 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
                                                                    ;
                                                                       ;




typedef uint64_t __wasi_linkcount_t;

                                                                       ;
                                                                          ;




typedef struct __wasi_filestat_t {



    __wasi_device_t dev;




    __wasi_inode_t ino;




    __wasi_filetype_t filetype;




    __wasi_linkcount_t nlink;




    __wasi_filesize_t size;




    __wasi_timestamp_t atim;




    __wasi_timestamp_t mtim;




    __wasi_timestamp_t ctim;

} __wasi_filestat_t;

                                                                       ;
                                                                         ;
                                                                               ;
                                                                               ;
                                                                                     ;
                                                                                  ;
                                                                                 ;
                                                                                 ;
                                                                                 ;
                                                                                 ;





typedef uint64_t __wasi_userdata_t;

                                                                      ;
                                                                         ;




typedef uint8_t __wasi_eventtype_t;
# 1136 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
                                                                       ;
                                                                          ;





typedef uint16_t __wasi_eventrwflags_t;






                                                                          ;
                                                                             ;





typedef struct __wasi_event_fd_readwrite_t {



    __wasi_filesize_t nbytes;




    __wasi_eventrwflags_t flags;

} __wasi_event_fd_readwrite_t;

                                                                                 ;
                                                                                   ;
                                                                                            ;
                                                                                           ;




typedef union __wasi_event_u_t {



    __wasi_event_fd_readwrite_t fd_readwrite;

} __wasi_event_u_t;

                                                                      ;
                                                                        ;




typedef struct __wasi_event_t {



    __wasi_userdata_t userdata;




    __wasi_errno_t error;




    __wasi_eventtype_t type;




    __wasi_event_u_t u;

} __wasi_event_t;

                                                                    ;
                                                                      ;
                                                                                 ;
                                                                              ;
                                                                              ;
                                                                           ;





typedef uint16_t __wasi_subclockflags_t;
# 1237 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
                                                                           ;
                                                                              ;




typedef struct __wasi_subscription_clock_t {



    __wasi_clockid_t id;




    __wasi_timestamp_t timeout;





    __wasi_timestamp_t precision;




    __wasi_subclockflags_t flags;

} __wasi_subscription_clock_t;

                                                                                 ;
                                                                                   ;
                                                                                        ;
                                                                                             ;
                                                                                                ;
                                                                                            ;





typedef struct __wasi_subscription_fd_readwrite_t {



    __wasi_fd_t file_descriptor;

} __wasi_subscription_fd_readwrite_t;

                                                                                       ;
                                                                                          ;
                                                                                                            ;




typedef union __wasi_subscription_u_t {



    __wasi_subscription_clock_t clock;




    __wasi_subscription_fd_readwrite_t fd_readwrite;

} __wasi_subscription_u_t;

                                                                             ;
                                                                               ;




typedef struct __wasi_subscription_t {




    __wasi_userdata_t userdata;




    __wasi_eventtype_t type;




    __wasi_subscription_u_t u;

} __wasi_subscription_t;

                                                                           ;
                                                                             ;
                                                                                        ;
                                                                                    ;
                                                                                  ;




typedef uint32_t __wasi_exitcode_t;

                                                                      ;
                                                                         ;




typedef uint8_t __wasi_signal_t;
# 1536 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
                                                                    ;
                                                                       ;




typedef uint16_t __wasi_riflags_t;
# 1554 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
                                                                     ;
                                                                        ;




typedef uint16_t __wasi_roflags_t;






                                                                     ;
                                                                        ;





typedef uint16_t __wasi_siflags_t;

                                                                     ;
                                                                        ;




typedef uint8_t __wasi_sdflags_t;
# 1594 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
                                                                     ;
                                                                        ;




typedef uint8_t __wasi_preopentype_t;






                                                                         ;
                                                                            ;




typedef struct __wasi_prestat_dir_t {



    __wasi_size_t pr_name_len;

} __wasi_prestat_dir_t;

                                                                         ;
                                                                            ;
                                                                                          ;




typedef union __wasi_prestat_u_t {



    __wasi_prestat_dir_t dir;

} __wasi_prestat_u_t;

                                                                       ;
                                                                          ;




typedef struct __wasi_prestat_t {



    __wasi_preopentype_t pr_type;




    __wasi_prestat_u_t u;

} __wasi_prestat_t;

                                                                     ;
                                                                        ;
                                                                                  ;
                                                                            ;
# 1669 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
__wasi_errno_t __wasi_args_get(
    uint8_t * * argv,

    uint8_t * argv_buf
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("args_get"),
    __warn_unused_result__
));




__wasi_errno_t __wasi_args_sizes_get(



    __wasi_size_t *argc,



    __wasi_size_t *argv_buf_size
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("args_sizes_get"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_environ_get(
    uint8_t * * environ,

    uint8_t * environ_buf
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("environ_get"),
    __warn_unused_result__
));




__wasi_errno_t __wasi_environ_sizes_get(



    __wasi_size_t *argc,



    __wasi_size_t *argv_buf_size
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("environ_sizes_get"),
    __warn_unused_result__
));







__wasi_errno_t __wasi_clock_res_get(



    __wasi_clockid_t id,




    __wasi_timestamp_t *resolution
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("clock_res_get"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_clock_time_get(



    __wasi_clockid_t id,




    __wasi_timestamp_t precision,




    __wasi_timestamp_t *time
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("clock_time_get"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_fd_advise(
    __wasi_fd_t fd,




    __wasi_filesize_t offset,




    __wasi_filesize_t len,




    __wasi_advice_t advice
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_advise"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_fd_allocate(
    __wasi_fd_t fd,




    __wasi_filesize_t offset,




    __wasi_filesize_t len
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_allocate"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_fd_close(
    __wasi_fd_t fd
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_close"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_fd_datasync(
    __wasi_fd_t fd
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_datasync"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_fd_fdstat_get(
    __wasi_fd_t fd,




    __wasi_fdstat_t *stat
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_fdstat_get"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_fd_fdstat_set_flags(
    __wasi_fd_t fd,




    __wasi_fdflags_t flags
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_fdstat_set_flags"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_fd_fdstat_set_rights(
    __wasi_fd_t fd,




    __wasi_rights_t fs_rights_base,

    __wasi_rights_t fs_rights_inheriting
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_fdstat_set_rights"),
    __warn_unused_result__
));




__wasi_errno_t __wasi_fd_filestat_get(
    __wasi_fd_t fd,




    __wasi_filestat_t *buf
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_filestat_get"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_fd_filestat_set_size(
    __wasi_fd_t fd,




    __wasi_filesize_t size
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_filestat_set_size"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_fd_filestat_set_times(
    __wasi_fd_t fd,




    __wasi_timestamp_t atim,




    __wasi_timestamp_t mtim,




    __wasi_fstflags_t fst_flags
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_filestat_set_times"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_fd_pread(
    __wasi_fd_t fd,




    const __wasi_iovec_t *iovs,




    size_t iovs_len,




    __wasi_filesize_t offset,




    __wasi_size_t *nread
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_pread"),
    __warn_unused_result__
));




__wasi_errno_t __wasi_fd_prestat_get(
    __wasi_fd_t fd,




    __wasi_prestat_t *buf
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_prestat_get"),
    __warn_unused_result__
));




__wasi_errno_t __wasi_fd_prestat_dir_name(
    __wasi_fd_t fd,




    uint8_t * path,

    __wasi_size_t path_len
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_prestat_dir_name"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_fd_pwrite(
    __wasi_fd_t fd,




    const __wasi_ciovec_t *iovs,




    size_t iovs_len,




    __wasi_filesize_t offset,




    __wasi_size_t *nwritten
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_pwrite"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_fd_read(
    __wasi_fd_t fd,




    const __wasi_iovec_t *iovs,




    size_t iovs_len,




    __wasi_size_t *nread
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_read"),
    __warn_unused_result__
));
# 2098 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
__wasi_errno_t __wasi_fd_readdir(
    __wasi_fd_t fd,




    uint8_t * buf,

    __wasi_size_t buf_len,




    __wasi_dircookie_t cookie,




    __wasi_size_t *bufused
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_readdir"),
    __warn_unused_result__
));
# 2133 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
__wasi_errno_t __wasi_fd_renumber(
    __wasi_fd_t fd,




    __wasi_fd_t to
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_renumber"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_fd_seek(
    __wasi_fd_t fd,




    __wasi_filedelta_t offset,




    __wasi_whence_t whence,




    __wasi_filesize_t *newoffset
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_seek"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_fd_sync(
    __wasi_fd_t fd
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_sync"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_fd_tell(
    __wasi_fd_t fd,




    __wasi_filesize_t *offset
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_tell"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_fd_write(
    __wasi_fd_t fd,




    const __wasi_ciovec_t *iovs,




    size_t iovs_len,




    __wasi_size_t *nwritten
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("fd_write"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_path_create_directory(
    __wasi_fd_t fd,




    const char *path,




    size_t path_len
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("path_create_directory"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_path_filestat_get(
    __wasi_fd_t fd,




    __wasi_lookupflags_t flags,




    const char *path,




    size_t path_len,




    __wasi_filestat_t *buf
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("path_filestat_get"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_path_filestat_set_times(
    __wasi_fd_t fd,




    __wasi_lookupflags_t flags,




    const char *path,




    size_t path_len,




    __wasi_timestamp_t atim,




    __wasi_timestamp_t mtim,




    __wasi_fstflags_t fst_flags
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("path_filestat_set_times"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_path_link(
    __wasi_fd_t old_fd,




    __wasi_lookupflags_t old_flags,




    const char *old_path,




    size_t old_path_len,




    __wasi_fd_t new_fd,




    const char *new_path,




    size_t new_path_len
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("path_link"),
    __warn_unused_result__
));
# 2376 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
__wasi_errno_t __wasi_path_open(
    __wasi_fd_t fd,




    __wasi_lookupflags_t dirflags,





    const char *path,




    size_t path_len,




    __wasi_oflags_t oflags,
# 2409 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
    __wasi_rights_t fs_rights_base,

    __wasi_rights_t fs_rights_inherting,

    __wasi_fdflags_t fdflags,




    __wasi_fd_t *opened_fd
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("path_open"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_path_readlink(
    __wasi_fd_t fd,




    const char *path,




    size_t path_len,




    uint8_t * buf,

    __wasi_size_t buf_len,




    __wasi_size_t *bufused
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("path_readlink"),
    __warn_unused_result__
));






__wasi_errno_t __wasi_path_remove_directory(
    __wasi_fd_t fd,




    const char *path,




    size_t path_len
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("path_remove_directory"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_path_rename(
    __wasi_fd_t fd,




    const char *old_path,




    size_t old_path_len,




    __wasi_fd_t new_fd,




    const char *new_path,




    size_t new_path_len
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("path_rename"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_path_symlink(



    const char *old_path,




    size_t old_path_len,

    __wasi_fd_t fd,




    const char *new_path,




    size_t new_path_len
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("path_symlink"),
    __warn_unused_result__
));






__wasi_errno_t __wasi_path_unlink_file(
    __wasi_fd_t fd,




    const char *path,




    size_t path_len
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("path_unlink_file"),
    __warn_unused_result__
));




__wasi_errno_t __wasi_poll_oneoff(



    const __wasi_subscription_t * in,




    __wasi_event_t * out,




    __wasi_size_t nsubscriptions,




    __wasi_size_t *nevents
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("poll_oneoff"),
    __warn_unused_result__
));






__attribute__((__noreturn__)) void __wasi_proc_exit(



    __wasi_exitcode_t rval
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("proc_exit")));





__wasi_errno_t __wasi_proc_raise(



    __wasi_signal_t sig
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("proc_raise"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_sched_yield(
    void
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("sched_yield"),
    __warn_unused_result__
));
# 2652 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wasi/api.h" 3
__wasi_errno_t __wasi_random_get(



    uint8_t * buf,

    __wasi_size_t buf_len
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("random_get"),
    __warn_unused_result__
));






__wasi_errno_t __wasi_sock_recv(
    __wasi_fd_t fd,




    const __wasi_iovec_t *ri_data,




    size_t ri_data_len,




    __wasi_riflags_t ri_flags,




    __wasi_size_t *ro_datalen,



    __wasi_roflags_t *ro_flags
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("sock_recv"),
    __warn_unused_result__
));






__wasi_errno_t __wasi_sock_send(
    __wasi_fd_t fd,




    const __wasi_ciovec_t *si_data,




    size_t si_data_len,




    __wasi_siflags_t si_flags,




    __wasi_size_t *so_datalen
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("sock_send"),
    __warn_unused_result__
));





__wasi_errno_t __wasi_sock_shutdown(
    __wasi_fd_t fd,




    __wasi_sdflags_t how
) __attribute__((
    __import_module__("wasi_snapshot_preview1"),
    __import_name__("sock_shutdown"),
    __warn_unused_result__
));
# 6 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/stdio.h" 2 3
# 30 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/stdio.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 1 3
# 18 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef __builtin_va_list __isoc_va_list;
# 398 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef struct _IO_FILE FILE;
# 31 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/stdio.h" 2 3
# 64 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/stdio.h" 3
typedef union _G_fpos64_t {
 char __opaque[16];
 long long __lldata;
 double __align;
} fpos_t;

extern FILE *const stdin;
extern FILE *const stdout;
extern FILE *const stderr;





FILE *fopen(const char *restrict, const char *restrict);
FILE *freopen(const char *restrict, const char *restrict, FILE *restrict);
int fclose(FILE *);

int remove(const char *);
int rename(const char *, const char *);

int feof(FILE *);
int ferror(FILE *);
int fflush(FILE *);
void clearerr(FILE *);

int fseek(FILE *, long, int);
long ftell(FILE *);
void rewind(FILE *);

int fgetpos(FILE *restrict, fpos_t *restrict);
int fsetpos(FILE *, const fpos_t *);

size_t fread(void *restrict, size_t, size_t, FILE *restrict);
size_t fwrite(const void *restrict, size_t, size_t, FILE *restrict);

int fgetc(FILE *);
int getc(FILE *);
int getchar(void);
int ungetc(int, FILE *);

int fputc(int, FILE *);
int putc(int, FILE *);
int putchar(int);

char *fgets(char *restrict, int, FILE *restrict);

char *gets(char *);


int fputs(const char *restrict, FILE *restrict);
int puts(const char *);

int printf(const char *restrict, ...);
int fprintf(FILE *restrict, const char *restrict, ...);
int sprintf(char *restrict, const char *restrict, ...);
int snprintf(char *restrict, size_t, const char *restrict, ...);

int vprintf(const char *restrict, __isoc_va_list);
int vfprintf(FILE *restrict, const char *restrict, __isoc_va_list);
int vsprintf(char *restrict, const char *restrict, __isoc_va_list);
int vsnprintf(char *restrict, size_t, const char *restrict, __isoc_va_list);

int scanf(const char *restrict, ...);
int fscanf(FILE *restrict, const char *restrict, ...);
int sscanf(const char *restrict, const char *restrict, ...);
int vscanf(const char *restrict, __isoc_va_list);
int vfscanf(FILE *restrict, const char *restrict, __isoc_va_list);
int vsscanf(const char *restrict, const char *restrict, __isoc_va_list);

void perror(const char *);

int setvbuf(FILE *restrict, char *restrict, int, size_t);
void setbuf(FILE *restrict, char *restrict);

char *tmpnam(char *);
FILE *tmpfile(void);
# 44 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h" 2


# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/compat/stdlib.h" 1 3







int getloadavg(double loadavg[], int nelem);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/stdlib.h" 1 3
# 19 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/stdlib.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 1 3
# 38 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef int wchar_t;
# 20 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/stdlib.h" 2 3

int atoi (const char *);
long atol (const char *);
long long atoll (const char *);
double atof (const char *);

float strtof (const char *restrict, char **restrict);
double strtod (const char *restrict, char **restrict);
long double strtold (const char *restrict, char **restrict);

long strtol (const char *restrict, char **restrict, int);
unsigned long strtoul (const char *restrict, char **restrict, int);
long long strtoll (const char *restrict, char **restrict, int);
unsigned long long strtoull (const char *restrict, char **restrict, int);

int rand (void);
void srand (unsigned);

void *malloc (size_t);
void *calloc (size_t, size_t);
void *realloc (void *, size_t);
void free (void *);
void *aligned_alloc(size_t, size_t);

__attribute__((__noreturn__)) void abort (void);
int atexit (void (*) (void));
__attribute__((__noreturn__)) void exit (int);
__attribute__((__noreturn__)) void _Exit (int);
int at_quick_exit (void (*) (void));
__attribute__((__noreturn__)) void quick_exit (int);

char *getenv (const char *);

int system (const char *);

void *bsearch (const void *, const void *, size_t, size_t, int (*)(const void *, const void *));
void qsort (void *, size_t, size_t, int (*)(const void *, const void *));

int abs (int);
long labs (long);
long long llabs (long long);

typedef struct { int quot, rem; } div_t;
typedef struct { long quot, rem; } ldiv_t;
typedef struct { long long quot, rem; } lldiv_t;

div_t div (int, int);
ldiv_t ldiv (long, long);
lldiv_t lldiv (long long, long long);

int mblen (const char *, size_t);
int mbtowc (wchar_t *restrict, const char *restrict, size_t);
int wctomb (char *, wchar_t);
size_t mbstowcs (wchar_t *restrict, const char *restrict, size_t);
size_t wcstombs (char *restrict, const wchar_t *restrict, size_t);




size_t __ctype_get_mb_cur_max(void);
# 15 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/compat/stdlib.h" 2 3
# 47 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/stddef.h" 1 3
# 48 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/compat/stdarg.h" 1 3
# 14 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/compat/stdarg.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/stdarg.h" 1 3
# 14 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/stdarg.h" 3
typedef __builtin_va_list va_list;
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/stdarg.h" 3
typedef __builtin_va_list __gnuc_va_list;
# 15 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/compat/stdarg.h" 2 3
# 49 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h" 2
# 66 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/compat/string.h" 1 3







extern char* strlwr(char *);
extern char* strupr(char *);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/string.h" 1 3
# 23 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/string.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 1 3
# 24 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/string.h" 2 3

void *memcpy (void *restrict, const void *restrict, size_t);
void *memmove (void *, const void *, size_t);
void *memset (void *, int, size_t);
int memcmp (const void *, const void *, size_t);
void *memchr (const void *, int, size_t);

char *strcpy (char *restrict, const char *restrict);
char *strncpy (char *restrict, const char *restrict, size_t);

char *strcat (char *restrict, const char *restrict);
char *strncat (char *restrict, const char *restrict, size_t);

int strcmp (const char *, const char *);
int strncmp (const char *, const char *, size_t);

int strcoll (const char *, const char *);
size_t strxfrm (char *restrict, const char *restrict, size_t);

char *strchr (const char *, int);
char *strrchr (const char *, int);

size_t strcspn (const char *, const char *);
size_t strspn (const char *, const char *);
char *strpbrk (const char *, const char *);
char *strstr (const char *, const char *);
char *strtok (char *restrict, const char *restrict);

size_t strlen (const char *);

char *strerror (int);
# 16 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/compat/string.h" 2 3
# 67 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h" 2


# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/strings.h" 1 3
# 11 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/strings.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 1 3
# 410 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef struct __locale_struct * locale_t;
# 12 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/strings.h" 2 3
# 29 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/strings.h" 3
int strcasecmp (const char *, const char *);
int strncasecmp (const char *, const char *, size_t);

int strcasecmp_l (const char *, const char *, locale_t);
int strncasecmp_l (const char *, const char *, size_t, locale_t);
# 70 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h" 2


# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/compat/wchar.h" 1 3



# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wchar.h" 1 3
# 31 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wchar.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 1 3
# 51 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef unsigned wint_t;
# 404 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef struct __mbstate_t { unsigned __opaque1, __opaque2; } mbstate_t;
# 32 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wchar.h" 2 3
# 50 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/wchar.h" 3
wchar_t *wcscpy (wchar_t *restrict, const wchar_t *restrict);
wchar_t *wcsncpy (wchar_t *restrict, const wchar_t *restrict, size_t);

wchar_t *wcscat (wchar_t *restrict, const wchar_t *restrict);
wchar_t *wcsncat (wchar_t *restrict, const wchar_t *restrict, size_t);

int wcscmp (const wchar_t *, const wchar_t *);
int wcsncmp (const wchar_t *, const wchar_t *, size_t);

int wcscoll(const wchar_t *, const wchar_t *);
size_t wcsxfrm (wchar_t *restrict, const wchar_t *restrict, size_t);

wchar_t *wcschr (const wchar_t *, wchar_t);
wchar_t *wcsrchr (const wchar_t *, wchar_t);

size_t wcscspn (const wchar_t *, const wchar_t *);
size_t wcsspn (const wchar_t *, const wchar_t *);
wchar_t *wcspbrk (const wchar_t *, const wchar_t *);

wchar_t *wcstok (wchar_t *restrict, const wchar_t *restrict, wchar_t **restrict);

size_t wcslen (const wchar_t *);

wchar_t *wcsstr (const wchar_t *restrict, const wchar_t *restrict);
wchar_t *wcswcs (const wchar_t *, const wchar_t *);

wchar_t *wmemchr (const wchar_t *, wchar_t, size_t);
int wmemcmp (const wchar_t *, const wchar_t *, size_t);
wchar_t *wmemcpy (wchar_t *restrict, const wchar_t *restrict, size_t);
wchar_t *wmemmove (wchar_t *, const wchar_t *, size_t);
wchar_t *wmemset (wchar_t *, wchar_t, size_t);

wint_t btowc (int);
int wctob (wint_t);

int mbsinit (const mbstate_t *);
size_t mbrtowc (wchar_t *restrict, const char *restrict, size_t, mbstate_t *restrict);
size_t wcrtomb (char *restrict, wchar_t, mbstate_t *restrict);

size_t mbrlen (const char *restrict, size_t, mbstate_t *restrict);

size_t mbsrtowcs (wchar_t *restrict, const char **restrict, size_t, mbstate_t *restrict);
size_t wcsrtombs (char *restrict, const wchar_t **restrict, size_t, mbstate_t *restrict);

float wcstof (const wchar_t *restrict, wchar_t **restrict);
double wcstod (const wchar_t *restrict, wchar_t **restrict);
long double wcstold (const wchar_t *restrict, wchar_t **restrict);

long wcstol (const wchar_t *restrict, wchar_t **restrict, int);
unsigned long wcstoul (const wchar_t *restrict, wchar_t **restrict, int);

long long wcstoll (const wchar_t *restrict, wchar_t **restrict, int);
unsigned long long wcstoull (const wchar_t *restrict, wchar_t **restrict, int);



int fwide (FILE *, int);


int wprintf (const wchar_t *restrict, ...);
int fwprintf (FILE *restrict, const wchar_t *restrict, ...);
int swprintf (wchar_t *restrict, size_t, const wchar_t *restrict, ...);

int vwprintf (const wchar_t *restrict, __isoc_va_list);
int vfwprintf (FILE *restrict, const wchar_t *restrict, __isoc_va_list);
int vswprintf (wchar_t *restrict, size_t, const wchar_t *restrict, __isoc_va_list);

int wscanf (const wchar_t *restrict, ...);
int fwscanf (FILE *restrict, const wchar_t *restrict, ...);
int swscanf (const wchar_t *restrict, const wchar_t *restrict, ...);

int vwscanf (const wchar_t *restrict, __isoc_va_list);
int vfwscanf (FILE *restrict, const wchar_t *restrict, __isoc_va_list);
int vswscanf (const wchar_t *restrict, const wchar_t *restrict, __isoc_va_list);

wint_t fgetwc (FILE *);
wint_t getwc (FILE *);
wint_t getwchar (void);

wint_t fputwc (wchar_t, FILE *);
wint_t putwc (wchar_t, FILE *);
wint_t putwchar (wchar_t);

wchar_t *fgetws (wchar_t *restrict, int, FILE *restrict);
int fputws (const wchar_t *restrict, FILE *restrict);

wint_t ungetwc (wint_t, FILE *);

struct tm;
size_t wcsftime (wchar_t *restrict, size_t, const wchar_t *restrict, const struct tm *restrict);
# 5 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/compat/wchar.h" 2 3
# 73 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h" 2


# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/inttypes.h" 1 3
# 21 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/inttypes.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/inttypes.h" 1 3
# 12 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/inttypes.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 1 3
# 13 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/inttypes.h" 2 3

typedef struct { intmax_t quot, rem; } imaxdiv_t;

intmax_t imaxabs(intmax_t);
imaxdiv_t imaxdiv(intmax_t, intmax_t);

intmax_t strtoimax(const char *restrict, char **restrict, int);
uintmax_t strtoumax(const char *restrict, char **restrict, int);

intmax_t wcstoimax(const wchar_t *restrict, wchar_t **restrict, int);
uintmax_t wcstoumax(const wchar_t *restrict, wchar_t **restrict, int);
# 22 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/inttypes.h" 2 3
# 76 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h" 2




# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/compat/ctype.h" 1 3
# 15 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/compat/ctype.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/ctype.h" 1 3
# 10 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/ctype.h" 3
int isalnum(int);
int isalpha(int);
int isblank(int);
int iscntrl(int);
int isdigit(int);
int isgraph(int);
int islower(int);
int isprint(int);
int ispunct(int);
int isspace(int);
int isupper(int);
int isxdigit(int);
int tolower(int);
int toupper(int);


static inline int __isspace(int _c)
{
 return _c == ' ' || (unsigned)_c-'\t' < 5;
}
# 16 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/compat/ctype.h" 2 3
# 81 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h" 2
# 90 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/compat/math.h" 1 3
# 12 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/compat/math.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/math.h" 1 3
# 12 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/math.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 1 3
# 58 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef float float_t;




typedef double double_t;
# 13 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/math.h" 2 3
# 51 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/math.h" 3
int __fpclassify(double);
int __fpclassifyf(float);
int __fpclassifyl(long double);

static inline unsigned __FLOAT_BITS(float __f)
{
 union {float __f; unsigned __i;} __u;
 __u.__f = __f;
 return __u.__i;
}
static inline unsigned long long __DOUBLE_BITS(double __f)
{
 union {double __f; unsigned long long __i;} __u;
 __u.__f = __f;
 return __u.__i;
}
# 93 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/math.h" 3
int __signbit(double);
int __signbitf(float);
int __signbitl(long double);
# 108 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/math.h" 3
static inline int __islessf(float_t __x, float_t __y) { return !(( sizeof((__x)) == sizeof(float) ? (__FLOAT_BITS((__x)) & 0x7fffffff) > 0x7f800000 : sizeof((__x)) == sizeof(double) ? (__DOUBLE_BITS((__x)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__x)) == 0) ? ((void)(__y),1) : ( sizeof((__y)) == sizeof(float) ? (__FLOAT_BITS((__y)) & 0x7fffffff) > 0x7f800000 : sizeof((__y)) == sizeof(double) ? (__DOUBLE_BITS((__y)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__y)) == 0)) && __x < __y; }
static inline int __isless(double_t __x, double_t __y) { return !(( sizeof((__x)) == sizeof(float) ? (__FLOAT_BITS((__x)) & 0x7fffffff) > 0x7f800000 : sizeof((__x)) == sizeof(double) ? (__DOUBLE_BITS((__x)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__x)) == 0) ? ((void)(__y),1) : ( sizeof((__y)) == sizeof(float) ? (__FLOAT_BITS((__y)) & 0x7fffffff) > 0x7f800000 : sizeof((__y)) == sizeof(double) ? (__DOUBLE_BITS((__y)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__y)) == 0)) && __x < __y; }
static inline int __islessl(long double __x, long double __y) { return !(( sizeof((__x)) == sizeof(float) ? (__FLOAT_BITS((__x)) & 0x7fffffff) > 0x7f800000 : sizeof((__x)) == sizeof(double) ? (__DOUBLE_BITS((__x)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__x)) == 0) ? ((void)(__y),1) : ( sizeof((__y)) == sizeof(float) ? (__FLOAT_BITS((__y)) & 0x7fffffff) > 0x7f800000 : sizeof((__y)) == sizeof(double) ? (__DOUBLE_BITS((__y)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__y)) == 0)) && __x < __y; }
static inline int __islessequalf(float_t __x, float_t __y) { return !(( sizeof((__x)) == sizeof(float) ? (__FLOAT_BITS((__x)) & 0x7fffffff) > 0x7f800000 : sizeof((__x)) == sizeof(double) ? (__DOUBLE_BITS((__x)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__x)) == 0) ? ((void)(__y),1) : ( sizeof((__y)) == sizeof(float) ? (__FLOAT_BITS((__y)) & 0x7fffffff) > 0x7f800000 : sizeof((__y)) == sizeof(double) ? (__DOUBLE_BITS((__y)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__y)) == 0)) && __x <= __y; }
static inline int __islessequal(double_t __x, double_t __y) { return !(( sizeof((__x)) == sizeof(float) ? (__FLOAT_BITS((__x)) & 0x7fffffff) > 0x7f800000 : sizeof((__x)) == sizeof(double) ? (__DOUBLE_BITS((__x)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__x)) == 0) ? ((void)(__y),1) : ( sizeof((__y)) == sizeof(float) ? (__FLOAT_BITS((__y)) & 0x7fffffff) > 0x7f800000 : sizeof((__y)) == sizeof(double) ? (__DOUBLE_BITS((__y)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__y)) == 0)) && __x <= __y; }
static inline int __islessequall(long double __x, long double __y) { return !(( sizeof((__x)) == sizeof(float) ? (__FLOAT_BITS((__x)) & 0x7fffffff) > 0x7f800000 : sizeof((__x)) == sizeof(double) ? (__DOUBLE_BITS((__x)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__x)) == 0) ? ((void)(__y),1) : ( sizeof((__y)) == sizeof(float) ? (__FLOAT_BITS((__y)) & 0x7fffffff) > 0x7f800000 : sizeof((__y)) == sizeof(double) ? (__DOUBLE_BITS((__y)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__y)) == 0)) && __x <= __y; }
static inline int __islessgreaterf(float_t __x, float_t __y) { return !(( sizeof((__x)) == sizeof(float) ? (__FLOAT_BITS((__x)) & 0x7fffffff) > 0x7f800000 : sizeof((__x)) == sizeof(double) ? (__DOUBLE_BITS((__x)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__x)) == 0) ? ((void)(__y),1) : ( sizeof((__y)) == sizeof(float) ? (__FLOAT_BITS((__y)) & 0x7fffffff) > 0x7f800000 : sizeof((__y)) == sizeof(double) ? (__DOUBLE_BITS((__y)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__y)) == 0)) && __x != __y; }
static inline int __islessgreater(double_t __x, double_t __y) { return !(( sizeof((__x)) == sizeof(float) ? (__FLOAT_BITS((__x)) & 0x7fffffff) > 0x7f800000 : sizeof((__x)) == sizeof(double) ? (__DOUBLE_BITS((__x)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__x)) == 0) ? ((void)(__y),1) : ( sizeof((__y)) == sizeof(float) ? (__FLOAT_BITS((__y)) & 0x7fffffff) > 0x7f800000 : sizeof((__y)) == sizeof(double) ? (__DOUBLE_BITS((__y)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__y)) == 0)) && __x != __y; }
static inline int __islessgreaterl(long double __x, long double __y) { return !(( sizeof((__x)) == sizeof(float) ? (__FLOAT_BITS((__x)) & 0x7fffffff) > 0x7f800000 : sizeof((__x)) == sizeof(double) ? (__DOUBLE_BITS((__x)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__x)) == 0) ? ((void)(__y),1) : ( sizeof((__y)) == sizeof(float) ? (__FLOAT_BITS((__y)) & 0x7fffffff) > 0x7f800000 : sizeof((__y)) == sizeof(double) ? (__DOUBLE_BITS((__y)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__y)) == 0)) && __x != __y; }
static inline int __isgreaterf(float_t __x, float_t __y) { return !(( sizeof((__x)) == sizeof(float) ? (__FLOAT_BITS((__x)) & 0x7fffffff) > 0x7f800000 : sizeof((__x)) == sizeof(double) ? (__DOUBLE_BITS((__x)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__x)) == 0) ? ((void)(__y),1) : ( sizeof((__y)) == sizeof(float) ? (__FLOAT_BITS((__y)) & 0x7fffffff) > 0x7f800000 : sizeof((__y)) == sizeof(double) ? (__DOUBLE_BITS((__y)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__y)) == 0)) && __x > __y; }
static inline int __isgreater(double_t __x, double_t __y) { return !(( sizeof((__x)) == sizeof(float) ? (__FLOAT_BITS((__x)) & 0x7fffffff) > 0x7f800000 : sizeof((__x)) == sizeof(double) ? (__DOUBLE_BITS((__x)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__x)) == 0) ? ((void)(__y),1) : ( sizeof((__y)) == sizeof(float) ? (__FLOAT_BITS((__y)) & 0x7fffffff) > 0x7f800000 : sizeof((__y)) == sizeof(double) ? (__DOUBLE_BITS((__y)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__y)) == 0)) && __x > __y; }
static inline int __isgreaterl(long double __x, long double __y) { return !(( sizeof((__x)) == sizeof(float) ? (__FLOAT_BITS((__x)) & 0x7fffffff) > 0x7f800000 : sizeof((__x)) == sizeof(double) ? (__DOUBLE_BITS((__x)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__x)) == 0) ? ((void)(__y),1) : ( sizeof((__y)) == sizeof(float) ? (__FLOAT_BITS((__y)) & 0x7fffffff) > 0x7f800000 : sizeof((__y)) == sizeof(double) ? (__DOUBLE_BITS((__y)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__y)) == 0)) && __x > __y; }
static inline int __isgreaterequalf(float_t __x, float_t __y) { return !(( sizeof((__x)) == sizeof(float) ? (__FLOAT_BITS((__x)) & 0x7fffffff) > 0x7f800000 : sizeof((__x)) == sizeof(double) ? (__DOUBLE_BITS((__x)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__x)) == 0) ? ((void)(__y),1) : ( sizeof((__y)) == sizeof(float) ? (__FLOAT_BITS((__y)) & 0x7fffffff) > 0x7f800000 : sizeof((__y)) == sizeof(double) ? (__DOUBLE_BITS((__y)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__y)) == 0)) && __x >= __y; }
static inline int __isgreaterequal(double_t __x, double_t __y) { return !(( sizeof((__x)) == sizeof(float) ? (__FLOAT_BITS((__x)) & 0x7fffffff) > 0x7f800000 : sizeof((__x)) == sizeof(double) ? (__DOUBLE_BITS((__x)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__x)) == 0) ? ((void)(__y),1) : ( sizeof((__y)) == sizeof(float) ? (__FLOAT_BITS((__y)) & 0x7fffffff) > 0x7f800000 : sizeof((__y)) == sizeof(double) ? (__DOUBLE_BITS((__y)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__y)) == 0)) && __x >= __y; }
static inline int __isgreaterequall(long double __x, long double __y) { return !(( sizeof((__x)) == sizeof(float) ? (__FLOAT_BITS((__x)) & 0x7fffffff) > 0x7f800000 : sizeof((__x)) == sizeof(double) ? (__DOUBLE_BITS((__x)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__x)) == 0) ? ((void)(__y),1) : ( sizeof((__y)) == sizeof(float) ? (__FLOAT_BITS((__y)) & 0x7fffffff) > 0x7f800000 : sizeof((__y)) == sizeof(double) ? (__DOUBLE_BITS((__y)) & -1ULL>>1) > 0x7ffULL<<52 : __fpclassifyl((__y)) == 0)) && __x >= __y; }
# 135 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/math.h" 3
double acos(double);
float acosf(float);
long double acosl(long double);

double acosh(double);
float acoshf(float);
long double acoshl(long double);

double asin(double);
float asinf(float);
long double asinl(long double);

double asinh(double);
float asinhf(float);
long double asinhl(long double);

double atan(double);
float atanf(float);
long double atanl(long double);

double atan2(double, double);
float atan2f(float, float);
long double atan2l(long double, long double);

double atanh(double);
float atanhf(float);
long double atanhl(long double);

double cbrt(double);
float cbrtf(float);
long double cbrtl(long double);

double ceil(double);
float ceilf(float);
long double ceill(long double);

double copysign(double, double);
float copysignf(float, float);
long double copysignl(long double, long double);

double cos(double);
float cosf(float);
long double cosl(long double);

double cosh(double);
float coshf(float);
long double coshl(long double);

double erf(double);
float erff(float);
long double erfl(long double);

double erfc(double);
float erfcf(float);
long double erfcl(long double);

double exp(double);
float expf(float);
long double expl(long double);

double exp2(double);
float exp2f(float);
long double exp2l(long double);

double expm1(double);
float expm1f(float);
long double expm1l(long double);

double fabs(double);
float fabsf(float);
long double fabsl(long double);

double fdim(double, double);
float fdimf(float, float);
long double fdiml(long double, long double);

double floor(double);
float floorf(float);
long double floorl(long double);

double fma(double, double, double);
float fmaf(float, float, float);
long double fmal(long double, long double, long double);

double fmax(double, double);
float fmaxf(float, float);
long double fmaxl(long double, long double);

double fmin(double, double);
float fminf(float, float);
long double fminl(long double, long double);

double fmod(double, double);
float fmodf(float, float);
long double fmodl(long double, long double);

double frexp(double, int *);
float frexpf(float, int *);
long double frexpl(long double, int *);

double hypot(double, double);
float hypotf(float, float);
long double hypotl(long double, long double);

int ilogb(double);
int ilogbf(float);
int ilogbl(long double);

double ldexp(double, int);
float ldexpf(float, int);
long double ldexpl(long double, int);

double lgamma(double);
float lgammaf(float);
long double lgammal(long double);

long long llrint(double);
long long llrintf(float);
long long llrintl(long double);

long long llround(double);
long long llroundf(float);
long long llroundl(long double);

double log(double);
float logf(float);
long double logl(long double);

double log10(double);
float log10f(float);
long double log10l(long double);

double log1p(double);
float log1pf(float);
long double log1pl(long double);

double log2(double);
float log2f(float);
long double log2l(long double);

double logb(double);
float logbf(float);
long double logbl(long double);

long lrint(double);
long lrintf(float);
long lrintl(long double);

long lround(double);
long lroundf(float);
long lroundl(long double);

double modf(double, double *);
float modff(float, float *);
long double modfl(long double, long double *);

double nan(const char *);
float nanf(const char *);
long double nanl(const char *);

double nearbyint(double);
float nearbyintf(float);
long double nearbyintl(long double);

double nextafter(double, double);
float nextafterf(float, float);
long double nextafterl(long double, long double);

double nexttoward(double, long double);
float nexttowardf(float, long double);
long double nexttowardl(long double, long double);

double pow(double, double);
float powf(float, float);
long double powl(long double, long double);

double remainder(double, double);
float remainderf(float, float);
long double remainderl(long double, long double);

double remquo(double, double, int *);
float remquof(float, float, int *);
long double remquol(long double, long double, int *);

double rint(double);
float rintf(float);
long double rintl(long double);

double round(double);
float roundf(float);
long double roundl(long double);

double scalbln(double, long);
float scalblnf(float, long);
long double scalblnl(long double, long);

double scalbn(double, int);
float scalbnf(float, int);
long double scalbnl(long double, int);

double sin(double);
float sinf(float);
long double sinl(long double);

double sinh(double);
float sinhf(float);
long double sinhl(long double);

double sqrt(double);
float sqrtf(float);
long double sqrtl(long double);

double tan(double);
float tanf(float);
long double tanl(long double);

double tanh(double);
float tanhf(float);
long double tanhl(long double);

double tgamma(double);
float tgammaf(float);
long double tgammal(long double);

double trunc(double);
float truncf(float);
long double truncl(long double);
# 13 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/compat/math.h" 2 3
# 91 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h" 2






# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/alloca.h" 1 3








# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 1 3
# 10 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/alloca.h" 2 3

void *alloca(size_t);
# 98 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h" 2
# 184 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h"
typedef enum
{
    SDL_FALSE = 0,
    SDL_TRUE = 1
} SDL_bool;







typedef int8_t Sint8;





typedef uint8_t Uint8;





typedef int16_t Sint16;





typedef uint16_t Uint16;





typedef int32_t Sint32;





typedef uint32_t Uint32;






typedef int64_t Sint64;





typedef uint64_t Uint64;
# 394 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h"
typedef int SDL_compile_time_assert_uint8[(sizeof(Uint8) == 1) * 2 - 1];
typedef int SDL_compile_time_assert_sint8[(sizeof(Sint8) == 1) * 2 - 1];
typedef int SDL_compile_time_assert_uint16[(sizeof(Uint16) == 2) * 2 - 1];
typedef int SDL_compile_time_assert_sint16[(sizeof(Sint16) == 2) * 2 - 1];
typedef int SDL_compile_time_assert_uint32[(sizeof(Uint32) == 4) * 2 - 1];
typedef int SDL_compile_time_assert_sint32[(sizeof(Sint32) == 4) * 2 - 1];
typedef int SDL_compile_time_assert_uint64[(sizeof(Uint64) == 8) * 2 - 1];
typedef int SDL_compile_time_assert_sint64[(sizeof(Sint64) == 8) * 2 - 1];
# 415 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h"
typedef enum
{
    DUMMY_ENUM_VALUE
} SDL_DUMMY_ENUM;

typedef int SDL_compile_time_assert_enum[(sizeof(SDL_DUMMY_ENUM) == sizeof(int)) * 2 - 1];




# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 426 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h" 2
# 439 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h"
extern __attribute__ ((visibility("default"))) void * SDL_malloc(size_t size);
extern __attribute__ ((visibility("default"))) void * SDL_calloc(size_t nmemb, size_t size);
extern __attribute__ ((visibility("default"))) void * SDL_realloc(void *mem, size_t size);
extern __attribute__ ((visibility("default"))) void SDL_free(void *mem);

typedef void *( *SDL_malloc_func)(size_t size);
typedef void *( *SDL_calloc_func)(size_t nmemb, size_t size);
typedef void *( *SDL_realloc_func)(void *mem, size_t size);
typedef void ( *SDL_free_func)(void *mem);






extern __attribute__ ((visibility("default"))) void SDL_GetOriginalMemoryFunctions(SDL_malloc_func *malloc_func,
                                                            SDL_calloc_func *calloc_func,
                                                            SDL_realloc_func *realloc_func,
                                                            SDL_free_func *free_func);






extern __attribute__ ((visibility("default"))) void SDL_GetMemoryFunctions(SDL_malloc_func *malloc_func,
                                                    SDL_calloc_func *calloc_func,
                                                    SDL_realloc_func *realloc_func,
                                                    SDL_free_func *free_func);






extern __attribute__ ((visibility("default"))) int SDL_SetMemoryFunctions(SDL_malloc_func malloc_func,
                                                   SDL_calloc_func calloc_func,
                                                   SDL_realloc_func realloc_func,
                                                   SDL_free_func free_func);






extern __attribute__ ((visibility("default"))) int SDL_GetNumAllocations(void);

extern __attribute__ ((visibility("default"))) char * SDL_getenv(const char *name);
extern __attribute__ ((visibility("default"))) int SDL_setenv(const char *name, const char *value, int overwrite);

extern __attribute__ ((visibility("default"))) void SDL_qsort(void *base, size_t nmemb, size_t size, int ( *compare) (const void *, const void *));
extern __attribute__ ((visibility("default"))) void * SDL_bsearch(const void *key, const void *base, size_t nmemb, size_t size, int ( *compare) (const void *, const void *));

extern __attribute__ ((visibility("default"))) int SDL_abs(int x);






extern __attribute__ ((visibility("default"))) int SDL_isalpha(int x);
extern __attribute__ ((visibility("default"))) int SDL_isalnum(int x);
extern __attribute__ ((visibility("default"))) int SDL_isblank(int x);
extern __attribute__ ((visibility("default"))) int SDL_iscntrl(int x);
extern __attribute__ ((visibility("default"))) int SDL_isdigit(int x);
extern __attribute__ ((visibility("default"))) int SDL_isxdigit(int x);
extern __attribute__ ((visibility("default"))) int SDL_ispunct(int x);
extern __attribute__ ((visibility("default"))) int SDL_isspace(int x);
extern __attribute__ ((visibility("default"))) int SDL_isupper(int x);
extern __attribute__ ((visibility("default"))) int SDL_islower(int x);
extern __attribute__ ((visibility("default"))) int SDL_isprint(int x);
extern __attribute__ ((visibility("default"))) int SDL_isgraph(int x);
extern __attribute__ ((visibility("default"))) int SDL_toupper(int x);
extern __attribute__ ((visibility("default"))) int SDL_tolower(int x);

extern __attribute__ ((visibility("default"))) Uint16 SDL_crc16(Uint16 crc, const void *data, size_t len);
extern __attribute__ ((visibility("default"))) Uint32 SDL_crc32(Uint32 crc, const void *data, size_t len);

extern __attribute__ ((visibility("default"))) void * SDL_memset( void *dst, int c, size_t len);
# 529 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h"
__attribute__((always_inline)) static __inline__ void SDL_memset4(void *dst, Uint32 val, size_t dwords)
{
# 543 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h"
    size_t _n = (dwords + 3) / 4;
    Uint32 *_p = ((Uint32 *)(dst));
    Uint32 _val = (val);
    if (dwords == 0) {
        return;
    }
    switch (dwords % 4) {
        case 0: do { *_p++ = _val; __attribute__((__fallthrough__));
        case 3: *_p++ = _val; __attribute__((__fallthrough__));
        case 2: *_p++ = _val; __attribute__((__fallthrough__));
        case 1: *_p++ = _val;
        } while ( --_n );
    }

}

extern __attribute__ ((visibility("default"))) void * SDL_memcpy( void *dst, const void *src, size_t len);

extern __attribute__ ((visibility("default"))) void * SDL_memmove( void *dst, const void *src, size_t len);
extern __attribute__ ((visibility("default"))) int SDL_memcmp(const void *s1, const void *s2, size_t len);

extern __attribute__ ((visibility("default"))) size_t SDL_wcslen(const wchar_t *wstr);
extern __attribute__ ((visibility("default"))) size_t SDL_wcslcpy( wchar_t *dst, const wchar_t *src, size_t maxlen);
extern __attribute__ ((visibility("default"))) size_t SDL_wcslcat( wchar_t *dst, const wchar_t *src, size_t maxlen);
extern __attribute__ ((visibility("default"))) wchar_t * SDL_wcsdup(const wchar_t *wstr);
extern __attribute__ ((visibility("default"))) wchar_t * SDL_wcsstr(const wchar_t *haystack, const wchar_t *needle);

extern __attribute__ ((visibility("default"))) int SDL_wcscmp(const wchar_t *str1, const wchar_t *str2);
extern __attribute__ ((visibility("default"))) int SDL_wcsncmp(const wchar_t *str1, const wchar_t *str2, size_t maxlen);
extern __attribute__ ((visibility("default"))) int SDL_wcscasecmp(const wchar_t *str1, const wchar_t *str2);
extern __attribute__ ((visibility("default"))) int SDL_wcsncasecmp(const wchar_t *str1, const wchar_t *str2, size_t len);

extern __attribute__ ((visibility("default"))) size_t SDL_strlen(const char *str);
extern __attribute__ ((visibility("default"))) size_t SDL_strlcpy( char *dst, const char *src, size_t maxlen);
extern __attribute__ ((visibility("default"))) size_t SDL_utf8strlcpy( char *dst, const char *src, size_t dst_bytes);
extern __attribute__ ((visibility("default"))) size_t SDL_strlcat( char *dst, const char *src, size_t maxlen);
extern __attribute__ ((visibility("default"))) char * SDL_strdup(const char *str);
extern __attribute__ ((visibility("default"))) char * SDL_strrev(char *str);
extern __attribute__ ((visibility("default"))) char * SDL_strupr(char *str);
extern __attribute__ ((visibility("default"))) char * SDL_strlwr(char *str);
extern __attribute__ ((visibility("default"))) char * SDL_strchr(const char *str, int c);
extern __attribute__ ((visibility("default"))) char * SDL_strrchr(const char *str, int c);
extern __attribute__ ((visibility("default"))) char * SDL_strstr(const char *haystack, const char *needle);
extern __attribute__ ((visibility("default"))) char * SDL_strtokr(char *s1, const char *s2, char **saveptr);
extern __attribute__ ((visibility("default"))) size_t SDL_utf8strlen(const char *str);
extern __attribute__ ((visibility("default"))) size_t SDL_utf8strnlen(const char *str, size_t bytes);

extern __attribute__ ((visibility("default"))) char * SDL_itoa(int value, char *str, int radix);
extern __attribute__ ((visibility("default"))) char * SDL_uitoa(unsigned int value, char *str, int radix);
extern __attribute__ ((visibility("default"))) char * SDL_ltoa(long value, char *str, int radix);
extern __attribute__ ((visibility("default"))) char * SDL_ultoa(unsigned long value, char *str, int radix);
extern __attribute__ ((visibility("default"))) char * SDL_lltoa(Sint64 value, char *str, int radix);
extern __attribute__ ((visibility("default"))) char * SDL_ulltoa(Uint64 value, char *str, int radix);

extern __attribute__ ((visibility("default"))) int SDL_atoi(const char *str);
extern __attribute__ ((visibility("default"))) double SDL_atof(const char *str);
extern __attribute__ ((visibility("default"))) long SDL_strtol(const char *str, char **endp, int base);
extern __attribute__ ((visibility("default"))) unsigned long SDL_strtoul(const char *str, char **endp, int base);
extern __attribute__ ((visibility("default"))) Sint64 SDL_strtoll(const char *str, char **endp, int base);
extern __attribute__ ((visibility("default"))) Uint64 SDL_strtoull(const char *str, char **endp, int base);
extern __attribute__ ((visibility("default"))) double SDL_strtod(const char *str, char **endp);

extern __attribute__ ((visibility("default"))) int SDL_strcmp(const char *str1, const char *str2);
extern __attribute__ ((visibility("default"))) int SDL_strncmp(const char *str1, const char *str2, size_t maxlen);
extern __attribute__ ((visibility("default"))) int SDL_strcasecmp(const char *str1, const char *str2);
extern __attribute__ ((visibility("default"))) int SDL_strncasecmp(const char *str1, const char *str2, size_t len);

extern __attribute__ ((visibility("default"))) int SDL_sscanf(const char *text, const char *fmt, ...) __attribute__ (( format( __scanf__, 2, 2 +1 )));
extern __attribute__ ((visibility("default"))) int SDL_vsscanf(const char *text, const char *fmt, va_list ap);
extern __attribute__ ((visibility("default"))) int SDL_snprintf( char *text, size_t maxlen, const char *fmt, ... ) __attribute__ (( format( __printf__, 3, 3 +1 )));
extern __attribute__ ((visibility("default"))) int SDL_vsnprintf( char *text, size_t maxlen, const char *fmt, va_list ap);
extern __attribute__ ((visibility("default"))) int SDL_asprintf(char **strp, const char *fmt, ...) __attribute__ (( format( __printf__, 2, 2 +1 )));
extern __attribute__ ((visibility("default"))) int SDL_vasprintf(char **strp, const char *fmt, va_list ap);
# 637 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h"
extern __attribute__ ((visibility("default"))) double SDL_acos(double x);
extern __attribute__ ((visibility("default"))) float SDL_acosf(float x);
extern __attribute__ ((visibility("default"))) double SDL_asin(double x);
extern __attribute__ ((visibility("default"))) float SDL_asinf(float x);
extern __attribute__ ((visibility("default"))) double SDL_atan(double x);
extern __attribute__ ((visibility("default"))) float SDL_atanf(float x);
extern __attribute__ ((visibility("default"))) double SDL_atan2(double y, double x);
extern __attribute__ ((visibility("default"))) float SDL_atan2f(float y, float x);
extern __attribute__ ((visibility("default"))) double SDL_ceil(double x);
extern __attribute__ ((visibility("default"))) float SDL_ceilf(float x);
extern __attribute__ ((visibility("default"))) double SDL_copysign(double x, double y);
extern __attribute__ ((visibility("default"))) float SDL_copysignf(float x, float y);
extern __attribute__ ((visibility("default"))) double SDL_cos(double x);
extern __attribute__ ((visibility("default"))) float SDL_cosf(float x);
extern __attribute__ ((visibility("default"))) double SDL_exp(double x);
extern __attribute__ ((visibility("default"))) float SDL_expf(float x);
extern __attribute__ ((visibility("default"))) double SDL_fabs(double x);
extern __attribute__ ((visibility("default"))) float SDL_fabsf(float x);
extern __attribute__ ((visibility("default"))) double SDL_floor(double x);
extern __attribute__ ((visibility("default"))) float SDL_floorf(float x);
extern __attribute__ ((visibility("default"))) double SDL_trunc(double x);
extern __attribute__ ((visibility("default"))) float SDL_truncf(float x);
extern __attribute__ ((visibility("default"))) double SDL_fmod(double x, double y);
extern __attribute__ ((visibility("default"))) float SDL_fmodf(float x, float y);
extern __attribute__ ((visibility("default"))) double SDL_log(double x);
extern __attribute__ ((visibility("default"))) float SDL_logf(float x);
extern __attribute__ ((visibility("default"))) double SDL_log10(double x);
extern __attribute__ ((visibility("default"))) float SDL_log10f(float x);
extern __attribute__ ((visibility("default"))) double SDL_pow(double x, double y);
extern __attribute__ ((visibility("default"))) float SDL_powf(float x, float y);
extern __attribute__ ((visibility("default"))) double SDL_round(double x);
extern __attribute__ ((visibility("default"))) float SDL_roundf(float x);
extern __attribute__ ((visibility("default"))) long SDL_lround(double x);
extern __attribute__ ((visibility("default"))) long SDL_lroundf(float x);
extern __attribute__ ((visibility("default"))) double SDL_scalbn(double x, int n);
extern __attribute__ ((visibility("default"))) float SDL_scalbnf(float x, int n);
extern __attribute__ ((visibility("default"))) double SDL_sin(double x);
extern __attribute__ ((visibility("default"))) float SDL_sinf(float x);
extern __attribute__ ((visibility("default"))) double SDL_sqrt(double x);
extern __attribute__ ((visibility("default"))) float SDL_sqrtf(float x);
extern __attribute__ ((visibility("default"))) double SDL_tan(double x);
extern __attribute__ ((visibility("default"))) float SDL_tanf(float x);
# 687 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h"
typedef struct _SDL_iconv_t *SDL_iconv_t;
extern __attribute__ ((visibility("default"))) SDL_iconv_t SDL_iconv_open(const char *tocode,
                                                   const char *fromcode);
extern __attribute__ ((visibility("default"))) int SDL_iconv_close(SDL_iconv_t cd);
extern __attribute__ ((visibility("default"))) size_t SDL_iconv(SDL_iconv_t cd, const char **inbuf,
                                         size_t * inbytesleft, char **outbuf,
                                         size_t * outbytesleft);







extern __attribute__ ((visibility("default"))) char * SDL_iconv_string(const char *tocode,
                                               const char *fromcode,
                                               const char *inbuf,
                                               size_t inbytesleft);
# 757 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h"
__attribute__((always_inline)) static __inline__ void *SDL_memcpy4( void *dst, const void *src, size_t dwords)
{
    return SDL_memcpy(dst, src, dwords * 4);
}







__attribute__((always_inline)) static __inline__ int SDL_size_mul_overflow (size_t a,
                                            size_t b,
                                            size_t *ret)
{
    if (a != 0 && b > 4294967295UL / a) {
        return -1;
    }
    *ret = a * b;
    return 0;
}





__attribute__((always_inline)) static __inline__ int _SDL_size_mul_overflow_builtin (size_t a,
                                                     size_t b,
                                                     size_t *ret)
{
    return __builtin_mul_overflow(a, b, ret) == 0 ? 0 : -1;
}
# 798 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h"
__attribute__((always_inline)) static __inline__ int SDL_size_add_overflow (size_t a,
                                            size_t b,
                                            size_t *ret)
{
    if (b > 4294967295UL - a) {
        return -1;
    }
    *ret = a + b;
    return 0;
}




__attribute__((always_inline)) static __inline__ int _SDL_size_add_overflow_builtin (size_t a,
                                                     size_t b,
                                                     size_t *ret)
{
    return __builtin_add_overflow(a, b, ret) == 0 ? 0 : -1;
}







# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 826 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_stdinc.h" 2
# 26 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_main.h" 2
# 137 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_main.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 138 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_main.h" 2







typedef int (*SDL_main_func)(int argc, char *argv[]);
extern int SDL_main(int argc, char *argv[]);
# 162 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_main.h"
extern __attribute__ ((visibility("default"))) void SDL_SetMainReady(void);
# 262 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_main.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 263 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_main.h" 2
# 33 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2

# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_assert.h" 1
# 27 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_assert.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 28 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_assert.h" 2
# 108 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_assert.h"
typedef enum
{
    SDL_ASSERTION_RETRY,
    SDL_ASSERTION_BREAK,
    SDL_ASSERTION_ABORT,
    SDL_ASSERTION_IGNORE,
    SDL_ASSERTION_ALWAYS_IGNORE
} SDL_AssertState;

typedef struct SDL_AssertData
{
    int always_ignore;
    unsigned int trigger_count;
    const char *condition;
    const char *filename;
    int linenum;
    const char *function;
    const struct SDL_AssertData *next;
} SDL_AssertData;




extern __attribute__ ((visibility("default"))) SDL_AssertState SDL_ReportAssertion(SDL_AssertData *,
                                                             const char *,
                                                             const char *, int)





   __attribute__((analyzer_noreturn))


;
# 202 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_assert.h"
typedef SDL_AssertState ( *SDL_AssertionHandler)(
                                 const SDL_AssertData* data, void* userdata);
# 226 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_assert.h"
extern __attribute__ ((visibility("default"))) void SDL_SetAssertionHandler(
                                            SDL_AssertionHandler handler,
                                            void *userdata);
# 245 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_assert.h"
extern __attribute__ ((visibility("default"))) SDL_AssertionHandler SDL_GetDefaultAssertionHandler(void);
# 268 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_assert.h"
extern __attribute__ ((visibility("default"))) SDL_AssertionHandler SDL_GetAssertionHandler(void **puserdata);
# 296 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_assert.h"
extern __attribute__ ((visibility("default"))) const SDL_AssertData * SDL_GetAssertionReport(void);
# 310 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_assert.h"
extern __attribute__ ((visibility("default"))) void SDL_ResetAssertionReport(void);
# 322 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_assert.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 323 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_assert.h" 2
# 35 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_atomic.h" 1
# 65 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_atomic.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 66 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_atomic.h" 2
# 89 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_atomic.h"
typedef int SDL_SpinLock;
# 106 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_atomic.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_AtomicTryLock(SDL_SpinLock *lock);
# 121 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_atomic.h"
extern __attribute__ ((visibility("default"))) void SDL_AtomicLock(SDL_SpinLock *lock);
# 138 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_atomic.h"
extern __attribute__ ((visibility("default"))) void SDL_AtomicUnlock(SDL_SpinLock *lock);
# 183 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_atomic.h"
extern __attribute__ ((visibility("default"))) void SDL_MemoryBarrierReleaseFunction(void);
extern __attribute__ ((visibility("default"))) void SDL_MemoryBarrierAcquireFunction(void);
# 264 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_atomic.h"
typedef struct { int value; } SDL_atomic_t;
# 283 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_atomic.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_AtomicCAS(SDL_atomic_t *a, int oldval, int newval);
# 301 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_atomic.h"
extern __attribute__ ((visibility("default"))) int SDL_AtomicSet(SDL_atomic_t *a, int v);
# 316 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_atomic.h"
extern __attribute__ ((visibility("default"))) int SDL_AtomicGet(SDL_atomic_t *a);
# 335 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_atomic.h"
extern __attribute__ ((visibility("default"))) int SDL_AtomicAdd(SDL_atomic_t *a, int v);
# 371 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_atomic.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_AtomicCASPtr(void **a, void *oldval, void *newval);
# 388 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_atomic.h"
extern __attribute__ ((visibility("default"))) void* SDL_AtomicSetPtr(void **a, void* v);
# 404 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_atomic.h"
extern __attribute__ ((visibility("default"))) void* SDL_AtomicGetPtr(void **a);






# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 412 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_atomic.h" 2
# 36 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h" 1
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_error.h" 1
# 33 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_error.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_error.h" 2
# 66 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_error.h"
extern __attribute__ ((visibility("default"))) int SDL_SetError( const char *fmt, ...) __attribute__ (( format( __printf__, 1, 1 +1 )));
# 103 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_error.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GetError(void);
# 120 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_error.h"
extern __attribute__ ((visibility("default"))) char * SDL_GetErrorMsg(char *errstr, int maxlen);
# 130 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_error.h"
extern __attribute__ ((visibility("default"))) void SDL_ClearError(void);
# 142 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_error.h"
typedef enum
{
    SDL_ENOMEM,
    SDL_EFREAD,
    SDL_EFWRITE,
    SDL_EFSEEK,
    SDL_UNSUPPORTED,
    SDL_LASTERROR
} SDL_errorcode;

extern __attribute__ ((visibility("default"))) int SDL_Error(SDL_errorcode code);






# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 160 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_error.h" 2
# 35 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_endian.h" 1
# 113 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_endian.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 114 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_endian.h" 2
# 296 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_endian.h"
__attribute__((always_inline)) static __inline__ float
SDL_SwapFloat(float x)
{
    union {
        float f;
        Uint32 ui32;
    } swapper;
    swapper.f = x;
    swapper.ui32 = __builtin_bswap32(swapper.ui32);
    return swapper.f;
}
# 344 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_endian.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 345 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_endian.h" 2
# 36 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h" 1
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 35 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h" 2
# 58 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
struct SDL_mutex;
typedef struct SDL_mutex SDL_mutex;
# 81 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
extern __attribute__ ((visibility("default"))) SDL_mutex * SDL_CreateMutex(void);
# 99 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
extern __attribute__ ((visibility("default"))) int SDL_LockMutex(SDL_mutex * mutex);
# 122 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
extern __attribute__ ((visibility("default"))) int SDL_TryLockMutex(SDL_mutex * mutex);
# 141 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
extern __attribute__ ((visibility("default"))) int SDL_UnlockMutex(SDL_mutex * mutex);
# 162 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
extern __attribute__ ((visibility("default"))) void SDL_DestroyMutex(SDL_mutex * mutex);
# 173 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
struct SDL_semaphore;
typedef struct SDL_semaphore SDL_sem;
# 198 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
extern __attribute__ ((visibility("default"))) SDL_sem * SDL_CreateSemaphore(Uint32 initial_value);
# 217 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
extern __attribute__ ((visibility("default"))) void SDL_DestroySemaphore(SDL_sem * sem);
# 244 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
extern __attribute__ ((visibility("default"))) int SDL_SemWait(SDL_sem * sem);
# 268 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
extern __attribute__ ((visibility("default"))) int SDL_SemTryWait(SDL_sem * sem);
# 293 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
extern __attribute__ ((visibility("default"))) int SDL_SemWaitTimeout(SDL_sem * sem, Uint32 ms);
# 311 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
extern __attribute__ ((visibility("default"))) int SDL_SemPost(SDL_sem * sem);
# 323 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
extern __attribute__ ((visibility("default"))) Uint32 SDL_SemValue(SDL_sem * sem);
# 334 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
struct SDL_cond;
typedef struct SDL_cond SDL_cond;
# 351 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
extern __attribute__ ((visibility("default"))) SDL_cond * SDL_CreateCond(void);
# 366 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
extern __attribute__ ((visibility("default"))) void SDL_DestroyCond(SDL_cond * cond);
# 383 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
extern __attribute__ ((visibility("default"))) int SDL_CondSignal(SDL_cond * cond);
# 400 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
extern __attribute__ ((visibility("default"))) int SDL_CondBroadcast(SDL_cond * cond);
# 428 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
extern __attribute__ ((visibility("default"))) int SDL_CondWait(SDL_cond * cond, SDL_mutex * mutex);
# 457 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
extern __attribute__ ((visibility("default"))) int SDL_CondWaitTimeout(SDL_cond * cond,
                                                SDL_mutex * mutex, Uint32 ms);
# 467 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 468 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mutex.h" 2
# 37 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_thread.h" 1
# 49 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_thread.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 50 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_thread.h" 2






struct SDL_Thread;
typedef struct SDL_Thread SDL_Thread;


typedef unsigned long SDL_threadID;


typedef unsigned int SDL_TLSID;
# 75 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_thread.h"
typedef enum {
    SDL_THREAD_PRIORITY_LOW,
    SDL_THREAD_PRIORITY_NORMAL,
    SDL_THREAD_PRIORITY_HIGH,
    SDL_THREAD_PRIORITY_TIME_CRITICAL
} SDL_ThreadPriority;







typedef int ( * SDL_ThreadFunction) (void *data);
# 207 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_thread.h"
extern __attribute__ ((visibility("default"))) SDL_Thread *
SDL_CreateThread(SDL_ThreadFunction fn, const char *name, void *data);
# 253 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_thread.h"
extern __attribute__ ((visibility("default"))) SDL_Thread *
SDL_CreateThreadWithStackSize(SDL_ThreadFunction fn, const char *name, const size_t stacksize, void *data);
# 272 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_thread.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GetThreadName(SDL_Thread *thread);
# 290 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_thread.h"
extern __attribute__ ((visibility("default"))) SDL_threadID SDL_ThreadID(void);
# 307 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_thread.h"
extern __attribute__ ((visibility("default"))) SDL_threadID SDL_GetThreadID(SDL_Thread * thread);
# 322 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_thread.h"
extern __attribute__ ((visibility("default"))) int SDL_SetThreadPriority(SDL_ThreadPriority priority);
# 357 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_thread.h"
extern __attribute__ ((visibility("default"))) void SDL_WaitThread(SDL_Thread * thread, int *status);
# 393 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_thread.h"
extern __attribute__ ((visibility("default"))) void SDL_DetachThread(SDL_Thread * thread);
# 408 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_thread.h"
extern __attribute__ ((visibility("default"))) SDL_TLSID SDL_TLSCreate(void);
# 422 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_thread.h"
extern __attribute__ ((visibility("default"))) void * SDL_TLSGet(SDL_TLSID id);
# 447 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_thread.h"
extern __attribute__ ((visibility("default"))) int SDL_TLSSet(SDL_TLSID id, const void *value, void ( *destructor)(void*));






extern __attribute__ ((visibility("default"))) void SDL_TLSCleanup(void);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 461 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_thread.h" 2
# 38 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h" 1
# 35 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 36 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h" 2
# 52 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
typedef struct SDL_RWops
{



    Sint64 ( * size) (struct SDL_RWops * context);







    Sint64 ( * seek) (struct SDL_RWops * context, Sint64 offset,
                             int whence);







    size_t ( * read) (struct SDL_RWops * context, void *ptr,
                             size_t size, size_t maxnum);







    size_t ( * write) (struct SDL_RWops * context, const void *ptr,
                              size_t size, size_t num);






    int ( * close) (struct SDL_RWops * context);

    Uint32 type;
    union
    {
# 116 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
        struct
        {
            SDL_bool autoclose;
            FILE *fp;
        } stdio;

        struct
        {
            Uint8 *base;
            Uint8 *here;
            Uint8 *stop;
        } mem;
        struct
        {
            void *data1;
            void *data2;
        } unknown;
    } hidden;

} SDL_RWops;
# 206 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) SDL_RWops * SDL_RWFromFile(const char *file,
                                                  const char *mode);



extern __attribute__ ((visibility("default"))) SDL_RWops * SDL_RWFromFP(FILE * fp, SDL_bool autoclose);
# 280 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) SDL_RWops * SDL_RWFromMem(void *mem, int size);
# 314 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) SDL_RWops * SDL_RWFromConstMem(const void *mem,
                                                      int size);
# 343 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) SDL_RWops * SDL_AllocRW(void);
# 367 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) void SDL_FreeRW(SDL_RWops * area);
# 385 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) Sint64 SDL_RWsize(SDL_RWops *context);
# 422 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) Sint64 SDL_RWseek(SDL_RWops *context,
                                          Sint64 offset, int whence);
# 450 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) Sint64 SDL_RWtell(SDL_RWops *context);
# 482 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) size_t SDL_RWread(SDL_RWops *context,
                                          void *ptr, size_t size,
                                          size_t maxnum);
# 516 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) size_t SDL_RWwrite(SDL_RWops *context,
                                           const void *ptr, size_t size,
                                           size_t num);
# 547 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) int SDL_RWclose(SDL_RWops *context);
# 565 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) void * SDL_LoadFile_RW(SDL_RWops *src,
                                              size_t *datasize,
                                              int freesrc);
# 587 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) void * SDL_LoadFile(const char *file, size_t *datasize);
# 607 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) Uint8 SDL_ReadU8(SDL_RWops * src);
# 623 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) Uint16 SDL_ReadLE16(SDL_RWops * src);
# 639 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) Uint16 SDL_ReadBE16(SDL_RWops * src);
# 655 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) Uint32 SDL_ReadLE32(SDL_RWops * src);
# 671 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) Uint32 SDL_ReadBE32(SDL_RWops * src);
# 687 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) Uint64 SDL_ReadLE64(SDL_RWops * src);
# 703 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) Uint64 SDL_ReadBE64(SDL_RWops * src);
# 725 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) size_t SDL_WriteU8(SDL_RWops * dst, Uint8 value);
# 743 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) size_t SDL_WriteLE16(SDL_RWops * dst, Uint16 value);
# 760 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) size_t SDL_WriteBE16(SDL_RWops * dst, Uint16 value);
# 778 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) size_t SDL_WriteLE32(SDL_RWops * dst, Uint32 value);
# 795 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) size_t SDL_WriteBE32(SDL_RWops * dst, Uint32 value);
# 813 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) size_t SDL_WriteLE64(SDL_RWops * dst, Uint64 value);
# 830 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h"
extern __attribute__ ((visibility("default"))) size_t SDL_WriteBE64(SDL_RWops * dst, Uint64 value);






# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 838 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rwops.h" 2
# 39 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h" 2

# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 41 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h" 2
# 66 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
typedef Uint16 SDL_AudioFormat;
# 165 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
typedef void ( * SDL_AudioCallback) (void *userdata, Uint8 * stream,
                                            int len);
# 180 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
typedef struct SDL_AudioSpec
{
    int freq;
    SDL_AudioFormat format;
    Uint8 channels;
    Uint8 silence;
    Uint16 samples;
    Uint16 padding;
    Uint32 size;
    SDL_AudioCallback callback;
    void *userdata;
} SDL_AudioSpec;


struct SDL_AudioCVT;
typedef void ( * SDL_AudioFilter) (struct SDL_AudioCVT * cvt,
                                          SDL_AudioFormat format);
# 231 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
typedef struct SDL_AudioCVT
{
    int needed;
    SDL_AudioFormat src_format;
    SDL_AudioFormat dst_format;
    double rate_incr;
    Uint8 *buf;
    int len;
    int len_cvt;
    int len_mult;
    double len_ratio;
    SDL_AudioFilter filters[9 + 1];
    int filter_index;
} __attribute__((packed)) SDL_AudioCVT;
# 276 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) int SDL_GetNumAudioDrivers(void);
# 298 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GetAudioDriver(int index);
# 325 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) int SDL_AudioInit(const char *driver_name);
# 339 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) void SDL_AudioQuit(void);
# 358 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GetCurrentAudioDriver(void);
# 407 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) int SDL_OpenAudio(SDL_AudioSpec * desired,
                                          SDL_AudioSpec * obtained);
# 419 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
typedef Uint32 SDL_AudioDeviceID;
# 465 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) int SDL_GetNumAudioDevices(int iscapture);
# 492 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GetAudioDeviceName(int index,
                                                           int iscapture);
# 518 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) int SDL_GetAudioDeviceSpec(int index,
                                                   int iscapture,
                                                   SDL_AudioSpec *spec);
# 553 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) int SDL_GetDefaultAudioInfo(char **name,
                                                    SDL_AudioSpec *spec,
                                                    int iscapture);
# 669 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) SDL_AudioDeviceID SDL_OpenAudioDevice(
                                                  const char *device,
                                                  int iscapture,
                                                  const SDL_AudioSpec *desired,
                                                  SDL_AudioSpec *obtained,
                                                  int allowed_changes);
# 684 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
typedef enum
{
    SDL_AUDIO_STOPPED = 0,
    SDL_AUDIO_PLAYING,
    SDL_AUDIO_PAUSED
} SDL_AudioStatus;
# 709 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) SDL_AudioStatus SDL_GetAudioStatus(void);
# 722 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) SDL_AudioStatus SDL_GetAudioDeviceStatus(SDL_AudioDeviceID dev);
# 755 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) void SDL_PauseAudio(int pause_on);
# 785 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) void SDL_PauseAudioDevice(SDL_AudioDeviceID dev,
                                                  int pause_on);
# 870 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) SDL_AudioSpec * SDL_LoadWAV_RW(SDL_RWops * src,
                                                      int freesrc,
                                                      SDL_AudioSpec * spec,
                                                      Uint8 ** audio_buf,
                                                      Uint32 * audio_len);
# 898 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) void SDL_FreeWAV(Uint8 * audio_buf);
# 932 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) int SDL_BuildAudioCVT(SDL_AudioCVT * cvt,
                                              SDL_AudioFormat src_format,
                                              Uint8 src_channels,
                                              int src_rate,
                                              SDL_AudioFormat dst_format,
                                              Uint8 dst_channels,
                                              int dst_rate);
# 978 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) int SDL_ConvertAudio(SDL_AudioCVT * cvt);
# 988 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
struct _SDL_AudioStream;
typedef struct _SDL_AudioStream SDL_AudioStream;
# 1011 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) SDL_AudioStream * SDL_NewAudioStream(const SDL_AudioFormat src_format,
                                           const Uint8 src_channels,
                                           const int src_rate,
                                           const SDL_AudioFormat dst_format,
                                           const Uint8 dst_channels,
                                           const int dst_rate);
# 1035 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) int SDL_AudioStreamPut(SDL_AudioStream *stream, const void *buf, int len);
# 1054 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) int SDL_AudioStreamGet(SDL_AudioStream *stream, void *buf, int len);
# 1072 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) int SDL_AudioStreamAvailable(SDL_AudioStream *stream);
# 1091 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) int SDL_AudioStreamFlush(SDL_AudioStream *stream);
# 1105 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) void SDL_AudioStreamClear(SDL_AudioStream *stream);
# 1119 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) void SDL_FreeAudioStream(SDL_AudioStream *stream);
# 1145 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) void SDL_MixAudio(Uint8 * dst, const Uint8 * src,
                                          Uint32 len, int volume);
# 1178 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) void SDL_MixAudioFormat(Uint8 * dst,
                                                const Uint8 * src,
                                                SDL_AudioFormat format,
                                                Uint32 len, int volume);
# 1229 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) int SDL_QueueAudio(SDL_AudioDeviceID dev, const void *data, Uint32 len);
# 1277 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) Uint32 SDL_DequeueAudio(SDL_AudioDeviceID dev, void *data, Uint32 len);
# 1311 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) Uint32 SDL_GetQueuedAudioSize(SDL_AudioDeviceID dev);
# 1345 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) void SDL_ClearQueuedAudio(SDL_AudioDeviceID dev);
# 1376 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) void SDL_LockAudio(void);
# 1415 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) void SDL_LockAudioDevice(SDL_AudioDeviceID dev);
# 1434 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) void SDL_UnlockAudio(void);
# 1448 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) void SDL_UnlockAudioDevice(SDL_AudioDeviceID dev);
# 1466 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) void SDL_CloseAudio(void);
# 1490 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h"
extern __attribute__ ((visibility("default"))) void SDL_CloseAudioDevice(SDL_AudioDeviceID dev);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 1497 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_audio.h" 2
# 37 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_clipboard.h" 1
# 33 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_clipboard.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_clipboard.h" 2
# 53 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_clipboard.h"
extern __attribute__ ((visibility("default"))) int SDL_SetClipboardText(const char *text);
# 71 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_clipboard.h"
extern __attribute__ ((visibility("default"))) char * SDL_GetClipboardText(void);
# 83 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_clipboard.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasClipboardText(void);






# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 91 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_clipboard.h" 2
# 38 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h" 1
# 126 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 127 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h" 2
# 148 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) int SDL_GetCPUCount(void);
# 160 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) int SDL_GetCPUCacheLineSize(void);
# 182 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasRDTSC(void);
# 205 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasAltiVec(void);
# 227 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasMMX(void);
# 249 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_Has3DNow(void);
# 271 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasSSE(void);
# 293 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasSSE2(void);
# 315 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasSSE3(void);
# 337 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasSSE41(void);
# 359 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasSSE42(void);
# 381 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasAVX(void);
# 403 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasAVX2(void);
# 416 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasAVX512F(void);
# 431 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasARMSIMD(void);
# 442 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasNEON(void);
# 455 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasLSX(void);
# 468 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasLASX(void);
# 477 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) int SDL_GetSystemRAM(void);
# 496 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) size_t SDL_SIMDGetAlignment(void);
# 535 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) void * SDL_SIMDAlloc(const size_t len);
# 559 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) void * SDL_SIMDRealloc(void *mem, const size_t len);
# 583 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h"
extern __attribute__ ((visibility("default"))) void SDL_SIMDFree(void *ptr);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 590 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_cpuinfo.h" 2
# 39 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2


# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h" 1
# 33 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h" 1
# 32 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h" 1
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 35 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h" 2
# 51 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h"
typedef enum
{
    SDL_PIXELTYPE_UNKNOWN,
    SDL_PIXELTYPE_INDEX1,
    SDL_PIXELTYPE_INDEX4,
    SDL_PIXELTYPE_INDEX8,
    SDL_PIXELTYPE_PACKED8,
    SDL_PIXELTYPE_PACKED16,
    SDL_PIXELTYPE_PACKED32,
    SDL_PIXELTYPE_ARRAYU8,
    SDL_PIXELTYPE_ARRAYU16,
    SDL_PIXELTYPE_ARRAYU32,
    SDL_PIXELTYPE_ARRAYF16,
    SDL_PIXELTYPE_ARRAYF32
} SDL_PixelType;


typedef enum
{
    SDL_BITMAPORDER_NONE,
    SDL_BITMAPORDER_4321,
    SDL_BITMAPORDER_1234
} SDL_BitmapOrder;


typedef enum
{
    SDL_PACKEDORDER_NONE,
    SDL_PACKEDORDER_XRGB,
    SDL_PACKEDORDER_RGBX,
    SDL_PACKEDORDER_ARGB,
    SDL_PACKEDORDER_RGBA,
    SDL_PACKEDORDER_XBGR,
    SDL_PACKEDORDER_BGRX,
    SDL_PACKEDORDER_ABGR,
    SDL_PACKEDORDER_BGRA
} SDL_PackedOrder;




typedef enum
{
    SDL_ARRAYORDER_NONE,
    SDL_ARRAYORDER_RGB,
    SDL_ARRAYORDER_RGBA,
    SDL_ARRAYORDER_ARGB,
    SDL_ARRAYORDER_BGR,
    SDL_ARRAYORDER_BGRA,
    SDL_ARRAYORDER_ABGR
} SDL_ArrayOrder;


typedef enum
{
    SDL_PACKEDLAYOUT_NONE,
    SDL_PACKEDLAYOUT_332,
    SDL_PACKEDLAYOUT_4444,
    SDL_PACKEDLAYOUT_1555,
    SDL_PACKEDLAYOUT_5551,
    SDL_PACKEDLAYOUT_565,
    SDL_PACKEDLAYOUT_8888,
    SDL_PACKEDLAYOUT_2101010,
    SDL_PACKEDLAYOUT_1010102
} SDL_PackedLayout;
# 171 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h"
typedef enum
{
    SDL_PIXELFORMAT_UNKNOWN,
    SDL_PIXELFORMAT_INDEX1LSB =
        ((1 << 28) | ((SDL_PIXELTYPE_INDEX1) << 24) | ((SDL_BITMAPORDER_4321) << 20) | ((0) << 16) | ((1) << 8) | ((0) << 0)),

    SDL_PIXELFORMAT_INDEX1MSB =
        ((1 << 28) | ((SDL_PIXELTYPE_INDEX1) << 24) | ((SDL_BITMAPORDER_1234) << 20) | ((0) << 16) | ((1) << 8) | ((0) << 0)),

    SDL_PIXELFORMAT_INDEX4LSB =
        ((1 << 28) | ((SDL_PIXELTYPE_INDEX4) << 24) | ((SDL_BITMAPORDER_4321) << 20) | ((0) << 16) | ((4) << 8) | ((0) << 0)),

    SDL_PIXELFORMAT_INDEX4MSB =
        ((1 << 28) | ((SDL_PIXELTYPE_INDEX4) << 24) | ((SDL_BITMAPORDER_1234) << 20) | ((0) << 16) | ((4) << 8) | ((0) << 0)),

    SDL_PIXELFORMAT_INDEX8 =
        ((1 << 28) | ((SDL_PIXELTYPE_INDEX8) << 24) | ((0) << 20) | ((0) << 16) | ((8) << 8) | ((1) << 0)),
    SDL_PIXELFORMAT_RGB332 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED8) << 24) | ((SDL_PACKEDORDER_XRGB) << 20) | ((SDL_PACKEDLAYOUT_332) << 16) | ((8) << 8) | ((1) << 0)),

    SDL_PIXELFORMAT_XRGB4444 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED16) << 24) | ((SDL_PACKEDORDER_XRGB) << 20) | ((SDL_PACKEDLAYOUT_4444) << 16) | ((12) << 8) | ((2) << 0)),

    SDL_PIXELFORMAT_RGB444 = SDL_PIXELFORMAT_XRGB4444,
    SDL_PIXELFORMAT_XBGR4444 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED16) << 24) | ((SDL_PACKEDORDER_XBGR) << 20) | ((SDL_PACKEDLAYOUT_4444) << 16) | ((12) << 8) | ((2) << 0)),

    SDL_PIXELFORMAT_BGR444 = SDL_PIXELFORMAT_XBGR4444,
    SDL_PIXELFORMAT_XRGB1555 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED16) << 24) | ((SDL_PACKEDORDER_XRGB) << 20) | ((SDL_PACKEDLAYOUT_1555) << 16) | ((15) << 8) | ((2) << 0)),

    SDL_PIXELFORMAT_RGB555 = SDL_PIXELFORMAT_XRGB1555,
    SDL_PIXELFORMAT_XBGR1555 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED16) << 24) | ((SDL_PACKEDORDER_XBGR) << 20) | ((SDL_PACKEDLAYOUT_1555) << 16) | ((15) << 8) | ((2) << 0)),

    SDL_PIXELFORMAT_BGR555 = SDL_PIXELFORMAT_XBGR1555,
    SDL_PIXELFORMAT_ARGB4444 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED16) << 24) | ((SDL_PACKEDORDER_ARGB) << 20) | ((SDL_PACKEDLAYOUT_4444) << 16) | ((16) << 8) | ((2) << 0)),

    SDL_PIXELFORMAT_RGBA4444 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED16) << 24) | ((SDL_PACKEDORDER_RGBA) << 20) | ((SDL_PACKEDLAYOUT_4444) << 16) | ((16) << 8) | ((2) << 0)),

    SDL_PIXELFORMAT_ABGR4444 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED16) << 24) | ((SDL_PACKEDORDER_ABGR) << 20) | ((SDL_PACKEDLAYOUT_4444) << 16) | ((16) << 8) | ((2) << 0)),

    SDL_PIXELFORMAT_BGRA4444 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED16) << 24) | ((SDL_PACKEDORDER_BGRA) << 20) | ((SDL_PACKEDLAYOUT_4444) << 16) | ((16) << 8) | ((2) << 0)),

    SDL_PIXELFORMAT_ARGB1555 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED16) << 24) | ((SDL_PACKEDORDER_ARGB) << 20) | ((SDL_PACKEDLAYOUT_1555) << 16) | ((16) << 8) | ((2) << 0)),

    SDL_PIXELFORMAT_RGBA5551 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED16) << 24) | ((SDL_PACKEDORDER_RGBA) << 20) | ((SDL_PACKEDLAYOUT_5551) << 16) | ((16) << 8) | ((2) << 0)),

    SDL_PIXELFORMAT_ABGR1555 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED16) << 24) | ((SDL_PACKEDORDER_ABGR) << 20) | ((SDL_PACKEDLAYOUT_1555) << 16) | ((16) << 8) | ((2) << 0)),

    SDL_PIXELFORMAT_BGRA5551 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED16) << 24) | ((SDL_PACKEDORDER_BGRA) << 20) | ((SDL_PACKEDLAYOUT_5551) << 16) | ((16) << 8) | ((2) << 0)),

    SDL_PIXELFORMAT_RGB565 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED16) << 24) | ((SDL_PACKEDORDER_XRGB) << 20) | ((SDL_PACKEDLAYOUT_565) << 16) | ((16) << 8) | ((2) << 0)),

    SDL_PIXELFORMAT_BGR565 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED16) << 24) | ((SDL_PACKEDORDER_XBGR) << 20) | ((SDL_PACKEDLAYOUT_565) << 16) | ((16) << 8) | ((2) << 0)),

    SDL_PIXELFORMAT_RGB24 =
        ((1 << 28) | ((SDL_PIXELTYPE_ARRAYU8) << 24) | ((SDL_ARRAYORDER_RGB) << 20) | ((0) << 16) | ((24) << 8) | ((3) << 0)),

    SDL_PIXELFORMAT_BGR24 =
        ((1 << 28) | ((SDL_PIXELTYPE_ARRAYU8) << 24) | ((SDL_ARRAYORDER_BGR) << 20) | ((0) << 16) | ((24) << 8) | ((3) << 0)),

    SDL_PIXELFORMAT_XRGB8888 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED32) << 24) | ((SDL_PACKEDORDER_XRGB) << 20) | ((SDL_PACKEDLAYOUT_8888) << 16) | ((24) << 8) | ((4) << 0)),

    SDL_PIXELFORMAT_RGB888 = SDL_PIXELFORMAT_XRGB8888,
    SDL_PIXELFORMAT_RGBX8888 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED32) << 24) | ((SDL_PACKEDORDER_RGBX) << 20) | ((SDL_PACKEDLAYOUT_8888) << 16) | ((24) << 8) | ((4) << 0)),

    SDL_PIXELFORMAT_XBGR8888 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED32) << 24) | ((SDL_PACKEDORDER_XBGR) << 20) | ((SDL_PACKEDLAYOUT_8888) << 16) | ((24) << 8) | ((4) << 0)),

    SDL_PIXELFORMAT_BGR888 = SDL_PIXELFORMAT_XBGR8888,
    SDL_PIXELFORMAT_BGRX8888 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED32) << 24) | ((SDL_PACKEDORDER_BGRX) << 20) | ((SDL_PACKEDLAYOUT_8888) << 16) | ((24) << 8) | ((4) << 0)),

    SDL_PIXELFORMAT_ARGB8888 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED32) << 24) | ((SDL_PACKEDORDER_ARGB) << 20) | ((SDL_PACKEDLAYOUT_8888) << 16) | ((32) << 8) | ((4) << 0)),

    SDL_PIXELFORMAT_RGBA8888 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED32) << 24) | ((SDL_PACKEDORDER_RGBA) << 20) | ((SDL_PACKEDLAYOUT_8888) << 16) | ((32) << 8) | ((4) << 0)),

    SDL_PIXELFORMAT_ABGR8888 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED32) << 24) | ((SDL_PACKEDORDER_ABGR) << 20) | ((SDL_PACKEDLAYOUT_8888) << 16) | ((32) << 8) | ((4) << 0)),

    SDL_PIXELFORMAT_BGRA8888 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED32) << 24) | ((SDL_PACKEDORDER_BGRA) << 20) | ((SDL_PACKEDLAYOUT_8888) << 16) | ((32) << 8) | ((4) << 0)),

    SDL_PIXELFORMAT_ARGB2101010 =
        ((1 << 28) | ((SDL_PIXELTYPE_PACKED32) << 24) | ((SDL_PACKEDORDER_ARGB) << 20) | ((SDL_PACKEDLAYOUT_2101010) << 16) | ((32) << 8) | ((4) << 0)),
# 280 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h"
    SDL_PIXELFORMAT_RGBA32 = SDL_PIXELFORMAT_ABGR8888,
    SDL_PIXELFORMAT_ARGB32 = SDL_PIXELFORMAT_BGRA8888,
    SDL_PIXELFORMAT_BGRA32 = SDL_PIXELFORMAT_ARGB8888,
    SDL_PIXELFORMAT_ABGR32 = SDL_PIXELFORMAT_RGBA8888,


    SDL_PIXELFORMAT_YV12 =
        ((((Uint32)(((Uint8)(('Y'))))) << 0) | (((Uint32)(((Uint8)(('V'))))) << 8) | (((Uint32)(((Uint8)(('1'))))) << 16) | (((Uint32)(((Uint8)(('2'))))) << 24)),
    SDL_PIXELFORMAT_IYUV =
        ((((Uint32)(((Uint8)(('I'))))) << 0) | (((Uint32)(((Uint8)(('Y'))))) << 8) | (((Uint32)(((Uint8)(('U'))))) << 16) | (((Uint32)(((Uint8)(('V'))))) << 24)),
    SDL_PIXELFORMAT_YUY2 =
        ((((Uint32)(((Uint8)(('Y'))))) << 0) | (((Uint32)(((Uint8)(('U'))))) << 8) | (((Uint32)(((Uint8)(('Y'))))) << 16) | (((Uint32)(((Uint8)(('2'))))) << 24)),
    SDL_PIXELFORMAT_UYVY =
        ((((Uint32)(((Uint8)(('U'))))) << 0) | (((Uint32)(((Uint8)(('Y'))))) << 8) | (((Uint32)(((Uint8)(('V'))))) << 16) | (((Uint32)(((Uint8)(('Y'))))) << 24)),
    SDL_PIXELFORMAT_YVYU =
        ((((Uint32)(((Uint8)(('Y'))))) << 0) | (((Uint32)(((Uint8)(('V'))))) << 8) | (((Uint32)(((Uint8)(('Y'))))) << 16) | (((Uint32)(((Uint8)(('U'))))) << 24)),
    SDL_PIXELFORMAT_NV12 =
        ((((Uint32)(((Uint8)(('N'))))) << 0) | (((Uint32)(((Uint8)(('V'))))) << 8) | (((Uint32)(((Uint8)(('1'))))) << 16) | (((Uint32)(((Uint8)(('2'))))) << 24)),
    SDL_PIXELFORMAT_NV21 =
        ((((Uint32)(((Uint8)(('N'))))) << 0) | (((Uint32)(((Uint8)(('V'))))) << 8) | (((Uint32)(((Uint8)(('2'))))) << 16) | (((Uint32)(((Uint8)(('1'))))) << 24)),
    SDL_PIXELFORMAT_EXTERNAL_OES =
        ((((Uint32)(((Uint8)(('O'))))) << 0) | (((Uint32)(((Uint8)(('E'))))) << 8) | (((Uint32)(((Uint8)(('S'))))) << 16) | (((Uint32)(((Uint8)((' '))))) << 24))
} SDL_PixelFormatEnum;






typedef struct SDL_Color
{
    Uint8 r;
    Uint8 g;
    Uint8 b;
    Uint8 a;
} SDL_Color;


typedef struct SDL_Palette
{
    int ncolors;
    SDL_Color *colors;
    Uint32 version;
    int refcount;
} SDL_Palette;




typedef struct SDL_PixelFormat
{
    Uint32 format;
    SDL_Palette *palette;
    Uint8 BitsPerPixel;
    Uint8 BytesPerPixel;
    Uint8 padding[2];
    Uint32 Rmask;
    Uint32 Gmask;
    Uint32 Bmask;
    Uint32 Amask;
    Uint8 Rloss;
    Uint8 Gloss;
    Uint8 Bloss;
    Uint8 Aloss;
    Uint8 Rshift;
    Uint8 Gshift;
    Uint8 Bshift;
    Uint8 Ashift;
    int refcount;
    struct SDL_PixelFormat *next;
} SDL_PixelFormat;
# 361 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h"
extern __attribute__ ((visibility("default"))) const char* SDL_GetPixelFormatName(Uint32 format);
# 379 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_PixelFormatEnumToMasks(Uint32 format,
                                                            int *bpp,
                                                            Uint32 * Rmask,
                                                            Uint32 * Gmask,
                                                            Uint32 * Bmask,
                                                            Uint32 * Amask);
# 403 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h"
extern __attribute__ ((visibility("default"))) Uint32 SDL_MasksToPixelFormatEnum(int bpp,
                                                          Uint32 Rmask,
                                                          Uint32 Gmask,
                                                          Uint32 Bmask,
                                                          Uint32 Amask);
# 424 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h"
extern __attribute__ ((visibility("default"))) SDL_PixelFormat * SDL_AllocFormat(Uint32 pixel_format);
# 435 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h"
extern __attribute__ ((visibility("default"))) void SDL_FreeFormat(SDL_PixelFormat *format);
# 451 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h"
extern __attribute__ ((visibility("default"))) SDL_Palette * SDL_AllocPalette(int ncolors);
# 466 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h"
extern __attribute__ ((visibility("default"))) int SDL_SetPixelFormatPalette(SDL_PixelFormat * format,
                                                      SDL_Palette *palette);
# 484 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h"
extern __attribute__ ((visibility("default"))) int SDL_SetPaletteColors(SDL_Palette * palette,
                                                 const SDL_Color * colors,
                                                 int firstcolor, int ncolors);
# 497 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h"
extern __attribute__ ((visibility("default"))) void SDL_FreePalette(SDL_Palette * palette);
# 529 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h"
extern __attribute__ ((visibility("default"))) Uint32 SDL_MapRGB(const SDL_PixelFormat * format,
                                          Uint8 r, Uint8 g, Uint8 b);
# 564 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h"
extern __attribute__ ((visibility("default"))) Uint32 SDL_MapRGBA(const SDL_PixelFormat * format,
                                           Uint8 r, Uint8 g, Uint8 b,
                                           Uint8 a);
# 589 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h"
extern __attribute__ ((visibility("default"))) void SDL_GetRGB(Uint32 pixel,
                                        const SDL_PixelFormat * format,
                                        Uint8 * r, Uint8 * g, Uint8 * b);
# 618 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h"
extern __attribute__ ((visibility("default"))) void SDL_GetRGBA(Uint32 pixel,
                                         const SDL_PixelFormat * format,
                                         Uint8 * r, Uint8 * g, Uint8 * b,
                                         Uint8 * a);
# 633 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h"
extern __attribute__ ((visibility("default"))) void SDL_CalculateGammaRamp(float gamma, Uint16 * ramp);






# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 641 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_pixels.h" 2
# 33 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rect.h" 1
# 36 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rect.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 37 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rect.h" 2
# 48 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rect.h"
typedef struct SDL_Point
{
    int x;
    int y;
} SDL_Point;







typedef struct SDL_FPoint
{
    float x;
    float y;
} SDL_FPoint;
# 78 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rect.h"
typedef struct SDL_Rect
{
    int x, y;
    int w, h;
} SDL_Rect;
# 98 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rect.h"
typedef struct SDL_FRect
{
    float x;
    float y;
    float w;
    float h;
} SDL_FRect;





__attribute__((always_inline)) static __inline__ SDL_bool SDL_PointInRect(const SDL_Point *p, const SDL_Rect *r)
{
    return ( (p->x >= r->x) && (p->x < (r->x + r->w)) &&
             (p->y >= r->y) && (p->y < (r->y + r->h)) ) ? SDL_TRUE : SDL_FALSE;
}




__attribute__((always_inline)) static __inline__ SDL_bool SDL_RectEmpty(const SDL_Rect *r)
{
    return ((!r) || (r->w <= 0) || (r->h <= 0)) ? SDL_TRUE : SDL_FALSE;
}




__attribute__((always_inline)) static __inline__ SDL_bool SDL_RectEquals(const SDL_Rect *a, const SDL_Rect *b)
{
    return (a && b && (a->x == b->x) && (a->y == b->y) &&
            (a->w == b->w) && (a->h == b->h)) ? SDL_TRUE : SDL_FALSE;
}
# 146 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rect.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasIntersection(const SDL_Rect * A,
                                                     const SDL_Rect * B);
# 164 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rect.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_IntersectRect(const SDL_Rect * A,
                                                   const SDL_Rect * B,
                                                   SDL_Rect * result);
# 178 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rect.h"
extern __attribute__ ((visibility("default"))) void SDL_UnionRect(const SDL_Rect * A,
                                           const SDL_Rect * B,
                                           SDL_Rect * result);
# 199 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rect.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_EnclosePoints(const SDL_Point * points,
                                                   int count,
                                                   const SDL_Rect * clip,
                                                   SDL_Rect * result);
# 222 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rect.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_IntersectRectAndLine(const SDL_Rect *
                                                          rect, int *X1,
                                                          int *Y1, int *X2,
                                                          int *Y2);







__attribute__((always_inline)) static __inline__ SDL_bool SDL_PointInFRect(const SDL_FPoint *p, const SDL_FRect *r)
{
    return ( (p->x >= r->x) && (p->x < (r->x + r->w)) &&
             (p->y >= r->y) && (p->y < (r->y + r->h)) ) ? SDL_TRUE : SDL_FALSE;
}




__attribute__((always_inline)) static __inline__ SDL_bool SDL_FRectEmpty(const SDL_FRect *r)
{
    return ((!r) || (r->w <= 0.0f) || (r->h <= 0.0f)) ? SDL_TRUE : SDL_FALSE;
}






__attribute__((always_inline)) static __inline__ SDL_bool SDL_FRectEqualsEpsilon(const SDL_FRect *a, const SDL_FRect *b, const float epsilon)
{
    return (a && b && ((a == b) ||
            ((SDL_fabsf(a->x - b->x) <= epsilon) &&
            (SDL_fabsf(a->y - b->y) <= epsilon) &&
            (SDL_fabsf(a->w - b->w) <= epsilon) &&
            (SDL_fabsf(a->h - b->h) <= epsilon))))
            ? SDL_TRUE : SDL_FALSE;
}






__attribute__((always_inline)) static __inline__ SDL_bool SDL_FRectEquals(const SDL_FRect *a, const SDL_FRect *b)
{
    return SDL_FRectEqualsEpsilon(a, b, 1.1920928955078125e-07F);
}
# 285 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rect.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasIntersectionF(const SDL_FRect * A,
                                                      const SDL_FRect * B);
# 303 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rect.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_IntersectFRect(const SDL_FRect * A,
                                                    const SDL_FRect * B,
                                                    SDL_FRect * result);
# 317 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rect.h"
extern __attribute__ ((visibility("default"))) void SDL_UnionFRect(const SDL_FRect * A,
                                            const SDL_FRect * B,
                                            SDL_FRect * result);
# 339 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rect.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_EncloseFPoints(const SDL_FPoint * points,
                                                    int count,
                                                    const SDL_FRect * clip,
                                                    SDL_FRect * result);
# 363 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rect.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_IntersectFRectAndLine(const SDL_FRect *
                                                           rect, float *X1,
                                                           float *Y1, float *X2,
                                                           float *Y2);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 373 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_rect.h" 2
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h" 1
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_blendmode.h" 1
# 31 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_blendmode.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 32 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_blendmode.h" 2








typedef enum
{
    SDL_BLENDMODE_NONE = 0x00000000,

    SDL_BLENDMODE_BLEND = 0x00000001,


    SDL_BLENDMODE_ADD = 0x00000002,


    SDL_BLENDMODE_MOD = 0x00000004,


    SDL_BLENDMODE_MUL = 0x00000008,


    SDL_BLENDMODE_INVALID = 0x7FFFFFFF



} SDL_BlendMode;




typedef enum
{
    SDL_BLENDOPERATION_ADD = 0x1,
    SDL_BLENDOPERATION_SUBTRACT = 0x2,
    SDL_BLENDOPERATION_REV_SUBTRACT = 0x3,
    SDL_BLENDOPERATION_MINIMUM = 0x4,
    SDL_BLENDOPERATION_MAXIMUM = 0x5
} SDL_BlendOperation;




typedef enum
{
    SDL_BLENDFACTOR_ZERO = 0x1,
    SDL_BLENDFACTOR_ONE = 0x2,
    SDL_BLENDFACTOR_SRC_COLOR = 0x3,
    SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR = 0x4,
    SDL_BLENDFACTOR_SRC_ALPHA = 0x5,
    SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA = 0x6,
    SDL_BLENDFACTOR_DST_COLOR = 0x7,
    SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR = 0x8,
    SDL_BLENDFACTOR_DST_ALPHA = 0x9,
    SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA = 0xA
} SDL_BlendFactor;
# 183 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_blendmode.h"
extern __attribute__ ((visibility("default"))) SDL_BlendMode SDL_ComposeCustomBlendMode(SDL_BlendFactor srcColorFactor,
                                                                 SDL_BlendFactor dstColorFactor,
                                                                 SDL_BlendOperation colorOperation,
                                                                 SDL_BlendFactor srcAlphaFactor,
                                                                 SDL_BlendFactor dstAlphaFactor,
                                                                 SDL_BlendOperation alphaOperation);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 195 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_blendmode.h" 2
# 35 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h" 2


# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 38 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h" 2
# 64 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
typedef struct SDL_BlitMap SDL_BlitMap;







typedef struct SDL_Surface
{
    Uint32 flags;
    SDL_PixelFormat *format;
    int w, h;
    int pitch;
    void *pixels;


    void *userdata;


    int locked;


    void *list_blitmap;


    SDL_Rect clip_rect;


    SDL_BlitMap *map;


    int refcount;
} SDL_Surface;




typedef int ( *SDL_blit) (struct SDL_Surface * src, SDL_Rect * srcrect,
                                 struct SDL_Surface * dst, SDL_Rect * dstrect);




typedef enum
{
    SDL_YUV_CONVERSION_JPEG,
    SDL_YUV_CONVERSION_BT601,
    SDL_YUV_CONVERSION_BT709,
    SDL_YUV_CONVERSION_AUTOMATIC
} SDL_YUV_CONVERSION_MODE;
# 160 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) SDL_Surface * SDL_CreateRGBSurface
    (Uint32 flags, int width, int height, int depth,
     Uint32 Rmask, Uint32 Gmask, Uint32 Bmask, Uint32 Amask);
# 188 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) SDL_Surface * SDL_CreateRGBSurfaceWithFormat
    (Uint32 flags, int width, int height, int depth, Uint32 format);
# 219 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) SDL_Surface * SDL_CreateRGBSurfaceFrom(void *pixels,
                                                              int width,
                                                              int height,
                                                              int depth,
                                                              int pitch,
                                                              Uint32 Rmask,
                                                              Uint32 Gmask,
                                                              Uint32 Bmask,
                                                              Uint32 Amask);
# 257 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) SDL_Surface * SDL_CreateRGBSurfaceWithFormatFrom
    (void *pixels, int width, int height, int depth, int pitch, Uint32 format);
# 274 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) void SDL_FreeSurface(SDL_Surface * surface);
# 288 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_SetSurfacePalette(SDL_Surface * surface,
                                                  SDL_Palette * palette);
# 312 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_LockSurface(SDL_Surface * surface);
# 323 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) void SDL_UnlockSurface(SDL_Surface * surface);
# 347 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) SDL_Surface * SDL_LoadBMP_RW(SDL_RWops * src,
                                                    int freesrc);
# 377 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_SaveBMP_RW
    (SDL_Surface * surface, SDL_RWops * dst, int freedst);
# 405 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_SetSurfaceRLE(SDL_Surface * surface,
                                              int flag);
# 420 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasSurfaceRLE(SDL_Surface * surface);
# 446 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_SetColorKey(SDL_Surface * surface,
                                            int flag, Uint32 key);
# 462 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasColorKey(SDL_Surface * surface);
# 482 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_GetColorKey(SDL_Surface * surface,
                                            Uint32 * key);
# 506 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_SetSurfaceColorMod(SDL_Surface * surface,
                                                   Uint8 r, Uint8 g, Uint8 b);
# 525 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_GetSurfaceColorMod(SDL_Surface * surface,
                                                   Uint8 * r, Uint8 * g,
                                                   Uint8 * b);
# 547 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_SetSurfaceAlphaMod(SDL_Surface * surface,
                                                   Uint8 alpha);
# 563 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_GetSurfaceAlphaMod(SDL_Surface * surface,
                                                   Uint8 * alpha);
# 582 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_SetSurfaceBlendMode(SDL_Surface * surface,
                                                    SDL_BlendMode blendMode);
# 597 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_GetSurfaceBlendMode(SDL_Surface * surface,
                                                    SDL_BlendMode *blendMode);
# 620 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_SetClipRect(SDL_Surface * surface,
                                                 const SDL_Rect * rect);
# 639 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) void SDL_GetClipRect(SDL_Surface * surface,
                                             SDL_Rect * rect);
# 651 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) SDL_Surface * SDL_DuplicateSurface(SDL_Surface * surface);
# 675 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) SDL_Surface * SDL_ConvertSurface
    (SDL_Surface * src, const SDL_PixelFormat * fmt, Uint32 flags);
# 700 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) SDL_Surface * SDL_ConvertSurfaceFormat
    (SDL_Surface * src, Uint32 pixel_format, Uint32 flags);
# 719 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_ConvertPixels(int width, int height,
                                              Uint32 src_format,
                                              const void * src, int src_pitch,
                                              Uint32 dst_format,
                                              void * dst, int dst_pitch);
# 745 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_PremultiplyAlpha(int width, int height,
                                                 Uint32 src_format,
                                                 const void * src, int src_pitch,
                                                 Uint32 dst_format,
                                                 void * dst, int dst_pitch);
# 774 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_FillRect
    (SDL_Surface * dst, const SDL_Rect * rect, Uint32 color);
# 800 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_FillRects
    (SDL_Surface * dst, const SDL_Rect * rects, int count, Uint32 color);
# 873 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_UpperBlit
    (SDL_Surface * src, const SDL_Rect * srcrect,
     SDL_Surface * dst, SDL_Rect * dstrect);
# 899 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_LowerBlit
    (SDL_Surface * src, SDL_Rect * srcrect,
     SDL_Surface * dst, SDL_Rect * dstrect);
# 912 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_SoftStretch(SDL_Surface * src,
                                            const SDL_Rect * srcrect,
                                            SDL_Surface * dst,
                                            const SDL_Rect * dstrect);






extern __attribute__ ((visibility("default"))) int SDL_SoftStretchLinear(SDL_Surface * src,
                                            const SDL_Rect * srcrect,
                                            SDL_Surface * dst,
                                            const SDL_Rect * dstrect);
# 940 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_UpperBlitScaled
    (SDL_Surface * src, const SDL_Rect * srcrect,
    SDL_Surface * dst, SDL_Rect * dstrect);
# 963 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h"
extern __attribute__ ((visibility("default"))) int SDL_LowerBlitScaled
    (SDL_Surface * src, SDL_Rect * srcrect,
    SDL_Surface * dst, SDL_Rect * dstrect);






extern __attribute__ ((visibility("default"))) void SDL_SetYUVConversionMode(SDL_YUV_CONVERSION_MODE mode);






extern __attribute__ ((visibility("default"))) SDL_YUV_CONVERSION_MODE SDL_GetYUVConversionMode(void);







extern __attribute__ ((visibility("default"))) SDL_YUV_CONVERSION_MODE SDL_GetYUVConversionModeForResolution(int width, int height);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 994 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_surface.h" 2
# 35 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h" 2

# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 37 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h" 2
# 53 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
typedef struct
{
    Uint32 format;
    int w;
    int h;
    int refresh_rate;
    void *driverdata;
} SDL_DisplayMode;
# 95 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
typedef struct SDL_Window SDL_Window;






typedef enum
{
    SDL_WINDOW_FULLSCREEN = 0x00000001,
    SDL_WINDOW_OPENGL = 0x00000002,
    SDL_WINDOW_SHOWN = 0x00000004,
    SDL_WINDOW_HIDDEN = 0x00000008,
    SDL_WINDOW_BORDERLESS = 0x00000010,
    SDL_WINDOW_RESIZABLE = 0x00000020,
    SDL_WINDOW_MINIMIZED = 0x00000040,
    SDL_WINDOW_MAXIMIZED = 0x00000080,
    SDL_WINDOW_MOUSE_GRABBED = 0x00000100,
    SDL_WINDOW_INPUT_FOCUS = 0x00000200,
    SDL_WINDOW_MOUSE_FOCUS = 0x00000400,
    SDL_WINDOW_FULLSCREEN_DESKTOP = ( SDL_WINDOW_FULLSCREEN | 0x00001000 ),
    SDL_WINDOW_FOREIGN = 0x00000800,
    SDL_WINDOW_ALLOW_HIGHDPI = 0x00002000,


    SDL_WINDOW_MOUSE_CAPTURE = 0x00004000,
    SDL_WINDOW_ALWAYS_ON_TOP = 0x00008000,
    SDL_WINDOW_SKIP_TASKBAR = 0x00010000,
    SDL_WINDOW_UTILITY = 0x00020000,
    SDL_WINDOW_TOOLTIP = 0x00040000,
    SDL_WINDOW_POPUP_MENU = 0x00080000,
    SDL_WINDOW_KEYBOARD_GRABBED = 0x00100000,
    SDL_WINDOW_VULKAN = 0x10000000,
    SDL_WINDOW_METAL = 0x20000000,

    SDL_WINDOW_INPUT_GRABBED = SDL_WINDOW_MOUSE_GRABBED
} SDL_WindowFlags;
# 154 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
typedef enum
{
    SDL_WINDOWEVENT_NONE,
    SDL_WINDOWEVENT_SHOWN,
    SDL_WINDOWEVENT_HIDDEN,
    SDL_WINDOWEVENT_EXPOSED,

    SDL_WINDOWEVENT_MOVED,

    SDL_WINDOWEVENT_RESIZED,
    SDL_WINDOWEVENT_SIZE_CHANGED,


    SDL_WINDOWEVENT_MINIMIZED,
    SDL_WINDOWEVENT_MAXIMIZED,
    SDL_WINDOWEVENT_RESTORED,

    SDL_WINDOWEVENT_ENTER,
    SDL_WINDOWEVENT_LEAVE,
    SDL_WINDOWEVENT_FOCUS_GAINED,
    SDL_WINDOWEVENT_FOCUS_LOST,
    SDL_WINDOWEVENT_CLOSE,
    SDL_WINDOWEVENT_TAKE_FOCUS,
    SDL_WINDOWEVENT_HIT_TEST,
    SDL_WINDOWEVENT_ICCPROF_CHANGED,
    SDL_WINDOWEVENT_DISPLAY_CHANGED
} SDL_WindowEventID;




typedef enum
{
    SDL_DISPLAYEVENT_NONE,
    SDL_DISPLAYEVENT_ORIENTATION,
    SDL_DISPLAYEVENT_CONNECTED,
    SDL_DISPLAYEVENT_DISCONNECTED
} SDL_DisplayEventID;




typedef enum
{
    SDL_ORIENTATION_UNKNOWN,
    SDL_ORIENTATION_LANDSCAPE,
    SDL_ORIENTATION_LANDSCAPE_FLIPPED,
    SDL_ORIENTATION_PORTRAIT,
    SDL_ORIENTATION_PORTRAIT_FLIPPED
} SDL_DisplayOrientation;




typedef enum
{
    SDL_FLASH_CANCEL,
    SDL_FLASH_BRIEFLY,
    SDL_FLASH_UNTIL_FOCUSED
} SDL_FlashOperation;




typedef void *SDL_GLContext;




typedef enum
{
    SDL_GL_RED_SIZE,
    SDL_GL_GREEN_SIZE,
    SDL_GL_BLUE_SIZE,
    SDL_GL_ALPHA_SIZE,
    SDL_GL_BUFFER_SIZE,
    SDL_GL_DOUBLEBUFFER,
    SDL_GL_DEPTH_SIZE,
    SDL_GL_STENCIL_SIZE,
    SDL_GL_ACCUM_RED_SIZE,
    SDL_GL_ACCUM_GREEN_SIZE,
    SDL_GL_ACCUM_BLUE_SIZE,
    SDL_GL_ACCUM_ALPHA_SIZE,
    SDL_GL_STEREO,
    SDL_GL_MULTISAMPLEBUFFERS,
    SDL_GL_MULTISAMPLESAMPLES,
    SDL_GL_ACCELERATED_VISUAL,
    SDL_GL_RETAINED_BACKING,
    SDL_GL_CONTEXT_MAJOR_VERSION,
    SDL_GL_CONTEXT_MINOR_VERSION,
    SDL_GL_CONTEXT_EGL,
    SDL_GL_CONTEXT_FLAGS,
    SDL_GL_CONTEXT_PROFILE_MASK,
    SDL_GL_SHARE_WITH_CURRENT_CONTEXT,
    SDL_GL_FRAMEBUFFER_SRGB_CAPABLE,
    SDL_GL_CONTEXT_RELEASE_BEHAVIOR,
    SDL_GL_CONTEXT_RESET_NOTIFICATION,
    SDL_GL_CONTEXT_NO_ERROR,
    SDL_GL_FLOATBUFFERS
} SDL_GLattr;

typedef enum
{
    SDL_GL_CONTEXT_PROFILE_CORE = 0x0001,
    SDL_GL_CONTEXT_PROFILE_COMPATIBILITY = 0x0002,
    SDL_GL_CONTEXT_PROFILE_ES = 0x0004
} SDL_GLprofile;

typedef enum
{
    SDL_GL_CONTEXT_DEBUG_FLAG = 0x0001,
    SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG = 0x0002,
    SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG = 0x0004,
    SDL_GL_CONTEXT_RESET_ISOLATION_FLAG = 0x0008
} SDL_GLcontextFlag;

typedef enum
{
    SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE = 0x0000,
    SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH = 0x0001
} SDL_GLcontextReleaseFlag;

typedef enum
{
    SDL_GL_CONTEXT_RESET_NO_NOTIFICATION = 0x0000,
    SDL_GL_CONTEXT_RESET_LOSE_CONTEXT = 0x0001
} SDL_GLContextResetNotification;
# 294 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GetNumVideoDrivers(void);
# 309 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GetVideoDriver(int index);
# 340 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_VideoInit(const char *driver_name);
# 351 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_VideoQuit(void);
# 364 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GetCurrentVideoDriver(void);
# 376 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GetNumVideoDisplays(void);
# 390 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GetDisplayName(int displayIndex);
# 406 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GetDisplayBounds(int displayIndex, SDL_Rect * rect);
# 437 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GetDisplayUsableBounds(int displayIndex, SDL_Rect * rect);
# 472 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GetDisplayDPI(int displayIndex, float * ddpi, float * hdpi, float * vdpi);
# 485 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) SDL_DisplayOrientation SDL_GetDisplayOrientation(int displayIndex);
# 502 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GetNumDisplayModes(int displayIndex);
# 526 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GetDisplayMode(int displayIndex, int modeIndex,
                                               SDL_DisplayMode * mode);
# 549 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GetDesktopDisplayMode(int displayIndex, SDL_DisplayMode * mode);
# 572 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GetCurrentDisplayMode(int displayIndex, SDL_DisplayMode * mode);
# 598 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) SDL_DisplayMode * SDL_GetClosestDisplayMode(int displayIndex, const SDL_DisplayMode * mode, SDL_DisplayMode * closest);
# 612 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GetPointDisplayIndex(const SDL_Point * point);
# 627 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GetRectDisplayIndex(const SDL_Rect * rect);
# 642 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GetWindowDisplayIndex(SDL_Window * window);
# 663 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_SetWindowDisplayMode(SDL_Window * window,
                                                     const SDL_DisplayMode * mode);
# 680 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GetWindowDisplayMode(SDL_Window * window,
                                                     SDL_DisplayMode * mode);
# 695 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void* SDL_GetWindowICCProfile(SDL_Window * window, size_t* size);
# 707 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) Uint32 SDL_GetWindowPixelFormat(SDL_Window * window);
# 780 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) SDL_Window * SDL_CreateWindow(const char *title,
                                                      int x, int y, int w,
                                                      int h, Uint32 flags);
# 801 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) SDL_Window * SDL_CreateWindowFrom(const void *data);
# 817 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) Uint32 SDL_GetWindowID(SDL_Window * window);
# 833 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) SDL_Window * SDL_GetWindowFromID(Uint32 id);
# 851 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) Uint32 SDL_GetWindowFlags(SDL_Window * window);
# 865 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_SetWindowTitle(SDL_Window * window,
                                                const char *title);
# 879 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GetWindowTitle(SDL_Window * window);
# 889 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_SetWindowIcon(SDL_Window * window,
                                               SDL_Surface * icon);
# 906 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void* SDL_SetWindowData(SDL_Window * window,
                                                const char *name,
                                                void *userdata);
# 921 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void * SDL_GetWindowData(SDL_Window * window,
                                                const char *name);
# 939 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_SetWindowPosition(SDL_Window * window,
                                                   int x, int y);
# 958 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_GetWindowPosition(SDL_Window * window,
                                                   int *x, int *y);
# 983 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_SetWindowSize(SDL_Window * window, int w,
                                               int h);
# 1010 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_GetWindowSize(SDL_Window * window, int *w,
                                               int *h);
# 1045 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GetWindowBordersSize(SDL_Window * window,
                                                     int *top, int *left,
                                                     int *bottom, int *right);
# 1061 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_SetWindowMinimumSize(SDL_Window * window,
                                                      int min_w, int min_h);
# 1078 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_GetWindowMinimumSize(SDL_Window * window,
                                                      int *w, int *h);
# 1093 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_SetWindowMaximumSize(SDL_Window * window,
                                                      int max_w, int max_h);
# 1110 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_GetWindowMaximumSize(SDL_Window * window,
                                                      int *w, int *h);
# 1129 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_SetWindowBordered(SDL_Window * window,
                                                   SDL_bool bordered);
# 1148 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_SetWindowResizable(SDL_Window * window,
                                                    SDL_bool resizable);
# 1165 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_SetWindowAlwaysOnTop(SDL_Window * window,
                                                      SDL_bool on_top);
# 1178 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_ShowWindow(SDL_Window * window);
# 1189 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_HideWindow(SDL_Window * window);
# 1198 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_RaiseWindow(SDL_Window * window);
# 1210 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_MaximizeWindow(SDL_Window * window);
# 1222 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_MinimizeWindow(SDL_Window * window);
# 1234 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_RestoreWindow(SDL_Window * window);
# 1253 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_SetWindowFullscreen(SDL_Window * window,
                                                    Uint32 flags);
# 1279 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) SDL_Surface * SDL_GetWindowSurface(SDL_Window * window);
# 1298 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_UpdateWindowSurface(SDL_Window * window);
# 1320 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_UpdateWindowSurfaceRects(SDL_Window * window,
                                                         const SDL_Rect * rects,
                                                         int numrects);
# 1342 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_SetWindowGrab(SDL_Window * window,
                                               SDL_bool grabbed);
# 1373 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_SetWindowKeyboardGrab(SDL_Window * window,
                                                       SDL_bool grabbed);
# 1390 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_SetWindowMouseGrab(SDL_Window * window,
                                                    SDL_bool grabbed);
# 1403 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_GetWindowGrab(SDL_Window * window);
# 1416 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_GetWindowKeyboardGrab(SDL_Window * window);
# 1429 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_GetWindowMouseGrab(SDL_Window * window);
# 1441 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) SDL_Window * SDL_GetGrabbedWindow(void);
# 1460 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_SetWindowMouseRect(SDL_Window * window, const SDL_Rect * rect);
# 1473 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) const SDL_Rect * SDL_GetWindowMouseRect(SDL_Window * window);
# 1501 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_SetWindowBrightness(SDL_Window * window, float brightness);
# 1520 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) float SDL_GetWindowBrightness(SDL_Window * window);
# 1539 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_SetWindowOpacity(SDL_Window * window, float opacity);
# 1560 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GetWindowOpacity(SDL_Window * window, float * out_opacity);
# 1572 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_SetWindowModalFor(SDL_Window * modal_window, SDL_Window * parent_window);
# 1589 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_SetWindowInputFocus(SDL_Window * window);
# 1621 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_SetWindowGammaRamp(SDL_Window * window,
                                                   const Uint16 * red,
                                                   const Uint16 * green,
                                                   const Uint16 * blue);
# 1649 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GetWindowGammaRamp(SDL_Window * window,
                                                   Uint16 * red,
                                                   Uint16 * green,
                                                   Uint16 * blue);






typedef enum
{
    SDL_HITTEST_NORMAL,
    SDL_HITTEST_DRAGGABLE,
    SDL_HITTEST_RESIZE_TOPLEFT,
    SDL_HITTEST_RESIZE_TOP,
    SDL_HITTEST_RESIZE_TOPRIGHT,
    SDL_HITTEST_RESIZE_RIGHT,
    SDL_HITTEST_RESIZE_BOTTOMRIGHT,
    SDL_HITTEST_RESIZE_BOTTOM,
    SDL_HITTEST_RESIZE_BOTTOMLEFT,
    SDL_HITTEST_RESIZE_LEFT
} SDL_HitTestResult;
# 1683 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
typedef SDL_HitTestResult ( *SDL_HitTest)(SDL_Window *win,
                                                 const SDL_Point *area,
                                                 void *data);
# 1727 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_SetWindowHitTest(SDL_Window * window,
                                                 SDL_HitTest callback,
                                                 void *callback_data);
# 1741 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_FlashWindow(SDL_Window * window, SDL_FlashOperation operation);
# 1756 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_DestroyWindow(SDL_Window * window);
# 1775 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_IsScreenSaverEnabled(void);
# 1785 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_EnableScreenSaver(void);
# 1798 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_DisableScreenSaver(void);
# 1826 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GL_LoadLibrary(const char *path);
# 1879 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void * SDL_GL_GetProcAddress(const char *proc);
# 1888 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_GL_UnloadLibrary(void);
# 1909 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_GL_ExtensionSupported(const char
                                                           *extension);
# 1920 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_GL_ResetAttributes(void);
# 1940 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GL_SetAttribute(SDL_GLattr attr, int value);
# 1955 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GL_GetAttribute(SDL_GLattr attr, int *value);
# 1977 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) SDL_GLContext SDL_GL_CreateContext(SDL_Window *
                                                           window);
# 1994 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GL_MakeCurrent(SDL_Window * window,
                                               SDL_GLContext context);
# 2005 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) SDL_Window* SDL_GL_GetCurrentWindow(void);
# 2017 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) SDL_GLContext SDL_GL_GetCurrentContext(void);
# 2039 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_GL_GetDrawableSize(SDL_Window * window, int *w,
                                                    int *h);
# 2069 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GL_SetSwapInterval(int interval);
# 2086 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) int SDL_GL_GetSwapInterval(void);
# 2102 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_GL_SwapWindow(SDL_Window * window);
# 2113 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
extern __attribute__ ((visibility("default"))) void SDL_GL_DeleteContext(SDL_GLContext context);
# 2122 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 2123 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_video.h" 2
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h" 1
# 33 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keycode.h" 1
# 32 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keycode.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_scancode.h" 1
# 43 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_scancode.h"
typedef enum
{
    SDL_SCANCODE_UNKNOWN = 0,
# 54 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_scancode.h"
    SDL_SCANCODE_A = 4,
    SDL_SCANCODE_B = 5,
    SDL_SCANCODE_C = 6,
    SDL_SCANCODE_D = 7,
    SDL_SCANCODE_E = 8,
    SDL_SCANCODE_F = 9,
    SDL_SCANCODE_G = 10,
    SDL_SCANCODE_H = 11,
    SDL_SCANCODE_I = 12,
    SDL_SCANCODE_J = 13,
    SDL_SCANCODE_K = 14,
    SDL_SCANCODE_L = 15,
    SDL_SCANCODE_M = 16,
    SDL_SCANCODE_N = 17,
    SDL_SCANCODE_O = 18,
    SDL_SCANCODE_P = 19,
    SDL_SCANCODE_Q = 20,
    SDL_SCANCODE_R = 21,
    SDL_SCANCODE_S = 22,
    SDL_SCANCODE_T = 23,
    SDL_SCANCODE_U = 24,
    SDL_SCANCODE_V = 25,
    SDL_SCANCODE_W = 26,
    SDL_SCANCODE_X = 27,
    SDL_SCANCODE_Y = 28,
    SDL_SCANCODE_Z = 29,

    SDL_SCANCODE_1 = 30,
    SDL_SCANCODE_2 = 31,
    SDL_SCANCODE_3 = 32,
    SDL_SCANCODE_4 = 33,
    SDL_SCANCODE_5 = 34,
    SDL_SCANCODE_6 = 35,
    SDL_SCANCODE_7 = 36,
    SDL_SCANCODE_8 = 37,
    SDL_SCANCODE_9 = 38,
    SDL_SCANCODE_0 = 39,

    SDL_SCANCODE_RETURN = 40,
    SDL_SCANCODE_ESCAPE = 41,
    SDL_SCANCODE_BACKSPACE = 42,
    SDL_SCANCODE_TAB = 43,
    SDL_SCANCODE_SPACE = 44,

    SDL_SCANCODE_MINUS = 45,
    SDL_SCANCODE_EQUALS = 46,
    SDL_SCANCODE_LEFTBRACKET = 47,
    SDL_SCANCODE_RIGHTBRACKET = 48,
    SDL_SCANCODE_BACKSLASH = 49,
# 116 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_scancode.h"
    SDL_SCANCODE_NONUSHASH = 50,
# 128 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_scancode.h"
    SDL_SCANCODE_SEMICOLON = 51,
    SDL_SCANCODE_APOSTROPHE = 52,
    SDL_SCANCODE_GRAVE = 53,
# 147 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_scancode.h"
    SDL_SCANCODE_COMMA = 54,
    SDL_SCANCODE_PERIOD = 55,
    SDL_SCANCODE_SLASH = 56,

    SDL_SCANCODE_CAPSLOCK = 57,

    SDL_SCANCODE_F1 = 58,
    SDL_SCANCODE_F2 = 59,
    SDL_SCANCODE_F3 = 60,
    SDL_SCANCODE_F4 = 61,
    SDL_SCANCODE_F5 = 62,
    SDL_SCANCODE_F6 = 63,
    SDL_SCANCODE_F7 = 64,
    SDL_SCANCODE_F8 = 65,
    SDL_SCANCODE_F9 = 66,
    SDL_SCANCODE_F10 = 67,
    SDL_SCANCODE_F11 = 68,
    SDL_SCANCODE_F12 = 69,

    SDL_SCANCODE_PRINTSCREEN = 70,
    SDL_SCANCODE_SCROLLLOCK = 71,
    SDL_SCANCODE_PAUSE = 72,
    SDL_SCANCODE_INSERT = 73,

    SDL_SCANCODE_HOME = 74,
    SDL_SCANCODE_PAGEUP = 75,
    SDL_SCANCODE_DELETE = 76,
    SDL_SCANCODE_END = 77,
    SDL_SCANCODE_PAGEDOWN = 78,
    SDL_SCANCODE_RIGHT = 79,
    SDL_SCANCODE_LEFT = 80,
    SDL_SCANCODE_DOWN = 81,
    SDL_SCANCODE_UP = 82,

    SDL_SCANCODE_NUMLOCKCLEAR = 83,

    SDL_SCANCODE_KP_DIVIDE = 84,
    SDL_SCANCODE_KP_MULTIPLY = 85,
    SDL_SCANCODE_KP_MINUS = 86,
    SDL_SCANCODE_KP_PLUS = 87,
    SDL_SCANCODE_KP_ENTER = 88,
    SDL_SCANCODE_KP_1 = 89,
    SDL_SCANCODE_KP_2 = 90,
    SDL_SCANCODE_KP_3 = 91,
    SDL_SCANCODE_KP_4 = 92,
    SDL_SCANCODE_KP_5 = 93,
    SDL_SCANCODE_KP_6 = 94,
    SDL_SCANCODE_KP_7 = 95,
    SDL_SCANCODE_KP_8 = 96,
    SDL_SCANCODE_KP_9 = 97,
    SDL_SCANCODE_KP_0 = 98,
    SDL_SCANCODE_KP_PERIOD = 99,

    SDL_SCANCODE_NONUSBACKSLASH = 100,
# 210 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_scancode.h"
    SDL_SCANCODE_APPLICATION = 101,
    SDL_SCANCODE_POWER = 102,


    SDL_SCANCODE_KP_EQUALS = 103,
    SDL_SCANCODE_F13 = 104,
    SDL_SCANCODE_F14 = 105,
    SDL_SCANCODE_F15 = 106,
    SDL_SCANCODE_F16 = 107,
    SDL_SCANCODE_F17 = 108,
    SDL_SCANCODE_F18 = 109,
    SDL_SCANCODE_F19 = 110,
    SDL_SCANCODE_F20 = 111,
    SDL_SCANCODE_F21 = 112,
    SDL_SCANCODE_F22 = 113,
    SDL_SCANCODE_F23 = 114,
    SDL_SCANCODE_F24 = 115,
    SDL_SCANCODE_EXECUTE = 116,
    SDL_SCANCODE_HELP = 117,
    SDL_SCANCODE_MENU = 118,
    SDL_SCANCODE_SELECT = 119,
    SDL_SCANCODE_STOP = 120,
    SDL_SCANCODE_AGAIN = 121,
    SDL_SCANCODE_UNDO = 122,
    SDL_SCANCODE_CUT = 123,
    SDL_SCANCODE_COPY = 124,
    SDL_SCANCODE_PASTE = 125,
    SDL_SCANCODE_FIND = 126,
    SDL_SCANCODE_MUTE = 127,
    SDL_SCANCODE_VOLUMEUP = 128,
    SDL_SCANCODE_VOLUMEDOWN = 129,




    SDL_SCANCODE_KP_COMMA = 133,
    SDL_SCANCODE_KP_EQUALSAS400 = 134,

    SDL_SCANCODE_INTERNATIONAL1 = 135,

    SDL_SCANCODE_INTERNATIONAL2 = 136,
    SDL_SCANCODE_INTERNATIONAL3 = 137,
    SDL_SCANCODE_INTERNATIONAL4 = 138,
    SDL_SCANCODE_INTERNATIONAL5 = 139,
    SDL_SCANCODE_INTERNATIONAL6 = 140,
    SDL_SCANCODE_INTERNATIONAL7 = 141,
    SDL_SCANCODE_INTERNATIONAL8 = 142,
    SDL_SCANCODE_INTERNATIONAL9 = 143,
    SDL_SCANCODE_LANG1 = 144,
    SDL_SCANCODE_LANG2 = 145,
    SDL_SCANCODE_LANG3 = 146,
    SDL_SCANCODE_LANG4 = 147,
    SDL_SCANCODE_LANG5 = 148,
    SDL_SCANCODE_LANG6 = 149,
    SDL_SCANCODE_LANG7 = 150,
    SDL_SCANCODE_LANG8 = 151,
    SDL_SCANCODE_LANG9 = 152,

    SDL_SCANCODE_ALTERASE = 153,
    SDL_SCANCODE_SYSREQ = 154,
    SDL_SCANCODE_CANCEL = 155,
    SDL_SCANCODE_CLEAR = 156,
    SDL_SCANCODE_PRIOR = 157,
    SDL_SCANCODE_RETURN2 = 158,
    SDL_SCANCODE_SEPARATOR = 159,
    SDL_SCANCODE_OUT = 160,
    SDL_SCANCODE_OPER = 161,
    SDL_SCANCODE_CLEARAGAIN = 162,
    SDL_SCANCODE_CRSEL = 163,
    SDL_SCANCODE_EXSEL = 164,

    SDL_SCANCODE_KP_00 = 176,
    SDL_SCANCODE_KP_000 = 177,
    SDL_SCANCODE_THOUSANDSSEPARATOR = 178,
    SDL_SCANCODE_DECIMALSEPARATOR = 179,
    SDL_SCANCODE_CURRENCYUNIT = 180,
    SDL_SCANCODE_CURRENCYSUBUNIT = 181,
    SDL_SCANCODE_KP_LEFTPAREN = 182,
    SDL_SCANCODE_KP_RIGHTPAREN = 183,
    SDL_SCANCODE_KP_LEFTBRACE = 184,
    SDL_SCANCODE_KP_RIGHTBRACE = 185,
    SDL_SCANCODE_KP_TAB = 186,
    SDL_SCANCODE_KP_BACKSPACE = 187,
    SDL_SCANCODE_KP_A = 188,
    SDL_SCANCODE_KP_B = 189,
    SDL_SCANCODE_KP_C = 190,
    SDL_SCANCODE_KP_D = 191,
    SDL_SCANCODE_KP_E = 192,
    SDL_SCANCODE_KP_F = 193,
    SDL_SCANCODE_KP_XOR = 194,
    SDL_SCANCODE_KP_POWER = 195,
    SDL_SCANCODE_KP_PERCENT = 196,
    SDL_SCANCODE_KP_LESS = 197,
    SDL_SCANCODE_KP_GREATER = 198,
    SDL_SCANCODE_KP_AMPERSAND = 199,
    SDL_SCANCODE_KP_DBLAMPERSAND = 200,
    SDL_SCANCODE_KP_VERTICALBAR = 201,
    SDL_SCANCODE_KP_DBLVERTICALBAR = 202,
    SDL_SCANCODE_KP_COLON = 203,
    SDL_SCANCODE_KP_HASH = 204,
    SDL_SCANCODE_KP_SPACE = 205,
    SDL_SCANCODE_KP_AT = 206,
    SDL_SCANCODE_KP_EXCLAM = 207,
    SDL_SCANCODE_KP_MEMSTORE = 208,
    SDL_SCANCODE_KP_MEMRECALL = 209,
    SDL_SCANCODE_KP_MEMCLEAR = 210,
    SDL_SCANCODE_KP_MEMADD = 211,
    SDL_SCANCODE_KP_MEMSUBTRACT = 212,
    SDL_SCANCODE_KP_MEMMULTIPLY = 213,
    SDL_SCANCODE_KP_MEMDIVIDE = 214,
    SDL_SCANCODE_KP_PLUSMINUS = 215,
    SDL_SCANCODE_KP_CLEAR = 216,
    SDL_SCANCODE_KP_CLEARENTRY = 217,
    SDL_SCANCODE_KP_BINARY = 218,
    SDL_SCANCODE_KP_OCTAL = 219,
    SDL_SCANCODE_KP_DECIMAL = 220,
    SDL_SCANCODE_KP_HEXADECIMAL = 221,

    SDL_SCANCODE_LCTRL = 224,
    SDL_SCANCODE_LSHIFT = 225,
    SDL_SCANCODE_LALT = 226,
    SDL_SCANCODE_LGUI = 227,
    SDL_SCANCODE_RCTRL = 228,
    SDL_SCANCODE_RSHIFT = 229,
    SDL_SCANCODE_RALT = 230,
    SDL_SCANCODE_RGUI = 231,

    SDL_SCANCODE_MODE = 257,
# 351 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_scancode.h"
    SDL_SCANCODE_AUDIONEXT = 258,
    SDL_SCANCODE_AUDIOPREV = 259,
    SDL_SCANCODE_AUDIOSTOP = 260,
    SDL_SCANCODE_AUDIOPLAY = 261,
    SDL_SCANCODE_AUDIOMUTE = 262,
    SDL_SCANCODE_MEDIASELECT = 263,
    SDL_SCANCODE_WWW = 264,
    SDL_SCANCODE_MAIL = 265,
    SDL_SCANCODE_CALCULATOR = 266,
    SDL_SCANCODE_COMPUTER = 267,
    SDL_SCANCODE_AC_SEARCH = 268,
    SDL_SCANCODE_AC_HOME = 269,
    SDL_SCANCODE_AC_BACK = 270,
    SDL_SCANCODE_AC_FORWARD = 271,
    SDL_SCANCODE_AC_STOP = 272,
    SDL_SCANCODE_AC_REFRESH = 273,
    SDL_SCANCODE_AC_BOOKMARKS = 274,
# 378 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_scancode.h"
    SDL_SCANCODE_BRIGHTNESSDOWN = 275,
    SDL_SCANCODE_BRIGHTNESSUP = 276,
    SDL_SCANCODE_DISPLAYSWITCH = 277,

    SDL_SCANCODE_KBDILLUMTOGGLE = 278,
    SDL_SCANCODE_KBDILLUMDOWN = 279,
    SDL_SCANCODE_KBDILLUMUP = 280,
    SDL_SCANCODE_EJECT = 281,
    SDL_SCANCODE_SLEEP = 282,

    SDL_SCANCODE_APP1 = 283,
    SDL_SCANCODE_APP2 = 284,
# 400 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_scancode.h"
    SDL_SCANCODE_AUDIOREWIND = 285,
    SDL_SCANCODE_AUDIOFASTFORWARD = 286,
# 412 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_scancode.h"
    SDL_SCANCODE_SOFTLEFT = 287,



    SDL_SCANCODE_SOFTRIGHT = 288,



    SDL_SCANCODE_CALL = 289,
    SDL_SCANCODE_ENDCALL = 290,





    SDL_NUM_SCANCODES = 512

} SDL_Scancode;
# 33 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keycode.h" 2
# 45 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keycode.h"
typedef Sint32 SDL_Keycode;




typedef enum
{
    SDLK_UNKNOWN = 0,

    SDLK_RETURN = '\r',
    SDLK_ESCAPE = '\x1B',
    SDLK_BACKSPACE = '\b',
    SDLK_TAB = '\t',
    SDLK_SPACE = ' ',
    SDLK_EXCLAIM = '!',
    SDLK_QUOTEDBL = '"',
    SDLK_HASH = '#',
    SDLK_PERCENT = '%',
    SDLK_DOLLAR = '$',
    SDLK_AMPERSAND = '&',
    SDLK_QUOTE = '\'',
    SDLK_LEFTPAREN = '(',
    SDLK_RIGHTPAREN = ')',
    SDLK_ASTERISK = '*',
    SDLK_PLUS = '+',
    SDLK_COMMA = ',',
    SDLK_MINUS = '-',
    SDLK_PERIOD = '.',
    SDLK_SLASH = '/',
    SDLK_0 = '0',
    SDLK_1 = '1',
    SDLK_2 = '2',
    SDLK_3 = '3',
    SDLK_4 = '4',
    SDLK_5 = '5',
    SDLK_6 = '6',
    SDLK_7 = '7',
    SDLK_8 = '8',
    SDLK_9 = '9',
    SDLK_COLON = ':',
    SDLK_SEMICOLON = ';',
    SDLK_LESS = '<',
    SDLK_EQUALS = '=',
    SDLK_GREATER = '>',
    SDLK_QUESTION = '?',
    SDLK_AT = '@',





    SDLK_LEFTBRACKET = '[',
    SDLK_BACKSLASH = '\\',
    SDLK_RIGHTBRACKET = ']',
    SDLK_CARET = '^',
    SDLK_UNDERSCORE = '_',
    SDLK_BACKQUOTE = '`',
    SDLK_a = 'a',
    SDLK_b = 'b',
    SDLK_c = 'c',
    SDLK_d = 'd',
    SDLK_e = 'e',
    SDLK_f = 'f',
    SDLK_g = 'g',
    SDLK_h = 'h',
    SDLK_i = 'i',
    SDLK_j = 'j',
    SDLK_k = 'k',
    SDLK_l = 'l',
    SDLK_m = 'm',
    SDLK_n = 'n',
    SDLK_o = 'o',
    SDLK_p = 'p',
    SDLK_q = 'q',
    SDLK_r = 'r',
    SDLK_s = 's',
    SDLK_t = 't',
    SDLK_u = 'u',
    SDLK_v = 'v',
    SDLK_w = 'w',
    SDLK_x = 'x',
    SDLK_y = 'y',
    SDLK_z = 'z',

    SDLK_CAPSLOCK = (SDL_SCANCODE_CAPSLOCK | (1<<30)),

    SDLK_F1 = (SDL_SCANCODE_F1 | (1<<30)),
    SDLK_F2 = (SDL_SCANCODE_F2 | (1<<30)),
    SDLK_F3 = (SDL_SCANCODE_F3 | (1<<30)),
    SDLK_F4 = (SDL_SCANCODE_F4 | (1<<30)),
    SDLK_F5 = (SDL_SCANCODE_F5 | (1<<30)),
    SDLK_F6 = (SDL_SCANCODE_F6 | (1<<30)),
    SDLK_F7 = (SDL_SCANCODE_F7 | (1<<30)),
    SDLK_F8 = (SDL_SCANCODE_F8 | (1<<30)),
    SDLK_F9 = (SDL_SCANCODE_F9 | (1<<30)),
    SDLK_F10 = (SDL_SCANCODE_F10 | (1<<30)),
    SDLK_F11 = (SDL_SCANCODE_F11 | (1<<30)),
    SDLK_F12 = (SDL_SCANCODE_F12 | (1<<30)),

    SDLK_PRINTSCREEN = (SDL_SCANCODE_PRINTSCREEN | (1<<30)),
    SDLK_SCROLLLOCK = (SDL_SCANCODE_SCROLLLOCK | (1<<30)),
    SDLK_PAUSE = (SDL_SCANCODE_PAUSE | (1<<30)),
    SDLK_INSERT = (SDL_SCANCODE_INSERT | (1<<30)),
    SDLK_HOME = (SDL_SCANCODE_HOME | (1<<30)),
    SDLK_PAGEUP = (SDL_SCANCODE_PAGEUP | (1<<30)),
    SDLK_DELETE = '\x7F',
    SDLK_END = (SDL_SCANCODE_END | (1<<30)),
    SDLK_PAGEDOWN = (SDL_SCANCODE_PAGEDOWN | (1<<30)),
    SDLK_RIGHT = (SDL_SCANCODE_RIGHT | (1<<30)),
    SDLK_LEFT = (SDL_SCANCODE_LEFT | (1<<30)),
    SDLK_DOWN = (SDL_SCANCODE_DOWN | (1<<30)),
    SDLK_UP = (SDL_SCANCODE_UP | (1<<30)),

    SDLK_NUMLOCKCLEAR = (SDL_SCANCODE_NUMLOCKCLEAR | (1<<30)),
    SDLK_KP_DIVIDE = (SDL_SCANCODE_KP_DIVIDE | (1<<30)),
    SDLK_KP_MULTIPLY = (SDL_SCANCODE_KP_MULTIPLY | (1<<30)),
    SDLK_KP_MINUS = (SDL_SCANCODE_KP_MINUS | (1<<30)),
    SDLK_KP_PLUS = (SDL_SCANCODE_KP_PLUS | (1<<30)),
    SDLK_KP_ENTER = (SDL_SCANCODE_KP_ENTER | (1<<30)),
    SDLK_KP_1 = (SDL_SCANCODE_KP_1 | (1<<30)),
    SDLK_KP_2 = (SDL_SCANCODE_KP_2 | (1<<30)),
    SDLK_KP_3 = (SDL_SCANCODE_KP_3 | (1<<30)),
    SDLK_KP_4 = (SDL_SCANCODE_KP_4 | (1<<30)),
    SDLK_KP_5 = (SDL_SCANCODE_KP_5 | (1<<30)),
    SDLK_KP_6 = (SDL_SCANCODE_KP_6 | (1<<30)),
    SDLK_KP_7 = (SDL_SCANCODE_KP_7 | (1<<30)),
    SDLK_KP_8 = (SDL_SCANCODE_KP_8 | (1<<30)),
    SDLK_KP_9 = (SDL_SCANCODE_KP_9 | (1<<30)),
    SDLK_KP_0 = (SDL_SCANCODE_KP_0 | (1<<30)),
    SDLK_KP_PERIOD = (SDL_SCANCODE_KP_PERIOD | (1<<30)),

    SDLK_APPLICATION = (SDL_SCANCODE_APPLICATION | (1<<30)),
    SDLK_POWER = (SDL_SCANCODE_POWER | (1<<30)),
    SDLK_KP_EQUALS = (SDL_SCANCODE_KP_EQUALS | (1<<30)),
    SDLK_F13 = (SDL_SCANCODE_F13 | (1<<30)),
    SDLK_F14 = (SDL_SCANCODE_F14 | (1<<30)),
    SDLK_F15 = (SDL_SCANCODE_F15 | (1<<30)),
    SDLK_F16 = (SDL_SCANCODE_F16 | (1<<30)),
    SDLK_F17 = (SDL_SCANCODE_F17 | (1<<30)),
    SDLK_F18 = (SDL_SCANCODE_F18 | (1<<30)),
    SDLK_F19 = (SDL_SCANCODE_F19 | (1<<30)),
    SDLK_F20 = (SDL_SCANCODE_F20 | (1<<30)),
    SDLK_F21 = (SDL_SCANCODE_F21 | (1<<30)),
    SDLK_F22 = (SDL_SCANCODE_F22 | (1<<30)),
    SDLK_F23 = (SDL_SCANCODE_F23 | (1<<30)),
    SDLK_F24 = (SDL_SCANCODE_F24 | (1<<30)),
    SDLK_EXECUTE = (SDL_SCANCODE_EXECUTE | (1<<30)),
    SDLK_HELP = (SDL_SCANCODE_HELP | (1<<30)),
    SDLK_MENU = (SDL_SCANCODE_MENU | (1<<30)),
    SDLK_SELECT = (SDL_SCANCODE_SELECT | (1<<30)),
    SDLK_STOP = (SDL_SCANCODE_STOP | (1<<30)),
    SDLK_AGAIN = (SDL_SCANCODE_AGAIN | (1<<30)),
    SDLK_UNDO = (SDL_SCANCODE_UNDO | (1<<30)),
    SDLK_CUT = (SDL_SCANCODE_CUT | (1<<30)),
    SDLK_COPY = (SDL_SCANCODE_COPY | (1<<30)),
    SDLK_PASTE = (SDL_SCANCODE_PASTE | (1<<30)),
    SDLK_FIND = (SDL_SCANCODE_FIND | (1<<30)),
    SDLK_MUTE = (SDL_SCANCODE_MUTE | (1<<30)),
    SDLK_VOLUMEUP = (SDL_SCANCODE_VOLUMEUP | (1<<30)),
    SDLK_VOLUMEDOWN = (SDL_SCANCODE_VOLUMEDOWN | (1<<30)),
    SDLK_KP_COMMA = (SDL_SCANCODE_KP_COMMA | (1<<30)),
    SDLK_KP_EQUALSAS400 =
        (SDL_SCANCODE_KP_EQUALSAS400 | (1<<30)),

    SDLK_ALTERASE = (SDL_SCANCODE_ALTERASE | (1<<30)),
    SDLK_SYSREQ = (SDL_SCANCODE_SYSREQ | (1<<30)),
    SDLK_CANCEL = (SDL_SCANCODE_CANCEL | (1<<30)),
    SDLK_CLEAR = (SDL_SCANCODE_CLEAR | (1<<30)),
    SDLK_PRIOR = (SDL_SCANCODE_PRIOR | (1<<30)),
    SDLK_RETURN2 = (SDL_SCANCODE_RETURN2 | (1<<30)),
    SDLK_SEPARATOR = (SDL_SCANCODE_SEPARATOR | (1<<30)),
    SDLK_OUT = (SDL_SCANCODE_OUT | (1<<30)),
    SDLK_OPER = (SDL_SCANCODE_OPER | (1<<30)),
    SDLK_CLEARAGAIN = (SDL_SCANCODE_CLEARAGAIN | (1<<30)),
    SDLK_CRSEL = (SDL_SCANCODE_CRSEL | (1<<30)),
    SDLK_EXSEL = (SDL_SCANCODE_EXSEL | (1<<30)),

    SDLK_KP_00 = (SDL_SCANCODE_KP_00 | (1<<30)),
    SDLK_KP_000 = (SDL_SCANCODE_KP_000 | (1<<30)),
    SDLK_THOUSANDSSEPARATOR =
        (SDL_SCANCODE_THOUSANDSSEPARATOR | (1<<30)),
    SDLK_DECIMALSEPARATOR =
        (SDL_SCANCODE_DECIMALSEPARATOR | (1<<30)),
    SDLK_CURRENCYUNIT = (SDL_SCANCODE_CURRENCYUNIT | (1<<30)),
    SDLK_CURRENCYSUBUNIT =
        (SDL_SCANCODE_CURRENCYSUBUNIT | (1<<30)),
    SDLK_KP_LEFTPAREN = (SDL_SCANCODE_KP_LEFTPAREN | (1<<30)),
    SDLK_KP_RIGHTPAREN = (SDL_SCANCODE_KP_RIGHTPAREN | (1<<30)),
    SDLK_KP_LEFTBRACE = (SDL_SCANCODE_KP_LEFTBRACE | (1<<30)),
    SDLK_KP_RIGHTBRACE = (SDL_SCANCODE_KP_RIGHTBRACE | (1<<30)),
    SDLK_KP_TAB = (SDL_SCANCODE_KP_TAB | (1<<30)),
    SDLK_KP_BACKSPACE = (SDL_SCANCODE_KP_BACKSPACE | (1<<30)),
    SDLK_KP_A = (SDL_SCANCODE_KP_A | (1<<30)),
    SDLK_KP_B = (SDL_SCANCODE_KP_B | (1<<30)),
    SDLK_KP_C = (SDL_SCANCODE_KP_C | (1<<30)),
    SDLK_KP_D = (SDL_SCANCODE_KP_D | (1<<30)),
    SDLK_KP_E = (SDL_SCANCODE_KP_E | (1<<30)),
    SDLK_KP_F = (SDL_SCANCODE_KP_F | (1<<30)),
    SDLK_KP_XOR = (SDL_SCANCODE_KP_XOR | (1<<30)),
    SDLK_KP_POWER = (SDL_SCANCODE_KP_POWER | (1<<30)),
    SDLK_KP_PERCENT = (SDL_SCANCODE_KP_PERCENT | (1<<30)),
    SDLK_KP_LESS = (SDL_SCANCODE_KP_LESS | (1<<30)),
    SDLK_KP_GREATER = (SDL_SCANCODE_KP_GREATER | (1<<30)),
    SDLK_KP_AMPERSAND = (SDL_SCANCODE_KP_AMPERSAND | (1<<30)),
    SDLK_KP_DBLAMPERSAND =
        (SDL_SCANCODE_KP_DBLAMPERSAND | (1<<30)),
    SDLK_KP_VERTICALBAR =
        (SDL_SCANCODE_KP_VERTICALBAR | (1<<30)),
    SDLK_KP_DBLVERTICALBAR =
        (SDL_SCANCODE_KP_DBLVERTICALBAR | (1<<30)),
    SDLK_KP_COLON = (SDL_SCANCODE_KP_COLON | (1<<30)),
    SDLK_KP_HASH = (SDL_SCANCODE_KP_HASH | (1<<30)),
    SDLK_KP_SPACE = (SDL_SCANCODE_KP_SPACE | (1<<30)),
    SDLK_KP_AT = (SDL_SCANCODE_KP_AT | (1<<30)),
    SDLK_KP_EXCLAM = (SDL_SCANCODE_KP_EXCLAM | (1<<30)),
    SDLK_KP_MEMSTORE = (SDL_SCANCODE_KP_MEMSTORE | (1<<30)),
    SDLK_KP_MEMRECALL = (SDL_SCANCODE_KP_MEMRECALL | (1<<30)),
    SDLK_KP_MEMCLEAR = (SDL_SCANCODE_KP_MEMCLEAR | (1<<30)),
    SDLK_KP_MEMADD = (SDL_SCANCODE_KP_MEMADD | (1<<30)),
    SDLK_KP_MEMSUBTRACT =
        (SDL_SCANCODE_KP_MEMSUBTRACT | (1<<30)),
    SDLK_KP_MEMMULTIPLY =
        (SDL_SCANCODE_KP_MEMMULTIPLY | (1<<30)),
    SDLK_KP_MEMDIVIDE = (SDL_SCANCODE_KP_MEMDIVIDE | (1<<30)),
    SDLK_KP_PLUSMINUS = (SDL_SCANCODE_KP_PLUSMINUS | (1<<30)),
    SDLK_KP_CLEAR = (SDL_SCANCODE_KP_CLEAR | (1<<30)),
    SDLK_KP_CLEARENTRY = (SDL_SCANCODE_KP_CLEARENTRY | (1<<30)),
    SDLK_KP_BINARY = (SDL_SCANCODE_KP_BINARY | (1<<30)),
    SDLK_KP_OCTAL = (SDL_SCANCODE_KP_OCTAL | (1<<30)),
    SDLK_KP_DECIMAL = (SDL_SCANCODE_KP_DECIMAL | (1<<30)),
    SDLK_KP_HEXADECIMAL =
        (SDL_SCANCODE_KP_HEXADECIMAL | (1<<30)),

    SDLK_LCTRL = (SDL_SCANCODE_LCTRL | (1<<30)),
    SDLK_LSHIFT = (SDL_SCANCODE_LSHIFT | (1<<30)),
    SDLK_LALT = (SDL_SCANCODE_LALT | (1<<30)),
    SDLK_LGUI = (SDL_SCANCODE_LGUI | (1<<30)),
    SDLK_RCTRL = (SDL_SCANCODE_RCTRL | (1<<30)),
    SDLK_RSHIFT = (SDL_SCANCODE_RSHIFT | (1<<30)),
    SDLK_RALT = (SDL_SCANCODE_RALT | (1<<30)),
    SDLK_RGUI = (SDL_SCANCODE_RGUI | (1<<30)),

    SDLK_MODE = (SDL_SCANCODE_MODE | (1<<30)),

    SDLK_AUDIONEXT = (SDL_SCANCODE_AUDIONEXT | (1<<30)),
    SDLK_AUDIOPREV = (SDL_SCANCODE_AUDIOPREV | (1<<30)),
    SDLK_AUDIOSTOP = (SDL_SCANCODE_AUDIOSTOP | (1<<30)),
    SDLK_AUDIOPLAY = (SDL_SCANCODE_AUDIOPLAY | (1<<30)),
    SDLK_AUDIOMUTE = (SDL_SCANCODE_AUDIOMUTE | (1<<30)),
    SDLK_MEDIASELECT = (SDL_SCANCODE_MEDIASELECT | (1<<30)),
    SDLK_WWW = (SDL_SCANCODE_WWW | (1<<30)),
    SDLK_MAIL = (SDL_SCANCODE_MAIL | (1<<30)),
    SDLK_CALCULATOR = (SDL_SCANCODE_CALCULATOR | (1<<30)),
    SDLK_COMPUTER = (SDL_SCANCODE_COMPUTER | (1<<30)),
    SDLK_AC_SEARCH = (SDL_SCANCODE_AC_SEARCH | (1<<30)),
    SDLK_AC_HOME = (SDL_SCANCODE_AC_HOME | (1<<30)),
    SDLK_AC_BACK = (SDL_SCANCODE_AC_BACK | (1<<30)),
    SDLK_AC_FORWARD = (SDL_SCANCODE_AC_FORWARD | (1<<30)),
    SDLK_AC_STOP = (SDL_SCANCODE_AC_STOP | (1<<30)),
    SDLK_AC_REFRESH = (SDL_SCANCODE_AC_REFRESH | (1<<30)),
    SDLK_AC_BOOKMARKS = (SDL_SCANCODE_AC_BOOKMARKS | (1<<30)),

    SDLK_BRIGHTNESSDOWN =
        (SDL_SCANCODE_BRIGHTNESSDOWN | (1<<30)),
    SDLK_BRIGHTNESSUP = (SDL_SCANCODE_BRIGHTNESSUP | (1<<30)),
    SDLK_DISPLAYSWITCH = (SDL_SCANCODE_DISPLAYSWITCH | (1<<30)),
    SDLK_KBDILLUMTOGGLE =
        (SDL_SCANCODE_KBDILLUMTOGGLE | (1<<30)),
    SDLK_KBDILLUMDOWN = (SDL_SCANCODE_KBDILLUMDOWN | (1<<30)),
    SDLK_KBDILLUMUP = (SDL_SCANCODE_KBDILLUMUP | (1<<30)),
    SDLK_EJECT = (SDL_SCANCODE_EJECT | (1<<30)),
    SDLK_SLEEP = (SDL_SCANCODE_SLEEP | (1<<30)),
    SDLK_APP1 = (SDL_SCANCODE_APP1 | (1<<30)),
    SDLK_APP2 = (SDL_SCANCODE_APP2 | (1<<30)),

    SDLK_AUDIOREWIND = (SDL_SCANCODE_AUDIOREWIND | (1<<30)),
    SDLK_AUDIOFASTFORWARD = (SDL_SCANCODE_AUDIOFASTFORWARD | (1<<30)),

    SDLK_SOFTLEFT = (SDL_SCANCODE_SOFTLEFT | (1<<30)),
    SDLK_SOFTRIGHT = (SDL_SCANCODE_SOFTRIGHT | (1<<30)),
    SDLK_CALL = (SDL_SCANCODE_CALL | (1<<30)),
    SDLK_ENDCALL = (SDL_SCANCODE_ENDCALL | (1<<30))
} SDL_KeyCode;




typedef enum
{
    KMOD_NONE = 0x0000,
    KMOD_LSHIFT = 0x0001,
    KMOD_RSHIFT = 0x0002,
    KMOD_LCTRL = 0x0040,
    KMOD_RCTRL = 0x0080,
    KMOD_LALT = 0x0100,
    KMOD_RALT = 0x0200,
    KMOD_LGUI = 0x0400,
    KMOD_RGUI = 0x0800,
    KMOD_NUM = 0x1000,
    KMOD_CAPS = 0x2000,
    KMOD_MODE = 0x4000,
    KMOD_SCROLL = 0x8000,

    KMOD_CTRL = KMOD_LCTRL | KMOD_RCTRL,
    KMOD_SHIFT = KMOD_LSHIFT | KMOD_RSHIFT,
    KMOD_ALT = KMOD_LALT | KMOD_RALT,
    KMOD_GUI = KMOD_LGUI | KMOD_RGUI,

    KMOD_RESERVED = KMOD_SCROLL
} SDL_Keymod;
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h" 2


# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 37 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h" 2
# 47 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
typedef struct SDL_Keysym
{
    SDL_Scancode scancode;
    SDL_Keycode sym;
    Uint16 mod;
    Uint32 unused;
} SDL_Keysym;
# 64 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
extern __attribute__ ((visibility("default"))) SDL_Window * SDL_GetKeyboardFocus(void);
# 95 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
extern __attribute__ ((visibility("default"))) const Uint8 * SDL_GetKeyboardState(int *numkeys);
# 106 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
extern __attribute__ ((visibility("default"))) void SDL_ResetKeyboard(void);
# 119 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
extern __attribute__ ((visibility("default"))) SDL_Keymod SDL_GetModState(void);
# 138 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
extern __attribute__ ((visibility("default"))) void SDL_SetModState(SDL_Keymod modstate);
# 154 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
extern __attribute__ ((visibility("default"))) SDL_Keycode SDL_GetKeyFromScancode(SDL_Scancode scancode);
# 170 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
extern __attribute__ ((visibility("default"))) SDL_Scancode SDL_GetScancodeFromKey(SDL_Keycode key);
# 195 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GetScancodeName(SDL_Scancode scancode);
# 210 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
extern __attribute__ ((visibility("default"))) SDL_Scancode SDL_GetScancodeFromName(const char *name);
# 229 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GetKeyName(SDL_Keycode key);
# 244 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
extern __attribute__ ((visibility("default"))) SDL_Keycode SDL_GetKeyFromName(const char *name);
# 261 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
extern __attribute__ ((visibility("default"))) void SDL_StartTextInput(void);
# 272 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_IsTextInputActive(void);
# 281 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
extern __attribute__ ((visibility("default"))) void SDL_StopTextInput(void);
# 291 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
extern __attribute__ ((visibility("default"))) void SDL_ClearComposition(void);






extern __attribute__ ((visibility("default"))) SDL_bool SDL_IsTextInputShown(void);
# 318 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
extern __attribute__ ((visibility("default"))) void SDL_SetTextInputRect(const SDL_Rect *rect);
# 331 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasScreenKeyboardSupport(void);
# 343 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_IsScreenKeyboardShown(SDL_Window *window);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 350 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_keyboard.h" 2
# 35 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h" 1
# 35 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 36 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h" 2





typedef struct SDL_Cursor SDL_Cursor;




typedef enum
{
    SDL_SYSTEM_CURSOR_ARROW,
    SDL_SYSTEM_CURSOR_IBEAM,
    SDL_SYSTEM_CURSOR_WAIT,
    SDL_SYSTEM_CURSOR_CROSSHAIR,
    SDL_SYSTEM_CURSOR_WAITARROW,
    SDL_SYSTEM_CURSOR_SIZENWSE,
    SDL_SYSTEM_CURSOR_SIZENESW,
    SDL_SYSTEM_CURSOR_SIZEWE,
    SDL_SYSTEM_CURSOR_SIZENS,
    SDL_SYSTEM_CURSOR_SIZEALL,
    SDL_SYSTEM_CURSOR_NO,
    SDL_SYSTEM_CURSOR_HAND,
    SDL_NUM_SYSTEM_CURSORS
} SDL_SystemCursor;




typedef enum
{
    SDL_MOUSEWHEEL_NORMAL,
    SDL_MOUSEWHEEL_FLIPPED
} SDL_MouseWheelDirection;
# 81 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
extern __attribute__ ((visibility("default"))) SDL_Window * SDL_GetMouseFocus(void);
# 104 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
extern __attribute__ ((visibility("default"))) Uint32 SDL_GetMouseState(int *x, int *y);
# 133 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
extern __attribute__ ((visibility("default"))) Uint32 SDL_GetGlobalMouseState(int *x, int *y);
# 152 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
extern __attribute__ ((visibility("default"))) Uint32 SDL_GetRelativeMouseState(int *x, int *y);
# 173 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
extern __attribute__ ((visibility("default"))) void SDL_WarpMouseInWindow(SDL_Window * window,
                                                   int x, int y);
# 196 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
extern __attribute__ ((visibility("default"))) int SDL_WarpMouseGlobal(int x, int y);
# 221 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
extern __attribute__ ((visibility("default"))) int SDL_SetRelativeMouseMode(SDL_bool enabled);
# 267 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
extern __attribute__ ((visibility("default"))) int SDL_CaptureMouse(SDL_bool enabled);
# 278 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_GetRelativeMouseMode(void);
# 321 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
extern __attribute__ ((visibility("default"))) SDL_Cursor * SDL_CreateCursor(const Uint8 * data,
                                                     const Uint8 * mask,
                                                     int w, int h, int hot_x,
                                                     int hot_y);
# 340 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
extern __attribute__ ((visibility("default"))) SDL_Cursor * SDL_CreateColorCursor(SDL_Surface *surface,
                                                          int hot_x,
                                                          int hot_y);
# 355 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
extern __attribute__ ((visibility("default"))) SDL_Cursor * SDL_CreateSystemCursor(SDL_SystemCursor id);
# 373 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
extern __attribute__ ((visibility("default"))) void SDL_SetCursor(SDL_Cursor * cursor);
# 387 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
extern __attribute__ ((visibility("default"))) SDL_Cursor * SDL_GetCursor(void);
# 398 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
extern __attribute__ ((visibility("default"))) SDL_Cursor * SDL_GetDefaultCursor(void);
# 414 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
extern __attribute__ ((visibility("default"))) void SDL_FreeCursor(SDL_Cursor * cursor);
# 436 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
extern __attribute__ ((visibility("default"))) int SDL_ShowCursor(int toggle);
# 461 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 462 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_mouse.h" 2
# 36 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h" 1
# 46 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_guid.h" 1
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_guid.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 35 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_guid.h" 2
# 55 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_guid.h"
typedef struct {
    Uint8 data[16];
} SDL_GUID;
# 74 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_guid.h"
extern __attribute__ ((visibility("default"))) void SDL_GUIDToString(SDL_GUID guid, char *pszGUID, int cbGUID);
# 90 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_guid.h"
extern __attribute__ ((visibility("default"))) SDL_GUID SDL_GUIDFromString(const char *pchGUID);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 97 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_guid.h" 2
# 47 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h" 2

# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 49 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h" 2
# 69 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
struct _SDL_Joystick;
typedef struct _SDL_Joystick SDL_Joystick;


typedef SDL_GUID SDL_JoystickGUID;
# 82 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
typedef Sint32 SDL_JoystickID;

typedef enum
{
    SDL_JOYSTICK_TYPE_UNKNOWN,
    SDL_JOYSTICK_TYPE_GAMECONTROLLER,
    SDL_JOYSTICK_TYPE_WHEEL,
    SDL_JOYSTICK_TYPE_ARCADE_STICK,
    SDL_JOYSTICK_TYPE_FLIGHT_STICK,
    SDL_JOYSTICK_TYPE_DANCE_PAD,
    SDL_JOYSTICK_TYPE_GUITAR,
    SDL_JOYSTICK_TYPE_DRUM_KIT,
    SDL_JOYSTICK_TYPE_ARCADE_PAD,
    SDL_JOYSTICK_TYPE_THROTTLE
} SDL_JoystickType;

typedef enum
{
    SDL_JOYSTICK_POWER_UNKNOWN = -1,
    SDL_JOYSTICK_POWER_EMPTY,
    SDL_JOYSTICK_POWER_LOW,
    SDL_JOYSTICK_POWER_MEDIUM,
    SDL_JOYSTICK_POWER_FULL,
    SDL_JOYSTICK_POWER_WIRED,
    SDL_JOYSTICK_POWER_MAX
} SDL_JoystickPowerLevel;
# 129 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) void SDL_LockJoysticks(void);
# 144 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) void SDL_UnlockJoysticks(void);
# 158 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) int SDL_NumJoysticks(void);
# 175 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) const char * SDL_JoystickNameForIndex(int device_index);
# 192 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) const char * SDL_JoystickPathForIndex(int device_index);







extern __attribute__ ((visibility("default"))) int SDL_JoystickGetDevicePlayerIndex(int device_index);
# 218 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) SDL_JoystickGUID SDL_JoystickGetDeviceGUID(int device_index);
# 233 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) Uint16 SDL_JoystickGetDeviceVendor(int device_index);
# 248 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) Uint16 SDL_JoystickGetDeviceProduct(int device_index);
# 263 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) Uint16 SDL_JoystickGetDeviceProductVersion(int device_index);
# 277 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) SDL_JoystickType SDL_JoystickGetDeviceType(int device_index);
# 292 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) SDL_JoystickID SDL_JoystickGetDeviceInstanceID(int device_index);
# 314 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) SDL_Joystick * SDL_JoystickOpen(int device_index);
# 325 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) SDL_Joystick * SDL_JoystickFromInstanceID(SDL_JoystickID instance_id);
# 336 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) SDL_Joystick * SDL_JoystickFromPlayerIndex(int player_index);
# 345 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) int SDL_JoystickAttachVirtual(SDL_JoystickType type,
                                                      int naxes,
                                                      int nbuttons,
                                                      int nhats);
# 358 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
typedef struct SDL_VirtualJoystickDesc
{
    Uint16 version;
    Uint16 type;
    Uint16 naxes;
    Uint16 nbuttons;
    Uint16 nhats;
    Uint16 vendor_id;
    Uint16 product_id;
    Uint16 padding;
    Uint32 button_mask;

    Uint32 axis_mask;

    const char *name;

    void *userdata;
    void ( *Update)(void *userdata);
    void ( *SetPlayerIndex)(void *userdata, int player_index);
    int ( *Rumble)(void *userdata, Uint16 low_frequency_rumble, Uint16 high_frequency_rumble);
    int ( *RumbleTriggers)(void *userdata, Uint16 left_rumble, Uint16 right_rumble);
    int ( *SetLED)(void *userdata, Uint8 red, Uint8 green, Uint8 blue);
    int ( *SendEffect)(void *userdata, const void *data, int size);

} SDL_VirtualJoystickDesc;
# 396 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) int SDL_JoystickAttachVirtualEx(const SDL_VirtualJoystickDesc *desc);
# 407 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) int SDL_JoystickDetachVirtual(int device_index);
# 417 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_JoystickIsVirtual(int device_index);
# 435 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) int SDL_JoystickSetVirtualAxis(SDL_Joystick *joystick, int axis, Sint16 value);
# 453 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) int SDL_JoystickSetVirtualButton(SDL_Joystick *joystick, int button, Uint8 value);
# 471 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) int SDL_JoystickSetVirtualHat(SDL_Joystick *joystick, int hat, Uint8 value);
# 485 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) const char * SDL_JoystickName(SDL_Joystick *joystick);
# 498 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) const char * SDL_JoystickPath(SDL_Joystick *joystick);
# 511 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) int SDL_JoystickGetPlayerIndex(SDL_Joystick *joystick);
# 522 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) void SDL_JoystickSetPlayerIndex(SDL_Joystick *joystick, int player_index);
# 539 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) SDL_JoystickGUID SDL_JoystickGetGUID(SDL_Joystick *joystick);
# 551 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) Uint16 SDL_JoystickGetVendor(SDL_Joystick *joystick);
# 563 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) Uint16 SDL_JoystickGetProduct(SDL_Joystick *joystick);
# 575 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) Uint16 SDL_JoystickGetProductVersion(SDL_Joystick *joystick);
# 588 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) Uint16 SDL_JoystickGetFirmwareVersion(SDL_Joystick *joystick);
# 601 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) const char * SDL_JoystickGetSerial(SDL_Joystick *joystick);
# 611 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) SDL_JoystickType SDL_JoystickGetType(SDL_Joystick *joystick);
# 628 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) void SDL_JoystickGetGUIDString(SDL_JoystickGUID guid, char *pszGUID, int cbGUID);
# 644 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) SDL_JoystickGUID SDL_JoystickGetGUIDFromString(const char *pchGUID);
# 658 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_JoystickGetAttached(SDL_Joystick *joystick);
# 671 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) SDL_JoystickID SDL_JoystickInstanceID(SDL_Joystick *joystick);
# 690 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) int SDL_JoystickNumAxes(SDL_Joystick *joystick);
# 708 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) int SDL_JoystickNumBalls(SDL_Joystick *joystick);
# 722 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) int SDL_JoystickNumHats(SDL_Joystick *joystick);
# 736 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) int SDL_JoystickNumButtons(SDL_Joystick *joystick);
# 748 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) void SDL_JoystickUpdate(void);
# 773 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) int SDL_JoystickEventState(int state);
# 800 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) Sint16 SDL_JoystickGetAxis(SDL_Joystick *joystick,
                                                   int axis);
# 817 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_JoystickGetAxisInitialState(SDL_Joystick *joystick,
                                                   int axis, Sint16 *state);
# 858 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) Uint8 SDL_JoystickGetHat(SDL_Joystick *joystick,
                                                 int hat);
# 880 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) int SDL_JoystickGetBall(SDL_Joystick *joystick,
                                                int ball, int *dx, int *dy);
# 895 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) Uint8 SDL_JoystickGetButton(SDL_Joystick *joystick,
                                                    int button);
# 916 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) int SDL_JoystickRumble(SDL_Joystick *joystick, Uint16 low_frequency_rumble, Uint16 high_frequency_rumble, Uint32 duration_ms);
# 941 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) int SDL_JoystickRumbleTriggers(SDL_Joystick *joystick, Uint16 left_rumble, Uint16 right_rumble, Uint32 duration_ms);
# 954 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_JoystickHasLED(SDL_Joystick *joystick);
# 966 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_JoystickHasRumble(SDL_Joystick *joystick);
# 978 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_JoystickHasRumbleTriggers(SDL_Joystick *joystick);
# 994 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) int SDL_JoystickSetLED(SDL_Joystick *joystick, Uint8 red, Uint8 green, Uint8 blue);
# 1006 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) int SDL_JoystickSendEffect(SDL_Joystick *joystick, const void *data, int size);
# 1017 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) void SDL_JoystickClose(SDL_Joystick *joystick);
# 1028 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h"
extern __attribute__ ((visibility("default"))) SDL_JoystickPowerLevel SDL_JoystickCurrentPowerLevel(SDL_Joystick *joystick);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 1035 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_joystick.h" 2
# 37 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h" 1
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h" 1
# 35 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 36 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h" 2
# 51 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
struct _SDL_Sensor;
typedef struct _SDL_Sensor SDL_Sensor;







typedef Sint32 SDL_SensorID;
# 69 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
typedef enum
{
    SDL_SENSOR_INVALID = -1,
    SDL_SENSOR_UNKNOWN,
    SDL_SENSOR_ACCEL,
    SDL_SENSOR_GYRO
} SDL_SensorType;
# 139 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
extern __attribute__ ((visibility("default"))) void SDL_LockSensors(void);
extern __attribute__ ((visibility("default"))) void SDL_UnlockSensors(void);
# 149 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
extern __attribute__ ((visibility("default"))) int SDL_NumSensors(void);
# 159 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
extern __attribute__ ((visibility("default"))) const char * SDL_SensorGetDeviceName(int device_index);
# 170 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
extern __attribute__ ((visibility("default"))) SDL_SensorType SDL_SensorGetDeviceType(int device_index);
# 181 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
extern __attribute__ ((visibility("default"))) int SDL_SensorGetDeviceNonPortableType(int device_index);
# 191 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
extern __attribute__ ((visibility("default"))) SDL_SensorID SDL_SensorGetDeviceInstanceID(int device_index);
# 201 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
extern __attribute__ ((visibility("default"))) SDL_Sensor * SDL_SensorOpen(int device_index);
# 211 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
extern __attribute__ ((visibility("default"))) SDL_Sensor * SDL_SensorFromInstanceID(SDL_SensorID instance_id);
# 221 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
extern __attribute__ ((visibility("default"))) const char * SDL_SensorGetName(SDL_Sensor *sensor);
# 232 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
extern __attribute__ ((visibility("default"))) SDL_SensorType SDL_SensorGetType(SDL_Sensor *sensor);
# 242 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
extern __attribute__ ((visibility("default"))) int SDL_SensorGetNonPortableType(SDL_Sensor *sensor);
# 252 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
extern __attribute__ ((visibility("default"))) SDL_SensorID SDL_SensorGetInstanceID(SDL_Sensor *sensor);
# 266 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
extern __attribute__ ((visibility("default"))) int SDL_SensorGetData(SDL_Sensor * sensor, float *data, int num_values);
# 275 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
extern __attribute__ ((visibility("default"))) void SDL_SensorClose(SDL_Sensor * sensor);
# 288 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
extern __attribute__ ((visibility("default"))) void SDL_SensorUpdate(void);
# 297 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 298 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_sensor.h" 2
# 35 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h" 2


# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 38 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h" 2
# 58 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
struct _SDL_GameController;
typedef struct _SDL_GameController SDL_GameController;

typedef enum
{
    SDL_CONTROLLER_TYPE_UNKNOWN = 0,
    SDL_CONTROLLER_TYPE_XBOX360,
    SDL_CONTROLLER_TYPE_XBOXONE,
    SDL_CONTROLLER_TYPE_PS3,
    SDL_CONTROLLER_TYPE_PS4,
    SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_PRO,
    SDL_CONTROLLER_TYPE_VIRTUAL,
    SDL_CONTROLLER_TYPE_PS5,
    SDL_CONTROLLER_TYPE_AMAZON_LUNA,
    SDL_CONTROLLER_TYPE_GOOGLE_STADIA,
    SDL_CONTROLLER_TYPE_NVIDIA_SHIELD,
    SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_LEFT,
    SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT,
    SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_PAIR
} SDL_GameControllerType;

typedef enum
{
    SDL_CONTROLLER_BINDTYPE_NONE = 0,
    SDL_CONTROLLER_BINDTYPE_BUTTON,
    SDL_CONTROLLER_BINDTYPE_AXIS,
    SDL_CONTROLLER_BINDTYPE_HAT
} SDL_GameControllerBindType;




typedef struct SDL_GameControllerButtonBind
{
    SDL_GameControllerBindType bindType;
    union
    {
        int button;
        int axis;
        struct {
            int hat;
            int hat_mask;
        } hat;
    } value;

} SDL_GameControllerButtonBind;
# 165 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) int SDL_GameControllerAddMappingsFromRW(SDL_RWops * rw, int freerw);
# 201 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) int SDL_GameControllerAddMapping(const char* mappingString);
# 210 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) int SDL_GameControllerNumMappings(void);
# 220 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) char * SDL_GameControllerMappingForIndex(int mapping_index);
# 236 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) char * SDL_GameControllerMappingForGUID(SDL_JoystickGUID guid);
# 255 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) char * SDL_GameControllerMapping(SDL_GameController *gamecontroller);
# 273 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_IsGameController(int joystick_index);
# 294 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GameControllerNameForIndex(int joystick_index);
# 313 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GameControllerPathForIndex(int joystick_index);
# 326 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_GameControllerType SDL_GameControllerTypeForIndex(int joystick_index);
# 340 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) char * SDL_GameControllerMappingForDeviceIndex(int joystick_index);
# 364 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_GameController * SDL_GameControllerOpen(int joystick_index);
# 375 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_GameController * SDL_GameControllerFromInstanceID(SDL_JoystickID joyid);
# 392 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_GameController * SDL_GameControllerFromPlayerIndex(int player_index);
# 410 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GameControllerName(SDL_GameController *gamecontroller);
# 427 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GameControllerPath(SDL_GameController *gamecontroller);
# 440 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_GameControllerType SDL_GameControllerGetType(SDL_GameController *gamecontroller);
# 452 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) int SDL_GameControllerGetPlayerIndex(SDL_GameController *gamecontroller);
# 463 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) void SDL_GameControllerSetPlayerIndex(SDL_GameController *gamecontroller, int player_index);
# 475 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) Uint16 SDL_GameControllerGetVendor(SDL_GameController *gamecontroller);
# 487 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) Uint16 SDL_GameControllerGetProduct(SDL_GameController *gamecontroller);
# 499 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) Uint16 SDL_GameControllerGetProductVersion(SDL_GameController *gamecontroller);
# 511 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) Uint16 SDL_GameControllerGetFirmwareVersion(SDL_GameController *gamecontroller);
# 524 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GameControllerGetSerial(SDL_GameController *gamecontroller);
# 539 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_GameControllerGetAttached(SDL_GameController *gamecontroller);
# 560 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_Joystick * SDL_GameControllerGetJoystick(SDL_GameController *gamecontroller);
# 580 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) int SDL_GameControllerEventState(int state);
# 591 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) void SDL_GameControllerUpdate(void);
# 603 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
typedef enum
{
    SDL_CONTROLLER_AXIS_INVALID = -1,
    SDL_CONTROLLER_AXIS_LEFTX,
    SDL_CONTROLLER_AXIS_LEFTY,
    SDL_CONTROLLER_AXIS_RIGHTX,
    SDL_CONTROLLER_AXIS_RIGHTY,
    SDL_CONTROLLER_AXIS_TRIGGERLEFT,
    SDL_CONTROLLER_AXIS_TRIGGERRIGHT,
    SDL_CONTROLLER_AXIS_MAX
} SDL_GameControllerAxis;
# 635 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_GameControllerAxis SDL_GameControllerGetAxisFromString(const char *str);
# 651 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) const char* SDL_GameControllerGetStringForAxis(SDL_GameControllerAxis axis);
# 666 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_GameControllerButtonBind
SDL_GameControllerGetBindForAxis(SDL_GameController *gamecontroller,
                                 SDL_GameControllerAxis axis);
# 682 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_bool
SDL_GameControllerHasAxis(SDL_GameController *gamecontroller, SDL_GameControllerAxis axis);
# 702 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) Sint16
SDL_GameControllerGetAxis(SDL_GameController *gamecontroller, SDL_GameControllerAxis axis);




typedef enum
{
    SDL_CONTROLLER_BUTTON_INVALID = -1,
    SDL_CONTROLLER_BUTTON_A,
    SDL_CONTROLLER_BUTTON_B,
    SDL_CONTROLLER_BUTTON_X,
    SDL_CONTROLLER_BUTTON_Y,
    SDL_CONTROLLER_BUTTON_BACK,
    SDL_CONTROLLER_BUTTON_GUIDE,
    SDL_CONTROLLER_BUTTON_START,
    SDL_CONTROLLER_BUTTON_LEFTSTICK,
    SDL_CONTROLLER_BUTTON_RIGHTSTICK,
    SDL_CONTROLLER_BUTTON_LEFTSHOULDER,
    SDL_CONTROLLER_BUTTON_RIGHTSHOULDER,
    SDL_CONTROLLER_BUTTON_DPAD_UP,
    SDL_CONTROLLER_BUTTON_DPAD_DOWN,
    SDL_CONTROLLER_BUTTON_DPAD_LEFT,
    SDL_CONTROLLER_BUTTON_DPAD_RIGHT,
    SDL_CONTROLLER_BUTTON_MISC1,
    SDL_CONTROLLER_BUTTON_PADDLE1,
    SDL_CONTROLLER_BUTTON_PADDLE2,
    SDL_CONTROLLER_BUTTON_PADDLE3,
    SDL_CONTROLLER_BUTTON_PADDLE4,
    SDL_CONTROLLER_BUTTON_TOUCHPAD,
    SDL_CONTROLLER_BUTTON_MAX
} SDL_GameControllerButton;
# 749 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_GameControllerButton SDL_GameControllerGetButtonFromString(const char *str);
# 765 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) const char* SDL_GameControllerGetStringForButton(SDL_GameControllerButton button);
# 780 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_GameControllerButtonBind
SDL_GameControllerGetBindForButton(SDL_GameController *gamecontroller,
                                   SDL_GameControllerButton button);
# 796 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_GameControllerHasButton(SDL_GameController *gamecontroller,
                                                             SDL_GameControllerButton button);
# 811 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) Uint8 SDL_GameControllerGetButton(SDL_GameController *gamecontroller,
                                                          SDL_GameControllerButton button);






extern __attribute__ ((visibility("default"))) int SDL_GameControllerGetNumTouchpads(SDL_GameController *gamecontroller);







extern __attribute__ ((visibility("default"))) int SDL_GameControllerGetNumTouchpadFingers(SDL_GameController *gamecontroller, int touchpad);






extern __attribute__ ((visibility("default"))) int SDL_GameControllerGetTouchpadFinger(SDL_GameController *gamecontroller, int touchpad, int finger, Uint8 *state, float *x, float *y, float *pressure);
# 845 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_GameControllerHasSensor(SDL_GameController *gamecontroller, SDL_SensorType type);
# 857 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) int SDL_GameControllerSetSensorEnabled(SDL_GameController *gamecontroller, SDL_SensorType type, SDL_bool enabled);
# 868 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_GameControllerIsSensorEnabled(SDL_GameController *gamecontroller, SDL_SensorType type);
# 880 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) float SDL_GameControllerGetSensorDataRate(SDL_GameController *gamecontroller, SDL_SensorType type);
# 896 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) int SDL_GameControllerGetSensorData(SDL_GameController *gamecontroller, SDL_SensorType type, float *data, int num_values);
# 916 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) int SDL_GameControllerRumble(SDL_GameController *gamecontroller, Uint16 low_frequency_rumble, Uint16 high_frequency_rumble, Uint32 duration_ms);
# 941 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) int SDL_GameControllerRumbleTriggers(SDL_GameController *gamecontroller, Uint16 left_rumble, Uint16 right_rumble, Uint32 duration_ms);
# 952 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_GameControllerHasLED(SDL_GameController *gamecontroller);
# 965 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_GameControllerHasRumble(SDL_GameController *gamecontroller);
# 978 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_GameControllerHasRumbleTriggers(SDL_GameController *gamecontroller);
# 991 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) int SDL_GameControllerSetLED(SDL_GameController *gamecontroller, Uint8 red, Uint8 green, Uint8 blue);
# 1004 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) int SDL_GameControllerSendEffect(SDL_GameController *gamecontroller, const void *data, int size);
# 1016 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) void SDL_GameControllerClose(SDL_GameController *gamecontroller);
# 1030 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) const char* SDL_GameControllerGetAppleSFSymbolsNameForButton(SDL_GameController *gamecontroller, SDL_GameControllerButton button);
# 1044 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h"
extern __attribute__ ((visibility("default"))) const char* SDL_GameControllerGetAppleSFSymbolsNameForAxis(SDL_GameController *gamecontroller, SDL_GameControllerAxis axis);






# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 1052 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gamecontroller.h" 2
# 38 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_quit.h" 1
# 39 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gesture.h" 1
# 35 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gesture.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_touch.h" 1
# 35 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_touch.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 36 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_touch.h" 2





typedef Sint64 SDL_TouchID;
typedef Sint64 SDL_FingerID;

typedef enum
{
    SDL_TOUCH_DEVICE_INVALID = -1,
    SDL_TOUCH_DEVICE_DIRECT,
    SDL_TOUCH_DEVICE_INDIRECT_ABSOLUTE,
    SDL_TOUCH_DEVICE_INDIRECT_RELATIVE
} SDL_TouchDeviceType;

typedef struct SDL_Finger
{
    SDL_FingerID id;
    float x;
    float y;
    float pressure;
} SDL_Finger;
# 83 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_touch.h"
extern __attribute__ ((visibility("default"))) int SDL_GetNumTouchDevices(void);
# 96 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_touch.h"
extern __attribute__ ((visibility("default"))) SDL_TouchID SDL_GetTouchDevice(int index);







extern __attribute__ ((visibility("default"))) const char* SDL_GetTouchName(int index);






extern __attribute__ ((visibility("default"))) SDL_TouchDeviceType SDL_GetTouchDeviceType(SDL_TouchID touchID);
# 124 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_touch.h"
extern __attribute__ ((visibility("default"))) int SDL_GetNumTouchFingers(SDL_TouchID touchID);
# 140 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_touch.h"
extern __attribute__ ((visibility("default"))) SDL_Finger * SDL_GetTouchFinger(SDL_TouchID touchID, int index);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 147 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_touch.h" 2
# 36 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gesture.h" 2


# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 39 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gesture.h" 2





typedef Sint64 SDL_GestureID;
# 61 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gesture.h"
extern __attribute__ ((visibility("default"))) int SDL_RecordGesture(SDL_TouchID touchId);
# 76 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gesture.h"
extern __attribute__ ((visibility("default"))) int SDL_SaveAllDollarTemplates(SDL_RWops *dst);
# 91 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gesture.h"
extern __attribute__ ((visibility("default"))) int SDL_SaveDollarTemplate(SDL_GestureID gestureId,SDL_RWops *dst);
# 107 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gesture.h"
extern __attribute__ ((visibility("default"))) int SDL_LoadDollarTemplates(SDL_TouchID touchId, SDL_RWops *src);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 114 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_gesture.h" 2
# 40 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h" 2


# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 43 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h" 2
# 55 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
typedef enum
{
    SDL_FIRSTEVENT = 0,


    SDL_QUIT = 0x100,


    SDL_APP_TERMINATING,



    SDL_APP_LOWMEMORY,



    SDL_APP_WILLENTERBACKGROUND,



    SDL_APP_DIDENTERBACKGROUND,



    SDL_APP_WILLENTERFOREGROUND,



    SDL_APP_DIDENTERFOREGROUND,




    SDL_LOCALECHANGED,


    SDL_DISPLAYEVENT = 0x150,


    SDL_WINDOWEVENT = 0x200,
    SDL_SYSWMEVENT,


    SDL_KEYDOWN = 0x300,
    SDL_KEYUP,
    SDL_TEXTEDITING,
    SDL_TEXTINPUT,
    SDL_KEYMAPCHANGED,


    SDL_TEXTEDITING_EXT,


    SDL_MOUSEMOTION = 0x400,
    SDL_MOUSEBUTTONDOWN,
    SDL_MOUSEBUTTONUP,
    SDL_MOUSEWHEEL,


    SDL_JOYAXISMOTION = 0x600,
    SDL_JOYBALLMOTION,
    SDL_JOYHATMOTION,
    SDL_JOYBUTTONDOWN,
    SDL_JOYBUTTONUP,
    SDL_JOYDEVICEADDED,
    SDL_JOYDEVICEREMOVED,
    SDL_JOYBATTERYUPDATED,


    SDL_CONTROLLERAXISMOTION = 0x650,
    SDL_CONTROLLERBUTTONDOWN,
    SDL_CONTROLLERBUTTONUP,
    SDL_CONTROLLERDEVICEADDED,
    SDL_CONTROLLERDEVICEREMOVED,
    SDL_CONTROLLERDEVICEREMAPPED,
    SDL_CONTROLLERTOUCHPADDOWN,
    SDL_CONTROLLERTOUCHPADMOTION,
    SDL_CONTROLLERTOUCHPADUP,
    SDL_CONTROLLERSENSORUPDATE,


    SDL_FINGERDOWN = 0x700,
    SDL_FINGERUP,
    SDL_FINGERMOTION,


    SDL_DOLLARGESTURE = 0x800,
    SDL_DOLLARRECORD,
    SDL_MULTIGESTURE,


    SDL_CLIPBOARDUPDATE = 0x900,


    SDL_DROPFILE = 0x1000,
    SDL_DROPTEXT,
    SDL_DROPBEGIN,
    SDL_DROPCOMPLETE,


    SDL_AUDIODEVICEADDED = 0x1100,
    SDL_AUDIODEVICEREMOVED,


    SDL_SENSORUPDATE = 0x1200,


    SDL_RENDER_TARGETS_RESET = 0x2000,
    SDL_RENDER_DEVICE_RESET,


    SDL_POLLSENTINEL = 0x7F00,




    SDL_USEREVENT = 0x8000,




    SDL_LASTEVENT = 0xFFFF
} SDL_EventType;




typedef struct SDL_CommonEvent
{
    Uint32 type;
    Uint32 timestamp;
} SDL_CommonEvent;




typedef struct SDL_DisplayEvent
{
    Uint32 type;
    Uint32 timestamp;
    Uint32 display;
    Uint8 event;
    Uint8 padding1;
    Uint8 padding2;
    Uint8 padding3;
    Sint32 data1;
} SDL_DisplayEvent;




typedef struct SDL_WindowEvent
{
    Uint32 type;
    Uint32 timestamp;
    Uint32 windowID;
    Uint8 event;
    Uint8 padding1;
    Uint8 padding2;
    Uint8 padding3;
    Sint32 data1;
    Sint32 data2;
} SDL_WindowEvent;




typedef struct SDL_KeyboardEvent
{
    Uint32 type;
    Uint32 timestamp;
    Uint32 windowID;
    Uint8 state;
    Uint8 repeat;
    Uint8 padding2;
    Uint8 padding3;
    SDL_Keysym keysym;
} SDL_KeyboardEvent;





typedef struct SDL_TextEditingEvent
{
    Uint32 type;
    Uint32 timestamp;
    Uint32 windowID;
    char text[(32)];
    Sint32 start;
    Sint32 length;
} SDL_TextEditingEvent;





typedef struct SDL_TextEditingExtEvent
{
    Uint32 type;
    Uint32 timestamp;
    Uint32 windowID;
    char* text;
    Sint32 start;
    Sint32 length;
} SDL_TextEditingExtEvent;





typedef struct SDL_TextInputEvent
{
    Uint32 type;
    Uint32 timestamp;
    Uint32 windowID;
    char text[(32)];
} SDL_TextInputEvent;




typedef struct SDL_MouseMotionEvent
{
    Uint32 type;
    Uint32 timestamp;
    Uint32 windowID;
    Uint32 which;
    Uint32 state;
    Sint32 x;
    Sint32 y;
    Sint32 xrel;
    Sint32 yrel;
} SDL_MouseMotionEvent;




typedef struct SDL_MouseButtonEvent
{
    Uint32 type;
    Uint32 timestamp;
    Uint32 windowID;
    Uint32 which;
    Uint8 button;
    Uint8 state;
    Uint8 clicks;
    Uint8 padding1;
    Sint32 x;
    Sint32 y;
} SDL_MouseButtonEvent;




typedef struct SDL_MouseWheelEvent
{
    Uint32 type;
    Uint32 timestamp;
    Uint32 windowID;
    Uint32 which;
    Sint32 x;
    Sint32 y;
    Uint32 direction;
    float preciseX;
    float preciseY;
} SDL_MouseWheelEvent;




typedef struct SDL_JoyAxisEvent
{
    Uint32 type;
    Uint32 timestamp;
    SDL_JoystickID which;
    Uint8 axis;
    Uint8 padding1;
    Uint8 padding2;
    Uint8 padding3;
    Sint16 value;
    Uint16 padding4;
} SDL_JoyAxisEvent;




typedef struct SDL_JoyBallEvent
{
    Uint32 type;
    Uint32 timestamp;
    SDL_JoystickID which;
    Uint8 ball;
    Uint8 padding1;
    Uint8 padding2;
    Uint8 padding3;
    Sint16 xrel;
    Sint16 yrel;
} SDL_JoyBallEvent;




typedef struct SDL_JoyHatEvent
{
    Uint32 type;
    Uint32 timestamp;
    SDL_JoystickID which;
    Uint8 hat;
    Uint8 value;






    Uint8 padding1;
    Uint8 padding2;
} SDL_JoyHatEvent;




typedef struct SDL_JoyButtonEvent
{
    Uint32 type;
    Uint32 timestamp;
    SDL_JoystickID which;
    Uint8 button;
    Uint8 state;
    Uint8 padding1;
    Uint8 padding2;
} SDL_JoyButtonEvent;




typedef struct SDL_JoyDeviceEvent
{
    Uint32 type;
    Uint32 timestamp;
    Sint32 which;
} SDL_JoyDeviceEvent;




typedef struct SDL_JoyBatteryEvent
{
    Uint32 type;
    Uint32 timestamp;
    SDL_JoystickID which;
    SDL_JoystickPowerLevel level;
} SDL_JoyBatteryEvent;




typedef struct SDL_ControllerAxisEvent
{
    Uint32 type;
    Uint32 timestamp;
    SDL_JoystickID which;
    Uint8 axis;
    Uint8 padding1;
    Uint8 padding2;
    Uint8 padding3;
    Sint16 value;
    Uint16 padding4;
} SDL_ControllerAxisEvent;





typedef struct SDL_ControllerButtonEvent
{
    Uint32 type;
    Uint32 timestamp;
    SDL_JoystickID which;
    Uint8 button;
    Uint8 state;
    Uint8 padding1;
    Uint8 padding2;
} SDL_ControllerButtonEvent;





typedef struct SDL_ControllerDeviceEvent
{
    Uint32 type;
    Uint32 timestamp;
    Sint32 which;
} SDL_ControllerDeviceEvent;




typedef struct SDL_ControllerTouchpadEvent
{
    Uint32 type;
    Uint32 timestamp;
    SDL_JoystickID which;
    Sint32 touchpad;
    Sint32 finger;
    float x;
    float y;
    float pressure;
} SDL_ControllerTouchpadEvent;




typedef struct SDL_ControllerSensorEvent
{
    Uint32 type;
    Uint32 timestamp;
    SDL_JoystickID which;
    Sint32 sensor;
    float data[3];
} SDL_ControllerSensorEvent;




typedef struct SDL_AudioDeviceEvent
{
    Uint32 type;
    Uint32 timestamp;
    Uint32 which;
    Uint8 iscapture;
    Uint8 padding1;
    Uint8 padding2;
    Uint8 padding3;
} SDL_AudioDeviceEvent;





typedef struct SDL_TouchFingerEvent
{
    Uint32 type;
    Uint32 timestamp;
    SDL_TouchID touchId;
    SDL_FingerID fingerId;
    float x;
    float y;
    float dx;
    float dy;
    float pressure;
    Uint32 windowID;
} SDL_TouchFingerEvent;





typedef struct SDL_MultiGestureEvent
{
    Uint32 type;
    Uint32 timestamp;
    SDL_TouchID touchId;
    float dTheta;
    float dDist;
    float x;
    float y;
    Uint16 numFingers;
    Uint16 padding;
} SDL_MultiGestureEvent;





typedef struct SDL_DollarGestureEvent
{
    Uint32 type;
    Uint32 timestamp;
    SDL_TouchID touchId;
    SDL_GestureID gestureId;
    Uint32 numFingers;
    float error;
    float x;
    float y;
} SDL_DollarGestureEvent;







typedef struct SDL_DropEvent
{
    Uint32 type;
    Uint32 timestamp;
    char *file;
    Uint32 windowID;
} SDL_DropEvent;





typedef struct SDL_SensorEvent
{
    Uint32 type;
    Uint32 timestamp;
    Sint32 which;
    float data[6];
} SDL_SensorEvent;




typedef struct SDL_QuitEvent
{
    Uint32 type;
    Uint32 timestamp;
} SDL_QuitEvent;




typedef struct SDL_OSEvent
{
    Uint32 type;
    Uint32 timestamp;
} SDL_OSEvent;




typedef struct SDL_UserEvent
{
    Uint32 type;
    Uint32 timestamp;
    Uint32 windowID;
    Sint32 code;
    void *data1;
    void *data2;
} SDL_UserEvent;


struct SDL_SysWMmsg;
typedef struct SDL_SysWMmsg SDL_SysWMmsg;







typedef struct SDL_SysWMEvent
{
    Uint32 type;
    Uint32 timestamp;
    SDL_SysWMmsg *msg;
} SDL_SysWMEvent;




typedef union SDL_Event
{
    Uint32 type;
    SDL_CommonEvent common;
    SDL_DisplayEvent display;
    SDL_WindowEvent window;
    SDL_KeyboardEvent key;
    SDL_TextEditingEvent edit;
    SDL_TextEditingExtEvent editExt;
    SDL_TextInputEvent text;
    SDL_MouseMotionEvent motion;
    SDL_MouseButtonEvent button;
    SDL_MouseWheelEvent wheel;
    SDL_JoyAxisEvent jaxis;
    SDL_JoyBallEvent jball;
    SDL_JoyHatEvent jhat;
    SDL_JoyButtonEvent jbutton;
    SDL_JoyDeviceEvent jdevice;
    SDL_JoyBatteryEvent jbattery;
    SDL_ControllerAxisEvent caxis;
    SDL_ControllerButtonEvent cbutton;
    SDL_ControllerDeviceEvent cdevice;
    SDL_ControllerTouchpadEvent ctouchpad;
    SDL_ControllerSensorEvent csensor;
    SDL_AudioDeviceEvent adevice;
    SDL_SensorEvent sensor;
    SDL_QuitEvent quit;
    SDL_UserEvent user;
    SDL_SysWMEvent syswm;
    SDL_TouchFingerEvent tfinger;
    SDL_MultiGestureEvent mgesture;
    SDL_DollarGestureEvent dgesture;
    SDL_DropEvent drop;
# 668 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
    Uint8 padding[sizeof(void *) <= 8 ? 56 : sizeof(void *) == 16 ? 64 : 3 * sizeof(void *)];
} SDL_Event;


typedef int SDL_compile_time_assert_SDL_Event[(sizeof(SDL_Event) == sizeof(((SDL_Event *)((void*)0))->padding)) * 2 - 1];
# 699 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
extern __attribute__ ((visibility("default"))) void SDL_PumpEvents(void);


typedef enum
{
    SDL_ADDEVENT,
    SDL_PEEKEVENT,
    SDL_GETEVENT
} SDL_eventaction;
# 747 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
extern __attribute__ ((visibility("default"))) int SDL_PeepEvents(SDL_Event * events, int numevents,
                                           SDL_eventaction action,
                                           Uint32 minType, Uint32 maxType);
# 766 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasEvent(Uint32 type);
# 785 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_HasEvents(Uint32 minType, Uint32 maxType);
# 807 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
extern __attribute__ ((visibility("default"))) void SDL_FlushEvent(Uint32 type);
# 832 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
extern __attribute__ ((visibility("default"))) void SDL_FlushEvents(Uint32 minType, Uint32 maxType);
# 879 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
extern __attribute__ ((visibility("default"))) int SDL_PollEvent(SDL_Event * event);
# 901 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
extern __attribute__ ((visibility("default"))) int SDL_WaitEvent(SDL_Event * event);
# 927 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
extern __attribute__ ((visibility("default"))) int SDL_WaitEventTimeout(SDL_Event * event,
                                                 int timeout);
# 962 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
extern __attribute__ ((visibility("default"))) int SDL_PushEvent(SDL_Event * event);
# 976 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
typedef int ( * SDL_EventFilter) (void *userdata, SDL_Event * event);
# 1020 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
extern __attribute__ ((visibility("default"))) void SDL_SetEventFilter(SDL_EventFilter filter,
                                                void *userdata);
# 1038 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_GetEventFilter(SDL_EventFilter * filter,
                                                    void **userdata);
# 1067 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
extern __attribute__ ((visibility("default"))) void SDL_AddEventWatch(SDL_EventFilter filter,
                                               void *userdata);
# 1083 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
extern __attribute__ ((visibility("default"))) void SDL_DelEventWatch(SDL_EventFilter filter,
                                               void *userdata);
# 1102 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
extern __attribute__ ((visibility("default"))) void SDL_FilterEvents(SDL_EventFilter filter,
                                              void *userdata);
# 1130 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
extern __attribute__ ((visibility("default"))) Uint8 SDL_EventState(Uint32 type, int state);
# 1152 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h"
extern __attribute__ ((visibility("default"))) Uint32 SDL_RegisterEvents(int numevents);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 1159 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_events.h" 2
# 42 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_filesystem.h" 1
# 33 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_filesystem.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_filesystem.h" 2
# 78 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_filesystem.h"
extern __attribute__ ((visibility("default"))) char * SDL_GetBasePath(void);
# 135 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_filesystem.h"
extern __attribute__ ((visibility("default"))) char * SDL_GetPrefPath(const char *org, const char *app);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 142 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_filesystem.h" 2
# 43 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2


# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h" 1
# 114 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 115 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h" 2
# 140 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
struct _SDL_Haptic;
typedef struct _SDL_Haptic SDL_Haptic;
# 459 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
typedef struct SDL_HapticDirection
{
    Uint8 type;
    Sint32 dir[3];
} SDL_HapticDirection;
# 477 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
typedef struct SDL_HapticConstant
{

    Uint16 type;
    SDL_HapticDirection direction;


    Uint32 length;
    Uint16 delay;


    Uint16 button;
    Uint16 interval;


    Sint16 level;


    Uint16 attack_length;
    Uint16 attack_level;
    Uint16 fade_length;
    Uint16 fade_level;
} SDL_HapticConstant;
# 558 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
typedef struct SDL_HapticPeriodic
{

    Uint16 type;


    SDL_HapticDirection direction;


    Uint32 length;
    Uint16 delay;


    Uint16 button;
    Uint16 interval;


    Uint16 period;
    Sint16 magnitude;
    Sint16 offset;
    Uint16 phase;


    Uint16 attack_length;
    Uint16 attack_level;
    Uint16 fade_length;
    Uint16 fade_level;
} SDL_HapticPeriodic;
# 611 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
typedef struct SDL_HapticCondition
{

    Uint16 type;

    SDL_HapticDirection direction;


    Uint32 length;
    Uint16 delay;


    Uint16 button;
    Uint16 interval;


    Uint16 right_sat[3];
    Uint16 left_sat[3];
    Sint16 right_coeff[3];
    Sint16 left_coeff[3];
    Uint16 deadband[3];
    Sint16 center[3];
} SDL_HapticCondition;
# 648 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
typedef struct SDL_HapticRamp
{

    Uint16 type;
    SDL_HapticDirection direction;


    Uint32 length;
    Uint16 delay;


    Uint16 button;
    Uint16 interval;


    Sint16 start;
    Sint16 end;


    Uint16 attack_length;
    Uint16 attack_level;
    Uint16 fade_length;
    Uint16 fade_level;
} SDL_HapticRamp;
# 685 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
typedef struct SDL_HapticLeftRight
{

    Uint16 type;


    Uint32 length;


    Uint16 large_magnitude;
    Uint16 small_magnitude;
} SDL_HapticLeftRight;
# 713 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
typedef struct SDL_HapticCustom
{

    Uint16 type;
    SDL_HapticDirection direction;


    Uint32 length;
    Uint16 delay;


    Uint16 button;
    Uint16 interval;


    Uint8 channels;
    Uint16 period;
    Uint16 samples;
    Uint16 *data;


    Uint16 attack_length;
    Uint16 attack_level;
    Uint16 fade_length;
    Uint16 fade_level;
} SDL_HapticCustom;
# 809 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
typedef union SDL_HapticEffect
{

    Uint16 type;
    SDL_HapticConstant constant;
    SDL_HapticPeriodic periodic;
    SDL_HapticCondition condition;
    SDL_HapticRamp ramp;
    SDL_HapticLeftRight leftright;
    SDL_HapticCustom custom;
} SDL_HapticEffect;
# 834 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_NumHaptics(void);
# 850 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) const char * SDL_HapticName(int device_index);
# 877 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) SDL_Haptic * SDL_HapticOpen(int device_index);
# 891 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticOpened(int device_index);
# 905 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticIndex(SDL_Haptic * haptic);
# 916 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_MouseIsHaptic(void);
# 929 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) SDL_Haptic * SDL_HapticOpenFromMouse(void);
# 943 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_JoystickIsHaptic(SDL_Joystick * joystick);
# 966 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) SDL_Haptic * SDL_HapticOpenFromJoystick(SDL_Joystick *
                                                               joystick);
# 978 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) void SDL_HapticClose(SDL_Haptic * haptic);
# 996 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticNumEffects(SDL_Haptic * haptic);
# 1013 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticNumEffectsPlaying(SDL_Haptic * haptic);
# 1027 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) unsigned int SDL_HapticQuery(SDL_Haptic * haptic);
# 1042 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticNumAxes(SDL_Haptic * haptic);
# 1058 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticEffectSupported(SDL_Haptic * haptic,
                                                      SDL_HapticEffect *
                                                      effect);
# 1077 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticNewEffect(SDL_Haptic * haptic,
                                                SDL_HapticEffect * effect);
# 1101 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticUpdateEffect(SDL_Haptic * haptic,
                                                   int effect,
                                                   SDL_HapticEffect * data);
# 1127 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticRunEffect(SDL_Haptic * haptic,
                                                int effect,
                                                Uint32 iterations);
# 1146 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticStopEffect(SDL_Haptic * haptic,
                                                 int effect);
# 1162 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) void SDL_HapticDestroyEffect(SDL_Haptic * haptic,
                                                     int effect);
# 1180 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticGetEffectStatus(SDL_Haptic * haptic,
                                                      int effect);
# 1202 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticSetGain(SDL_Haptic * haptic, int gain);
# 1221 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticSetAutocenter(SDL_Haptic * haptic,
                                                    int autocenter);
# 1241 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticPause(SDL_Haptic * haptic);
# 1256 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticUnpause(SDL_Haptic * haptic);
# 1267 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticStopAll(SDL_Haptic * haptic);
# 1283 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticRumbleSupported(SDL_Haptic * haptic);
# 1299 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticRumbleInit(SDL_Haptic * haptic);
# 1316 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticRumblePlay(SDL_Haptic * haptic, float strength, Uint32 length );
# 1331 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h"
extern __attribute__ ((visibility("default"))) int SDL_HapticRumbleStop(SDL_Haptic * haptic);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 1338 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_haptic.h" 2
# 46 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h" 1
# 67 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 68 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h" 2








struct SDL_hid_device_;
typedef struct SDL_hid_device_ SDL_hid_device;





typedef struct SDL_hid_device_info
{

    char *path;

    unsigned short vendor_id;

    unsigned short product_id;

    wchar_t *serial_number;


    unsigned short release_number;

    wchar_t *manufacturer_string;

    wchar_t *product_string;


    unsigned short usage_page;


    unsigned short usage;






    int interface_number;



    int interface_class;
    int interface_subclass;
    int interface_protocol;


    struct SDL_hid_device_info *next;
} SDL_hid_device_info;
# 142 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) int SDL_hid_init(void);
# 156 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) int SDL_hid_exit(void);
# 177 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) Uint32 SDL_hid_device_change_count(void);
# 199 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) SDL_hid_device_info * SDL_hid_enumerate(unsigned short vendor_id, unsigned short product_id);
# 211 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) void SDL_hid_free_enumeration(SDL_hid_device_info *devs);
# 229 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) SDL_hid_device * SDL_hid_open(unsigned short vendor_id, unsigned short product_id, const wchar_t *serial_number);
# 243 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) SDL_hid_device * SDL_hid_open_path(const char *path, int bExclusive );
# 269 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) int SDL_hid_write(SDL_hid_device *dev, const unsigned char *data, size_t length);
# 290 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) int SDL_hid_read_timeout(SDL_hid_device *dev, unsigned char *data, size_t length, int milliseconds);
# 310 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) int SDL_hid_read(SDL_hid_device *dev, unsigned char *data, size_t length);
# 328 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) int SDL_hid_set_nonblocking(SDL_hid_device *dev, int nonblock);
# 352 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) int SDL_hid_send_feature_report(SDL_hid_device *dev, const unsigned char *data, size_t length);
# 374 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) int SDL_hid_get_feature_report(SDL_hid_device *dev, unsigned char *data, size_t length);
# 383 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) void SDL_hid_close(SDL_hid_device *dev);
# 395 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) int SDL_hid_get_manufacturer_string(SDL_hid_device *dev, wchar_t *string, size_t maxlen);
# 407 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) int SDL_hid_get_product_string(SDL_hid_device *dev, wchar_t *string, size_t maxlen);
# 419 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) int SDL_hid_get_serial_number_string(SDL_hid_device *dev, wchar_t *string, size_t maxlen);
# 432 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) int SDL_hid_get_indexed_string(SDL_hid_device *dev, int string_index, wchar_t *string, size_t maxlen);
# 441 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h"
extern __attribute__ ((visibility("default"))) void SDL_hid_ble_scan(SDL_bool active);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 448 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hidapi.h" 2
# 47 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hints.h" 1
# 44 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hints.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 45 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hints.h" 2
# 2252 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hints.h"
typedef enum
{
    SDL_HINT_DEFAULT,
    SDL_HINT_NORMAL,
    SDL_HINT_OVERRIDE
} SDL_HintPriority;
# 2277 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hints.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_SetHintWithPriority(const char *name,
                                                         const char *value,
                                                         SDL_HintPriority priority);
# 2297 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hints.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_SetHint(const char *name,
                                             const char *value);
# 2315 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hints.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_ResetHint(const char *name);
# 2328 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hints.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GetHint(const char *name);
# 2343 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hints.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_GetHintBoolean(const char *name, SDL_bool default_value);
# 2353 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hints.h"
typedef void ( *SDL_HintCallback)(void *userdata, const char *name, const char *oldValue, const char *newValue);
# 2367 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hints.h"
extern __attribute__ ((visibility("default"))) void SDL_AddHintCallback(const char *name,
                                                 SDL_HintCallback callback,
                                                 void *userdata);
# 2383 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hints.h"
extern __attribute__ ((visibility("default"))) void SDL_DelHintCallback(const char *name,
                                                 SDL_HintCallback callback,
                                                 void *userdata);
# 2394 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hints.h"
extern __attribute__ ((visibility("default"))) void SDL_ClearHints(void);






# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 2402 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_hints.h" 2
# 48 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2

# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_loadso.h" 1
# 47 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_loadso.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 48 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_loadso.h" 2
# 65 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_loadso.h"
extern __attribute__ ((visibility("default"))) void * SDL_LoadObject(const char *sofile);
# 92 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_loadso.h"
extern __attribute__ ((visibility("default"))) void * SDL_LoadFunction(void *handle,
                                               const char *name);
# 105 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_loadso.h"
extern __attribute__ ((visibility("default"))) void SDL_UnloadObject(void *handle);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 112 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_loadso.h" 2
# 50 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h" 1
# 42 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 43 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h" 2
# 64 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
typedef enum
{
    SDL_LOG_CATEGORY_APPLICATION,
    SDL_LOG_CATEGORY_ERROR,
    SDL_LOG_CATEGORY_ASSERT,
    SDL_LOG_CATEGORY_SYSTEM,
    SDL_LOG_CATEGORY_AUDIO,
    SDL_LOG_CATEGORY_VIDEO,
    SDL_LOG_CATEGORY_RENDER,
    SDL_LOG_CATEGORY_INPUT,
    SDL_LOG_CATEGORY_TEST,


    SDL_LOG_CATEGORY_RESERVED1,
    SDL_LOG_CATEGORY_RESERVED2,
    SDL_LOG_CATEGORY_RESERVED3,
    SDL_LOG_CATEGORY_RESERVED4,
    SDL_LOG_CATEGORY_RESERVED5,
    SDL_LOG_CATEGORY_RESERVED6,
    SDL_LOG_CATEGORY_RESERVED7,
    SDL_LOG_CATEGORY_RESERVED8,
    SDL_LOG_CATEGORY_RESERVED9,
    SDL_LOG_CATEGORY_RESERVED10,
# 96 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
    SDL_LOG_CATEGORY_CUSTOM
} SDL_LogCategory;




typedef enum
{
    SDL_LOG_PRIORITY_VERBOSE = 1,
    SDL_LOG_PRIORITY_DEBUG,
    SDL_LOG_PRIORITY_INFO,
    SDL_LOG_PRIORITY_WARN,
    SDL_LOG_PRIORITY_ERROR,
    SDL_LOG_PRIORITY_CRITICAL,
    SDL_NUM_LOG_PRIORITIES
} SDL_LogPriority;
# 123 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
extern __attribute__ ((visibility("default"))) void SDL_LogSetAllPriority(SDL_LogPriority priority);
# 136 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
extern __attribute__ ((visibility("default"))) void SDL_LogSetPriority(int category,
                                                SDL_LogPriority priority);
# 149 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
extern __attribute__ ((visibility("default"))) SDL_LogPriority SDL_LogGetPriority(int category);
# 161 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
extern __attribute__ ((visibility("default"))) void SDL_LogResetPriorities(void);
# 182 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
extern __attribute__ ((visibility("default"))) void SDL_Log( const char *fmt, ...) __attribute__ (( format( __printf__, 1, 1 +1 )));
# 203 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
extern __attribute__ ((visibility("default"))) void SDL_LogVerbose(int category, const char *fmt, ...) __attribute__ (( format( __printf__, 2, 2 +1 )));
# 224 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
extern __attribute__ ((visibility("default"))) void SDL_LogDebug(int category, const char *fmt, ...) __attribute__ (( format( __printf__, 2, 2 +1 )));
# 245 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
extern __attribute__ ((visibility("default"))) void SDL_LogInfo(int category, const char *fmt, ...) __attribute__ (( format( __printf__, 2, 2 +1 )));
# 266 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
extern __attribute__ ((visibility("default"))) void SDL_LogWarn(int category, const char *fmt, ...) __attribute__ (( format( __printf__, 2, 2 +1 )));
# 287 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
extern __attribute__ ((visibility("default"))) void SDL_LogError(int category, const char *fmt, ...) __attribute__ (( format( __printf__, 2, 2 +1 )));
# 308 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
extern __attribute__ ((visibility("default"))) void SDL_LogCritical(int category, const char *fmt, ...) __attribute__ (( format( __printf__, 2, 2 +1 )));
# 330 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
extern __attribute__ ((visibility("default"))) void SDL_LogMessage(int category,
                                            SDL_LogPriority priority,
                                                                     const char *fmt, ...) __attribute__ (( format( __printf__, 3, 3 +1 )));
# 353 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
extern __attribute__ ((visibility("default"))) void SDL_LogMessageV(int category,
                                             SDL_LogPriority priority,
                                             const char *fmt, va_list ap);
# 367 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
typedef void ( *SDL_LogOutputFunction)(void *userdata, int category, SDL_LogPriority priority, const char *message);
# 381 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
extern __attribute__ ((visibility("default"))) void SDL_LogGetOutputFunction(SDL_LogOutputFunction *callback, void **userdata);
# 393 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h"
extern __attribute__ ((visibility("default"))) void SDL_LogSetOutputFunction(SDL_LogOutputFunction callback, void *userdata);






# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 401 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_log.h" 2
# 51 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_messagebox.h" 1
# 28 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_messagebox.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 29 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_messagebox.h" 2








typedef enum
{
    SDL_MESSAGEBOX_ERROR = 0x00000010,
    SDL_MESSAGEBOX_WARNING = 0x00000020,
    SDL_MESSAGEBOX_INFORMATION = 0x00000040,
    SDL_MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT = 0x00000080,
    SDL_MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT = 0x00000100
} SDL_MessageBoxFlags;




typedef enum
{
    SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT = 0x00000001,
    SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT = 0x00000002
} SDL_MessageBoxButtonFlags;




typedef struct
{
    Uint32 flags;
    int buttonid;
    const char * text;
} SDL_MessageBoxButtonData;




typedef struct
{
    Uint8 r, g, b;
} SDL_MessageBoxColor;

typedef enum
{
    SDL_MESSAGEBOX_COLOR_BACKGROUND,
    SDL_MESSAGEBOX_COLOR_TEXT,
    SDL_MESSAGEBOX_COLOR_BUTTON_BORDER,
    SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND,
    SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED,
    SDL_MESSAGEBOX_COLOR_MAX
} SDL_MessageBoxColorType;




typedef struct
{
    SDL_MessageBoxColor colors[SDL_MESSAGEBOX_COLOR_MAX];
} SDL_MessageBoxColorScheme;




typedef struct
{
    Uint32 flags;
    SDL_Window *window;
    const char *title;
    const char *message;

    int numbuttons;
    const SDL_MessageBoxButtonData *buttons;

    const SDL_MessageBoxColorScheme *colorScheme;
} SDL_MessageBoxData;
# 140 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_messagebox.h"
extern __attribute__ ((visibility("default"))) int SDL_ShowMessageBox(const SDL_MessageBoxData *messageboxdata, int *buttonid);
# 182 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_messagebox.h"
extern __attribute__ ((visibility("default"))) int SDL_ShowSimpleMessageBox(Uint32 flags, const char *title, const char *message, SDL_Window *window);






# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 190 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_messagebox.h" 2
# 52 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_metal.h" 1
# 33 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_metal.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_metal.h" 2
# 44 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_metal.h"
typedef void *SDL_MetalView;
# 66 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_metal.h"
extern __attribute__ ((visibility("default"))) SDL_MetalView SDL_Metal_CreateView(SDL_Window * window);
# 78 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_metal.h"
extern __attribute__ ((visibility("default"))) void SDL_Metal_DestroyView(SDL_MetalView view);
# 87 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_metal.h"
extern __attribute__ ((visibility("default"))) void * SDL_Metal_GetLayer(SDL_MetalView view);
# 102 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_metal.h"
extern __attribute__ ((visibility("default"))) void SDL_Metal_GetDrawableSize(SDL_Window* window, int *w,
                                                       int *h);







# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 112 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_metal.h" 2
# 53 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2

# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_power.h" 1
# 33 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_power.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_power.h" 2








typedef enum
{
    SDL_POWERSTATE_UNKNOWN,
    SDL_POWERSTATE_ON_BATTERY,
    SDL_POWERSTATE_NO_BATTERY,
    SDL_POWERSTATE_CHARGING,
    SDL_POWERSTATE_CHARGED
} SDL_PowerState;
# 78 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_power.h"
extern __attribute__ ((visibility("default"))) SDL_PowerState SDL_GetPowerInfo(int *secs, int *pct);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 85 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_power.h" 2
# 55 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h" 1
# 55 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 56 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h" 2








typedef enum
{
    SDL_RENDERER_SOFTWARE = 0x00000001,
    SDL_RENDERER_ACCELERATED = 0x00000002,

    SDL_RENDERER_PRESENTVSYNC = 0x00000004,

    SDL_RENDERER_TARGETTEXTURE = 0x00000008

} SDL_RendererFlags;




typedef struct SDL_RendererInfo
{
    const char *name;
    Uint32 flags;
    Uint32 num_texture_formats;
    Uint32 texture_formats[16];
    int max_texture_width;
    int max_texture_height;
} SDL_RendererInfo;




typedef struct SDL_Vertex
{
    SDL_FPoint position;
    SDL_Color color;
    SDL_FPoint tex_coord;
} SDL_Vertex;




typedef enum
{
    SDL_ScaleModeNearest,
    SDL_ScaleModeLinear,
    SDL_ScaleModeBest
} SDL_ScaleMode;




typedef enum
{
    SDL_TEXTUREACCESS_STATIC,
    SDL_TEXTUREACCESS_STREAMING,
    SDL_TEXTUREACCESS_TARGET
} SDL_TextureAccess;




typedef enum
{
    SDL_TEXTUREMODULATE_NONE = 0x00000000,
    SDL_TEXTUREMODULATE_COLOR = 0x00000001,
    SDL_TEXTUREMODULATE_ALPHA = 0x00000002
} SDL_TextureModulate;




typedef enum
{
    SDL_FLIP_NONE = 0x00000000,
    SDL_FLIP_HORIZONTAL = 0x00000001,
    SDL_FLIP_VERTICAL = 0x00000002
} SDL_RendererFlip;




struct SDL_Renderer;
typedef struct SDL_Renderer SDL_Renderer;




struct SDL_Texture;
typedef struct SDL_Texture SDL_Texture;
# 169 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_GetNumRenderDrivers(void);
# 185 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_GetRenderDriverInfo(int index,
                                                    SDL_RendererInfo * info);
# 205 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_CreateWindowAndRenderer(
                                int width, int height, Uint32 window_flags,
                                SDL_Window **window, SDL_Renderer **renderer);
# 227 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) SDL_Renderer * SDL_CreateRenderer(SDL_Window * window,
                                               int index, Uint32 flags);
# 249 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) SDL_Renderer * SDL_CreateSoftwareRenderer(SDL_Surface * surface);
# 262 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) SDL_Renderer * SDL_GetRenderer(SDL_Window * window);
# 273 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) SDL_Window * SDL_RenderGetWindow(SDL_Renderer *renderer);
# 288 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_GetRendererInfo(SDL_Renderer * renderer,
                                                SDL_RendererInfo * info);
# 308 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_GetRendererOutputSize(SDL_Renderer * renderer,
                                                      int *w, int *h);
# 333 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) SDL_Texture * SDL_CreateTexture(SDL_Renderer * renderer,
                                                        Uint32 format,
                                                        int access, int w,
                                                        int h);
# 362 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) SDL_Texture * SDL_CreateTextureFromSurface(SDL_Renderer * renderer, SDL_Surface * surface);
# 386 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_QueryTexture(SDL_Texture * texture,
                                             Uint32 * format, int *access,
                                             int *w, int *h);
# 414 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_SetTextureColorMod(SDL_Texture * texture,
                                                   Uint8 r, Uint8 g, Uint8 b);
# 433 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_GetTextureColorMod(SDL_Texture * texture,
                                                   Uint8 * r, Uint8 * g,
                                                   Uint8 * b);
# 458 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_SetTextureAlphaMod(SDL_Texture * texture,
                                                   Uint8 alpha);
# 474 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_GetTextureAlphaMod(SDL_Texture * texture,
                                                   Uint8 * alpha);
# 493 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_SetTextureBlendMode(SDL_Texture * texture,
                                                    SDL_BlendMode blendMode);
# 508 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_GetTextureBlendMode(SDL_Texture * texture,
                                                    SDL_BlendMode *blendMode);
# 524 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_SetTextureScaleMode(SDL_Texture * texture,
                                                    SDL_ScaleMode scaleMode);
# 538 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_GetTextureScaleMode(SDL_Texture * texture,
                                                    SDL_ScaleMode *scaleMode);
# 552 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_SetTextureUserData(SDL_Texture * texture,
                                                   void *userdata);
# 566 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) void * SDL_GetTextureUserData(SDL_Texture * texture);
# 597 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_UpdateTexture(SDL_Texture * texture,
                                              const SDL_Rect * rect,
                                              const void *pixels, int pitch);
# 628 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_UpdateYUVTexture(SDL_Texture * texture,
                                                 const SDL_Rect * rect,
                                                 const Uint8 *Yplane, int Ypitch,
                                                 const Uint8 *Uplane, int Upitch,
                                                 const Uint8 *Vplane, int Vpitch);
# 654 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_UpdateNVTexture(SDL_Texture * texture,
                                                 const SDL_Rect * rect,
                                                 const Uint8 *Yplane, int Ypitch,
                                                 const Uint8 *UVplane, int UVpitch);
# 686 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_LockTexture(SDL_Texture * texture,
                                            const SDL_Rect * rect,
                                            void **pixels, int *pitch);
# 722 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_LockTextureToSurface(SDL_Texture *texture,
                                            const SDL_Rect *rect,
                                            SDL_Surface **surface);
# 743 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) void SDL_UnlockTexture(SDL_Texture * texture);
# 755 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_RenderTargetSupported(SDL_Renderer *renderer);
# 779 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_SetRenderTarget(SDL_Renderer *renderer,
                                                SDL_Texture *texture);
# 795 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) SDL_Texture * SDL_GetRenderTarget(SDL_Renderer *renderer);
# 823 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderSetLogicalSize(SDL_Renderer * renderer, int w, int h);
# 844 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) void SDL_RenderGetLogicalSize(SDL_Renderer * renderer, int *w, int *h);
# 863 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderSetIntegerScale(SDL_Renderer * renderer,
                                                      SDL_bool enable);
# 877 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_RenderGetIntegerScale(SDL_Renderer * renderer);
# 895 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderSetViewport(SDL_Renderer * renderer,
                                                  const SDL_Rect * rect);
# 908 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) void SDL_RenderGetViewport(SDL_Renderer * renderer,
                                                   SDL_Rect * rect);
# 926 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderSetClipRect(SDL_Renderer * renderer,
                                                  const SDL_Rect * rect);
# 942 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) void SDL_RenderGetClipRect(SDL_Renderer * renderer,
                                                   SDL_Rect * rect);
# 957 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_RenderIsClipEnabled(SDL_Renderer * renderer);
# 982 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderSetScale(SDL_Renderer * renderer,
                                               float scaleX, float scaleY);
# 996 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) void SDL_RenderGetScale(SDL_Renderer * renderer,
                                               float *scaleX, float *scaleY);
# 1020 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) void SDL_RenderWindowToLogical(SDL_Renderer * renderer,
                                                            int windowX, int windowY,
                                                            float *logicalX, float *logicalY);
# 1046 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) void SDL_RenderLogicalToWindow(SDL_Renderer * renderer,
                                                            float logicalX, float logicalY,
                                                            int *windowX, int *windowY);
# 1079 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_SetRenderDrawColor(SDL_Renderer * renderer,
                                           Uint8 r, Uint8 g, Uint8 b,
                                           Uint8 a);
# 1102 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_GetRenderDrawColor(SDL_Renderer * renderer,
                                           Uint8 * r, Uint8 * g, Uint8 * b,
                                           Uint8 * a);
# 1128 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_SetRenderDrawBlendMode(SDL_Renderer * renderer,
                                                       SDL_BlendMode blendMode);
# 1143 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_GetRenderDrawBlendMode(SDL_Renderer * renderer,
                                                       SDL_BlendMode *blendMode);
# 1160 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderClear(SDL_Renderer * renderer);
# 1187 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderDrawPoint(SDL_Renderer * renderer,
                                                int x, int y);
# 1213 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderDrawPoints(SDL_Renderer * renderer,
                                                 const SDL_Point * points,
                                                 int count);
# 1244 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderDrawLine(SDL_Renderer * renderer,
                                               int x1, int y1, int x2, int y2);
# 1270 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderDrawLines(SDL_Renderer * renderer,
                                                const SDL_Point * points,
                                                int count);
# 1296 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderDrawRect(SDL_Renderer * renderer,
                                               const SDL_Rect * rect);
# 1322 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderDrawRects(SDL_Renderer * renderer,
                                                const SDL_Rect * rects,
                                                int count);
# 1352 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderFillRect(SDL_Renderer * renderer,
                                               const SDL_Rect * rect);
# 1377 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderFillRects(SDL_Renderer * renderer,
                                                const SDL_Rect * rects,
                                                int count);
# 1409 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderCopy(SDL_Renderer * renderer,
                                           SDL_Texture * texture,
                                           const SDL_Rect * srcrect,
                                           const SDL_Rect * dstrect);
# 1453 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderCopyEx(SDL_Renderer * renderer,
                                           SDL_Texture * texture,
                                           const SDL_Rect * srcrect,
                                           const SDL_Rect * dstrect,
                                           const double angle,
                                           const SDL_Point *center,
                                           const SDL_RendererFlip flip);
# 1472 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderDrawPointF(SDL_Renderer * renderer,
                                                 float x, float y);
# 1485 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderDrawPointsF(SDL_Renderer * renderer,
                                                  const SDL_FPoint * points,
                                                  int count);
# 1501 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderDrawLineF(SDL_Renderer * renderer,
                                                float x1, float y1, float x2, float y2);
# 1515 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderDrawLinesF(SDL_Renderer * renderer,
                                                 const SDL_FPoint * points,
                                                 int count);
# 1529 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderDrawRectF(SDL_Renderer * renderer,
                                                const SDL_FRect * rect);
# 1543 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderDrawRectsF(SDL_Renderer * renderer,
                                                 const SDL_FRect * rects,
                                                 int count);
# 1558 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderFillRectF(SDL_Renderer * renderer,
                                                const SDL_FRect * rect);
# 1572 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderFillRectsF(SDL_Renderer * renderer,
                                                 const SDL_FRect * rects,
                                                 int count);
# 1590 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderCopyF(SDL_Renderer * renderer,
                                            SDL_Texture * texture,
                                            const SDL_Rect * srcrect,
                                            const SDL_FRect * dstrect);
# 1616 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderCopyExF(SDL_Renderer * renderer,
                                            SDL_Texture * texture,
                                            const SDL_Rect * srcrect,
                                            const SDL_FRect * dstrect,
                                            const double angle,
                                            const SDL_FPoint *center,
                                            const SDL_RendererFlip flip);
# 1644 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderGeometry(SDL_Renderer *renderer,
                                               SDL_Texture *texture,
                                               const SDL_Vertex *vertices, int num_vertices,
                                               const int *indices, int num_indices);
# 1674 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderGeometryRaw(SDL_Renderer *renderer,
                                               SDL_Texture *texture,
                                               const float *xy, int xy_stride,
                                               const SDL_Color *color, int color_stride,
                                               const float *uv, int uv_stride,
                                               int num_vertices,
                                               const void *indices, int num_indices, int size_indices);
# 1708 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderReadPixels(SDL_Renderer * renderer,
                                                 const SDL_Rect * rect,
                                                 Uint32 format,
                                                 void *pixels, int pitch);
# 1748 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) void SDL_RenderPresent(SDL_Renderer * renderer);
# 1763 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) void SDL_DestroyTexture(SDL_Texture * texture);
# 1774 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) void SDL_DestroyRenderer(SDL_Renderer * renderer);
# 1805 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderFlush(SDL_Renderer * renderer);
# 1843 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_GL_BindTexture(SDL_Texture *texture, float *texw, float *texh);
# 1858 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_GL_UnbindTexture(SDL_Texture *texture);
# 1874 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) void * SDL_RenderGetMetalLayer(SDL_Renderer * renderer);
# 1895 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) void * SDL_RenderGetMetalCommandEncoder(SDL_Renderer * renderer);
# 1906 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h"
extern __attribute__ ((visibility("default"))) int SDL_RenderSetVSync(SDL_Renderer* renderer, int vsync);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 1913 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_render.h" 2
# 56 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2


# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_shape.h" 1
# 31 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_shape.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 32 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_shape.h" 2
# 69 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_shape.h"
extern __attribute__ ((visibility("default"))) SDL_Window * SDL_CreateShapedWindow(const char *title,unsigned int x,unsigned int y,unsigned int w,unsigned int h,Uint32 flags);
# 82 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_shape.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_IsShapedWindow(const SDL_Window *window);


typedef enum {

    ShapeModeDefault,

    ShapeModeBinarizeAlpha,

    ShapeModeReverseBinarizeAlpha,

    ShapeModeColorKey
} WindowShapeMode;




typedef union {

    Uint8 binarizationCutoff;
    SDL_Color colorKey;
} SDL_WindowShapeParams;


typedef struct SDL_WindowShapeMode {

    WindowShapeMode mode;

    SDL_WindowShapeParams parameters;
} SDL_WindowShapeMode;
# 128 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_shape.h"
extern __attribute__ ((visibility("default"))) int SDL_SetWindowShape(SDL_Window *window,SDL_Surface *shape,SDL_WindowShapeMode *shape_mode);
# 147 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_shape.h"
extern __attribute__ ((visibility("default"))) int SDL_GetShapedWindowMode(SDL_Window *window,SDL_WindowShapeMode *shape_mode);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 154 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_shape.h" 2
# 59 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_system.h" 1
# 36 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_system.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 37 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_system.h" 2
# 581 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_system.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_IsTablet(void);


extern __attribute__ ((visibility("default"))) void SDL_OnApplicationWillTerminate(void);
extern __attribute__ ((visibility("default"))) void SDL_OnApplicationDidReceiveMemoryWarning(void);
extern __attribute__ ((visibility("default"))) void SDL_OnApplicationWillResignActive(void);
extern __attribute__ ((visibility("default"))) void SDL_OnApplicationDidEnterBackground(void);
extern __attribute__ ((visibility("default"))) void SDL_OnApplicationWillEnterForeground(void);
extern __attribute__ ((visibility("default"))) void SDL_OnApplicationDidBecomeActive(void);
# 619 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_system.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 620 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_system.h" 2
# 60 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2

# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_timer.h" 1
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_timer.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 35 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_timer.h" 2
# 58 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_timer.h"
extern __attribute__ ((visibility("default"))) Uint32 SDL_GetTicks(void);
# 82 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_timer.h"
extern __attribute__ ((visibility("default"))) Uint64 SDL_GetTicks64(void);
# 123 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_timer.h"
extern __attribute__ ((visibility("default"))) Uint64 SDL_GetPerformanceCounter(void);
# 134 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_timer.h"
extern __attribute__ ((visibility("default"))) Uint64 SDL_GetPerformanceFrequency(void);
# 147 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_timer.h"
extern __attribute__ ((visibility("default"))) void SDL_Delay(Uint32 ms);
# 157 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_timer.h"
typedef Uint32 ( * SDL_TimerCallback) (Uint32 interval, void *param);




typedef int SDL_TimerID;
# 196 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_timer.h"
extern __attribute__ ((visibility("default"))) SDL_TimerID SDL_AddTimer(Uint32 interval,
                                                 SDL_TimerCallback callback,
                                                 void *param);
# 211 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_timer.h"
extern __attribute__ ((visibility("default"))) SDL_bool SDL_RemoveTimer(SDL_TimerID id);






# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 219 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_timer.h" 2
# 62 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_version.h" 1
# 33 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_version.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_version.h" 2
# 51 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_version.h"
typedef struct SDL_version
{
    Uint8 major;
    Uint8 minor;
    Uint8 patch;
} SDL_version;
# 141 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_version.h"
extern __attribute__ ((visibility("default"))) void SDL_GetVersion(SDL_version * ver);
# 170 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_version.h"
extern __attribute__ ((visibility("default"))) const char * SDL_GetRevision(void);
# 193 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_version.h"
extern __attribute__((deprecated)) __attribute__ ((visibility("default"))) int SDL_GetRevisionNumber(void);






# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 201 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_version.h" 2
# 63 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2

# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_locale.h" 1
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_locale.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 35 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_locale.h" 2








typedef struct SDL_Locale
{
    const char *language;
    const char *country;
} SDL_Locale;
# 91 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_locale.h"
extern __attribute__ ((visibility("default"))) SDL_Locale * SDL_GetPreferredLocales(void);







# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 100 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_locale.h" 2
# 65 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_misc.h" 1
# 33 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_misc.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 34 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_misc.h" 2
# 69 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_misc.h"
extern __attribute__ ((visibility("default"))) int SDL_OpenURL(const char *url);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 76 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL_misc.h" 2
# 66 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2

# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/begin_code.h" 1
# 68 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2
# 144 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h"
extern __attribute__ ((visibility("default"))) int SDL_Init(Uint32 flags);
# 161 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h"
extern __attribute__ ((visibility("default"))) int SDL_InitSubSystem(Uint32 flags);
# 183 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h"
extern __attribute__ ((visibility("default"))) void SDL_QuitSubSystem(Uint32 flags);
# 199 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h"
extern __attribute__ ((visibility("default"))) Uint32 SDL_WasInit(Uint32 flags);
# 223 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h"
extern __attribute__ ((visibility("default"))) void SDL_Quit(void);





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/close_code.h" 1
# 230 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/SDL2/SDL.h" 2
# 3 "unix_display.c" 2
# 1 "../../extmod/tulip/polyfills.h" 1



# 1 "../../py/mphal.h" 1
# 30 "../../py/mphal.h"
# 1 "../../py/mpconfig.h" 1
# 62 "../../py/mpconfig.h"
# 1 "./mpconfigport.h" 1
# 129 "./mpconfigport.h"
extern const struct _mp_obj_module_t mp_module_utime;
# 179 "./mpconfigport.h"
typedef int mp_int_t;
typedef unsigned mp_uint_t;
typedef long mp_off_t;
# 63 "../../py/mpconfig.h" 2
# 793 "../../py/mpconfig.h"
typedef double mp_float_t;
# 31 "../../py/mphal.h" 2




# 1 "./mphalport.h" 1
# 27 "./mphalport.h"
# 1 "../../py/obj.h" 1
# 29 "../../py/obj.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/assert.h" 1 3
# 19 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/assert.h" 3
__attribute__((__noreturn__)) void __assert_fail (const char *, const char *, int, const char *);
# 30 "../../py/obj.h" 2


# 1 "../../py/misc.h" 1
# 33 "../../py/misc.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/stdbool.h" 1 3
# 34 "../../py/misc.h" 2

# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/stddef.h" 1 3
# 36 "../../py/misc.h" 2

typedef unsigned char byte;
typedef unsigned int uint;
# 91 "../../py/misc.h"
void *m_malloc(size_t num_bytes);
void *m_malloc_maybe(size_t num_bytes);
void *m_malloc_with_finaliser(size_t num_bytes);
void *m_malloc0(size_t num_bytes);





void *m_realloc(void *ptr, size_t new_num_bytes);
void *m_realloc_maybe(void *ptr, size_t new_num_bytes, _Bool allow_move);
void m_free(void *ptr);

__attribute__((noreturn)) void m_malloc_fail(size_t num_bytes);
# 131 "../../py/misc.h"
typedef uint32_t unichar_mp;







unichar_mp utf8_get_char(const byte *s);
const byte *utf8_next_char(const byte *s);
size_t utf8_charlen(const byte *str, size_t len);
# 155 "../../py/misc.h"
_Bool unichar_mp_isspace(unichar_mp c);
_Bool unichar_mp_isalpha(unichar_mp c);
_Bool unichar_mp_isprint(unichar_mp c);
_Bool unichar_mp_isdigit(unichar_mp c);
_Bool unichar_mp_isxdigit(unichar_mp c);
_Bool unichar_mp_isident(unichar_mp c);
_Bool unichar_mp_isalnum(unichar_mp c);
_Bool unichar_mp_isupper(unichar_mp c);
_Bool unichar_mp_islower(unichar_mp c);
unichar_mp unichar_mp_tolower(unichar_mp c);
unichar_mp unichar_mp_toupper(unichar_mp c);
mp_uint_t unichar_mp_xdigit_value(unichar_mp c);





typedef struct _vstr_t {
    size_t alloc;
    size_t len;
    char *buf;
    _Bool fixed_buf : 1;
} vstr_t;




void vstr_init(vstr_t *vstr, size_t alloc);
void vstr_init_len(vstr_t *vstr, size_t len);
void vstr_init_fixed_buf(vstr_t *vstr, size_t alloc, char *buf);
struct _mp_print_t;
void vstr_init_print(vstr_t *vstr, size_t alloc, struct _mp_print_t *print);
void vstr_clear(vstr_t *vstr);
vstr_t *vstr_new(size_t alloc);
void vstr_free(vstr_t *vstr);
static inline void vstr_reset(vstr_t *vstr) {
    vstr->len = 0;
}
static inline char *vstr_str(vstr_t *vstr) {
    return vstr->buf;
}
static inline size_t vstr_len(vstr_t *vstr) {
    return vstr->len;
}
void vstr_hint_size(vstr_t *vstr, size_t size);
char *vstr_extend(vstr_t *vstr, size_t size);
char *vstr_add_len(vstr_t *vstr, size_t len);
char *vstr_null_terminated_str(vstr_t *vstr);
void vstr_add_byte(vstr_t *vstr, byte v);
void vstr_add_char(vstr_t *vstr, unichar_mp chr);
void vstr_add_str(vstr_t *vstr, const char *str);
void vstr_add_strn(vstr_t *vstr, const char *str, size_t len);
void vstr_ins_byte(vstr_t *vstr, size_t byte_pos, byte b);
void vstr_ins_char(vstr_t *vstr, size_t char_pos, unichar_mp chr);
void vstr_cut_head_bytes(vstr_t *vstr, size_t bytes_to_cut);
void vstr_cut_tail_bytes(vstr_t *vstr, size_t bytes_to_cut);
void vstr_cut_out_bytes(vstr_t *vstr, size_t byte_pos, size_t bytes_to_cut);
void vstr_printf(vstr_t *vstr, const char *fmt, ...);
# 227 "../../py/misc.h"
void vstr_vprintf(vstr_t *vstr, const char *fmt, va_list ap);



int DEBUG_printf(const char *fmt, ...);

extern mp_uint_t mp_verbose_flag;
# 242 "../../py/misc.h"
typedef uint64_t mp_float_uint_t;
# 251 "../../py/misc.h"
typedef union _mp_float_union_t {
    mp_float_t f;

    struct {
        mp_float_uint_t frc : (52);
        mp_float_uint_t exp : (11);
        mp_float_uint_t sgn : 1;
    } p;







    mp_float_uint_t i;
} mp_float_union_t;
# 321 "../../py/misc.h"
typedef const char *mp_rom_error_text_t;
# 33 "../../py/obj.h" 2
# 1 "../../py/qstr.h" 1
# 39 "../../py/qstr.h"
enum {





    MP_QSTRnumber_of,
};

typedef size_t qstr;
typedef uint16_t qstr_short_t;




typedef uint16_t qstr_hash_t;





typedef uint8_t qstr_len_t;






typedef struct _qstr_pool_t {
    const struct _qstr_pool_t *prev;
    size_t total_prev_len;
    size_t alloc;
    size_t len;
    qstr_hash_t *hashes;
    qstr_len_t *lengths;
    const char *qstrs[];
} qstr_pool_t;



void qstr_init(void);

mp_uint_t qstr_compute_hash(const byte *data, size_t len);
qstr qstr_find_strn(const char *str, size_t str_len);

qstr qstr_from_str(const char *str);
qstr qstr_from_strn(const char *str, size_t len);

mp_uint_t qstr_hash(qstr q);
const char *qstr_str(qstr q);
size_t qstr_len(qstr q);
const byte *qstr_data(qstr q, size_t *len);

void qstr_pool_info(size_t *n_pool, size_t *n_qstr, size_t *n_str_data_bytes, size_t *n_total_bytes);
void qstr_dump_data(void);
# 34 "../../py/obj.h" 2
# 1 "../../py/mpprint.h" 1
# 53 "../../py/mpprint.h"
typedef void (*mp_print_strn_t)(void *data, const char *str, size_t len);

typedef struct _mp_print_t {
    void *data;
    mp_print_strn_t print_strn;
} mp_print_t;

extern const mp_print_t mp_display_print;
extern void display_print_strn(void *env, const char *str, size_t len);

typedef struct _mp_print_ext_t {
    mp_print_t base;
    const char *item_separator;
    const char *key_separator;
}mp_print_ext_t;





extern const mp_print_t mp_plat_print;






int mp_print_str(const mp_print_t *print, const char *str);
int mp_print_strn(const mp_print_t *print, const char *str, size_t len, int flags, char fill, int width);

int mp_print_float(const mp_print_t *print, mp_float_t f, char fmt, int flags, char fill, int width, int prec);


int mp_printf(const mp_print_t *print, const char *fmt, ...);

int mp_vprintf(const mp_print_t *print, const char *fmt, va_list args);
# 35 "../../py/obj.h" 2
# 1 "../../py/runtime0.h" 1
# 65 "../../py/runtime0.h"
typedef enum {


    MP_UNARY_OP_POSITIVE,
    MP_UNARY_OP_NEGATIVE,
    MP_UNARY_OP_INVERT,
    MP_UNARY_OP_NOT,


    MP_UNARY_OP_BOOL,
    MP_UNARY_OP_LEN,
    MP_UNARY_OP_HASH,
    MP_UNARY_OP_ABS,
    MP_UNARY_OP_INT,
    MP_UNARY_OP_SIZEOF,
} mp_unary_op_t;

typedef enum {




    MP_BINARY_OP_LESS,
    MP_BINARY_OP_MORE,
    MP_BINARY_OP_EQUAL,
    MP_BINARY_OP_LESS_EQUAL,
    MP_BINARY_OP_MORE_EQUAL,
    MP_BINARY_OP_NOT_EQUAL,
    MP_BINARY_OP_IN,
    MP_BINARY_OP_IS,
    MP_BINARY_OP_EXCEPTION_MATCH,


    MP_BINARY_OP_INPLACE_OR,
    MP_BINARY_OP_INPLACE_XOR,
    MP_BINARY_OP_INPLACE_AND,
    MP_BINARY_OP_INPLACE_LSHIFT,
    MP_BINARY_OP_INPLACE_RSHIFT,
    MP_BINARY_OP_INPLACE_ADD,
    MP_BINARY_OP_INPLACE_SUBTRACT,
    MP_BINARY_OP_INPLACE_MULTIPLY,
    MP_BINARY_OP_INPLACE_MAT_MULTIPLY,
    MP_BINARY_OP_INPLACE_FLOOR_DIVIDE,
    MP_BINARY_OP_INPLACE_TRUE_DIVIDE,
    MP_BINARY_OP_INPLACE_MODULO,
    MP_BINARY_OP_INPLACE_POWER,


    MP_BINARY_OP_OR,
    MP_BINARY_OP_XOR,
    MP_BINARY_OP_AND,
    MP_BINARY_OP_LSHIFT,
    MP_BINARY_OP_RSHIFT,
    MP_BINARY_OP_ADD,
    MP_BINARY_OP_SUBTRACT,
    MP_BINARY_OP_MULTIPLY,
    MP_BINARY_OP_MAT_MULTIPLY,
    MP_BINARY_OP_FLOOR_DIVIDE,
    MP_BINARY_OP_TRUE_DIVIDE,
    MP_BINARY_OP_MODULO,
    MP_BINARY_OP_POWER,






    MP_BINARY_OP_DIVMOD,



    MP_BINARY_OP_CONTAINS,



    MP_BINARY_OP_REVERSE_OR,
    MP_BINARY_OP_REVERSE_XOR,
    MP_BINARY_OP_REVERSE_AND,
    MP_BINARY_OP_REVERSE_LSHIFT,
    MP_BINARY_OP_REVERSE_RSHIFT,
    MP_BINARY_OP_REVERSE_ADD,
    MP_BINARY_OP_REVERSE_SUBTRACT,
    MP_BINARY_OP_REVERSE_MULTIPLY,
    MP_BINARY_OP_REVERSE_MAT_MULTIPLY,
    MP_BINARY_OP_REVERSE_FLOOR_DIVIDE,
    MP_BINARY_OP_REVERSE_TRUE_DIVIDE,
    MP_BINARY_OP_REVERSE_MODULO,
    MP_BINARY_OP_REVERSE_POWER,


    MP_BINARY_OP_NOT_IN,
    MP_BINARY_OP_IS_NOT,
} mp_binary_op_t;
# 36 "../../py/obj.h" 2








typedef void *mp_obj_t;
typedef const void *mp_const_obj_t;




typedef struct _mp_obj_type_t mp_obj_type_t;



struct _mp_obj_base_t {
    const mp_obj_type_t *type ;
};
typedef struct _mp_obj_base_t mp_obj_base_t;
# 86 "../../py/obj.h"
static inline _Bool mp_obj_is_small_int(mp_const_obj_t o) {
    return (((mp_int_t)(o)) & 1) != 0;
}



static inline _Bool mp_obj_is_qstr(mp_const_obj_t o) {
    return (((mp_int_t)(o)) & 7) == 2;
}



static inline _Bool mp_obj_is_immediate_obj(mp_const_obj_t o) {
    return (((mp_int_t)(o)) & 7) == 6;
}
# 112 "../../py/obj.h"
extern const struct _mp_obj_float_t mp_const_float_e_obj;
extern const struct _mp_obj_float_t mp_const_float_pi_obj;







mp_float_t mp_obj_float_get(mp_obj_t self_in);
mp_obj_t mp_obj_new_float(mp_float_t value);


static inline _Bool mp_obj_is_obj(mp_const_obj_t o) {
    return (((mp_int_t)(o)) & 3) == 0;
}
# 336 "../../py/obj.h"
typedef mp_const_obj_t mp_rom_obj_t;
# 428 "../../py/obj.h"
typedef struct _mp_map_elem_t {
    mp_obj_t key;
    mp_obj_t value;
} mp_map_elem_t;

typedef struct _mp_rom_map_elem_t {
    mp_rom_obj_t key;
    mp_rom_obj_t value;
} mp_rom_map_elem_t;

typedef struct _mp_map_t {
    size_t all_keys_are_qstrs : 1;
    size_t is_fixed : 1;
    size_t is_ordered : 1;
    size_t used : (8 * sizeof(size_t) - 3);
    size_t alloc;
    mp_map_elem_t *table;
} mp_map_t;


typedef enum _mp_map_lookup_kind_t {
    MP_MAP_LOOKUP = 0,
    MP_MAP_LOOKUP_ADD_IF_NOT_FOUND = 1,
    MP_MAP_LOOKUP_REMOVE_IF_FOUND = 2,
    MP_MAP_LOOKUP_ADD_IF_NOT_FOUND_OR_REMOVE_IF_FOUND = 3,
} mp_map_lookup_kind_t;

static inline _Bool mp_map_slot_is_filled(const mp_map_t *map, size_t pos) {
    (void)0;
    return (map)->table[pos].key != (((mp_obj_t)(void *)0)) && (map)->table[pos].key != (((mp_obj_t)(void *)4));
}

void mp_map_init(mp_map_t *map, size_t n);
void mp_map_init_fixed_table(mp_map_t *map, size_t n, const mp_obj_t *table);
mp_map_t *mp_map_new(size_t n);
void mp_map_deinit(mp_map_t *map);
void mp_map_free(mp_map_t *map);
mp_map_elem_t *mp_map_lookup(mp_map_t *map, mp_obj_t index, mp_map_lookup_kind_t lookup_kind);
void mp_map_clear(mp_map_t *map);
void mp_map_dump(mp_map_t *map);



typedef struct _mp_set_t {
    size_t alloc;
    size_t used;
    mp_obj_t *table;
} mp_set_t;

static inline _Bool mp_set_slot_is_filled(const mp_set_t *set, size_t pos) {
    return (set)->table[pos] != (((mp_obj_t)(void *)0)) && (set)->table[pos] != (((mp_obj_t)(void *)4));
}

void mp_set_init(mp_set_t *set, size_t n);
mp_obj_t mp_set_lookup(mp_set_t *set, mp_obj_t index, mp_map_lookup_kind_t lookup_kind);
mp_obj_t mp_set_remove_first(mp_set_t *set);
void mp_set_clear(mp_set_t *set);



typedef mp_obj_t (*mp_fun_0_t)(void);
typedef mp_obj_t (*mp_fun_1_t)(mp_obj_t);
typedef mp_obj_t (*mp_fun_2_t)(mp_obj_t, mp_obj_t);
typedef mp_obj_t (*mp_fun_3_t)(mp_obj_t, mp_obj_t, mp_obj_t);
typedef mp_obj_t (*mp_fun_var_t)(size_t n, const mp_obj_t *);


typedef mp_obj_t (*mp_fun_kw_t)(size_t n, const mp_obj_t *, mp_map_t *);
# 514 "../../py/obj.h"
typedef enum {
    PRINT_STR = 0,
    PRINT_REPR = 1,
    PRINT_EXC = 2,
    PRINT_JSON = 3,
    PRINT_RAW = 4,
    PRINT_EXC_SUBCLASS = 0x80,
} mp_print_kind_t;

typedef struct _mp_obj_iter_buf_t {
    mp_obj_base_t base;
    mp_obj_t buf[3];
} mp_obj_iter_buf_t;





typedef void (*mp_print_fun_t)(const mp_print_t *print, mp_obj_t o, mp_print_kind_t kind);
typedef mp_obj_t (*mp_make_new_fun_t)(const mp_obj_type_t *type, size_t n_args, size_t n_kw, const mp_obj_t *args);
typedef mp_obj_t (*mp_call_fun_t)(mp_obj_t fun, size_t n_args, size_t n_kw, const mp_obj_t *args);
typedef mp_obj_t (*mp_unary_op_fun_t)(mp_unary_op_t op, mp_obj_t);
typedef mp_obj_t (*mp_binary_op_fun_t)(mp_binary_op_t op, mp_obj_t, mp_obj_t);
typedef void (*mp_attr_fun_t)(mp_obj_t self_in, qstr attr, mp_obj_t *dest);
typedef mp_obj_t (*mp_subscr_fun_t)(mp_obj_t self_in, mp_obj_t index, mp_obj_t value);
typedef mp_obj_t (*mp_getiter_fun_t)(mp_obj_t self_in, mp_obj_iter_buf_t *iter_buf);


typedef struct _mp_buffer_info_t {
    void *buf;
    size_t len;
    int typecode;
} mp_buffer_info_t;



typedef struct _mp_buffer_p_t {
    mp_int_t (*get_buffer)(mp_obj_t obj, mp_buffer_info_t *bufinfo, mp_uint_t flags);
} mp_buffer_p_t;
_Bool mp_get_buffer(mp_obj_t obj, mp_buffer_info_t *bufinfo, mp_uint_t flags);
void mp_get_buffer_raise(mp_obj_t obj, mp_buffer_info_t *bufinfo, mp_uint_t flags);

struct _mp_obj_type_t {

    mp_obj_base_t base;


    uint16_t flags;


    uint16_t name;


    mp_print_fun_t print;


    mp_make_new_fun_t make_new;


    mp_call_fun_t call;



    mp_unary_op_fun_t unary_op;
    mp_binary_op_fun_t binary_op;
# 592 "../../py/obj.h"
    mp_attr_fun_t attr;






    mp_subscr_fun_t subscr;




    mp_getiter_fun_t getiter;



    mp_fun_1_t iternext;


    mp_buffer_p_t buffer_p;


    const void *protocol;





    const void *parent;


    struct _mp_obj_dict_t *locals_dict;
};


extern const mp_obj_type_t mp_type_type;
extern const mp_obj_type_t mp_type_object;
extern const mp_obj_type_t mp_type_NoneType;
extern const mp_obj_type_t mp_type_bool;
extern const mp_obj_type_t mp_type_int;
extern const mp_obj_type_t mp_type_str;
extern const mp_obj_type_t mp_type_bytes;
extern const mp_obj_type_t mp_type_bytearray;
extern const mp_obj_type_t mp_type_memoryview;
extern const mp_obj_type_t mp_type_float;
extern const mp_obj_type_t mp_type_complex;
extern const mp_obj_type_t mp_type_tuple;
extern const mp_obj_type_t mp_type_list;
extern const mp_obj_type_t mp_type_map;
extern const mp_obj_type_t mp_type_enumerate;
extern const mp_obj_type_t mp_type_filter;
extern const mp_obj_type_t mp_type_deque;
extern const mp_obj_type_t mp_type_dict;
extern const mp_obj_type_t mp_type_ordereddict;
extern const mp_obj_type_t mp_type_range;
extern const mp_obj_type_t mp_type_set;
extern const mp_obj_type_t mp_type_frozenset;
extern const mp_obj_type_t mp_type_slice;
extern const mp_obj_type_t mp_type_zip;
extern const mp_obj_type_t mp_type_array;
extern const mp_obj_type_t mp_type_super;
extern const mp_obj_type_t mp_type_gen_wrap;
extern const mp_obj_type_t mp_type_native_gen_wrap;
extern const mp_obj_type_t mp_type_gen_instance;
extern const mp_obj_type_t mp_type_fun_builtin_0;
extern const mp_obj_type_t mp_type_fun_builtin_1;
extern const mp_obj_type_t mp_type_fun_builtin_2;
extern const mp_obj_type_t mp_type_fun_builtin_3;
extern const mp_obj_type_t mp_type_fun_builtin_var;
extern const mp_obj_type_t mp_type_fun_bc;
extern const mp_obj_type_t mp_type_module;
extern const mp_obj_type_t mp_type_staticmethod;
extern const mp_obj_type_t mp_type_classmethod;
extern const mp_obj_type_t mp_type_property;
extern const mp_obj_type_t mp_type_stringio;
extern const mp_obj_type_t mp_type_bytesio;
extern const mp_obj_type_t mp_type_reversed;
extern const mp_obj_type_t mp_type_polymorph_iter;


extern const mp_obj_type_t mp_type_BaseException;
extern const mp_obj_type_t mp_type_ArithmeticError;
extern const mp_obj_type_t mp_type_AssertionError;
extern const mp_obj_type_t mp_type_AttributeError;
extern const mp_obj_type_t mp_type_EOFError;
extern const mp_obj_type_t mp_type_Exception;
extern const mp_obj_type_t mp_type_GeneratorExit;
extern const mp_obj_type_t mp_type_ImportError;
extern const mp_obj_type_t mp_type_IndentationError;
extern const mp_obj_type_t mp_type_IndexError;
extern const mp_obj_type_t mp_type_KeyboardInterrupt;
extern const mp_obj_type_t mp_type_KeyError;
extern const mp_obj_type_t mp_type_LookupError;
extern const mp_obj_type_t mp_type_MemoryError;
extern const mp_obj_type_t mp_type_NameError;
extern const mp_obj_type_t mp_type_NotImplementedError;
extern const mp_obj_type_t mp_type_OSError;
extern const mp_obj_type_t mp_type_OverflowError;
extern const mp_obj_type_t mp_type_RuntimeError;
extern const mp_obj_type_t mp_type_StopAsyncIteration;
extern const mp_obj_type_t mp_type_StopIteration;
extern const mp_obj_type_t mp_type_SyntaxError;
extern const mp_obj_type_t mp_type_SystemExit;
extern const mp_obj_type_t mp_type_TypeError;
extern const mp_obj_type_t mp_type_UnicodeError;
extern const mp_obj_type_t mp_type_ValueError;
extern const mp_obj_type_t mp_type_ViperTypeError;
extern const mp_obj_type_t mp_type_ZeroDivisionError;
# 722 "../../py/obj.h"
extern const struct _mp_obj_str_t mp_const_empty_bytes_obj;
extern const struct _mp_obj_tuple_t mp_const_empty_tuple_obj;
extern const struct _mp_obj_dict_t mp_const_empty_dict_obj;
extern const struct _mp_obj_singleton_t mp_const_ellipsis_obj;
extern const struct _mp_obj_singleton_t mp_const_notimplemented_obj;
extern const struct _mp_obj_exception_t mp_const_GeneratorExit_obj;
# 739 "../../py/obj.h"
void *mp_obj_malloc_helper(size_t num_bytes, const mp_obj_type_t *type);
# 758 "../../py/obj.h"
mp_obj_t mp_obj_new_type(qstr name, mp_obj_t bases_tuple, mp_obj_t locals_dict);
static inline mp_obj_t mp_obj_new_bool(mp_int_t x) {
    return x ? ((mp_obj_t)(((3) << 3) | 6)) : ((mp_obj_t)(((1) << 3) | 6));
}
mp_obj_t mp_obj_new_cell(mp_obj_t obj);
mp_obj_t mp_obj_new_int(mp_int_t value);
mp_obj_t mp_obj_new_int_from_uint(mp_uint_t value);
mp_obj_t mp_obj_new_int_from_str_len(const char **str, size_t len, _Bool neg, unsigned int base);
mp_obj_t mp_obj_new_int_from_ll(long long val);
mp_obj_t mp_obj_new_int_from_ull(unsigned long long val);
mp_obj_t mp_obj_new_str(const char *data, size_t len);
mp_obj_t mp_obj_new_str_via_qstr(const char *data, size_t len);
mp_obj_t mp_obj_new_str_from_vstr(const mp_obj_type_t *type, vstr_t *vstr);
mp_obj_t mp_obj_new_bytes(const byte *data, size_t len);
mp_obj_t mp_obj_new_bytearray(size_t n, void *items);
mp_obj_t mp_obj_new_bytearray_by_ref(size_t n, void *items);

mp_obj_t mp_obj_new_int_from_float(mp_float_t val);
mp_obj_t mp_obj_new_complex(mp_float_t real, mp_float_t imag);

mp_obj_t mp_obj_new_exception(const mp_obj_type_t *exc_type);
mp_obj_t mp_obj_new_exception_args(const mp_obj_type_t *exc_type, size_t n_args, const mp_obj_t *args);




mp_obj_t mp_obj_new_exception_msg(const mp_obj_type_t *exc_type, mp_rom_error_text_t msg);
mp_obj_t mp_obj_new_exception_msg_varg(const mp_obj_type_t *exc_type, mp_rom_error_text_t fmt, ...);


mp_obj_t mp_obj_new_exception_msg_vlist(const mp_obj_type_t *exc_type, mp_rom_error_text_t fmt, va_list arg);

mp_obj_t mp_obj_new_gen_wrap(mp_obj_t fun);
mp_obj_t mp_obj_new_closure(mp_obj_t fun, size_t n_closed, const mp_obj_t *closed);
mp_obj_t mp_obj_new_tuple(size_t n, const mp_obj_t *items);
mp_obj_t mp_obj_new_list(size_t n, mp_obj_t *items);
mp_obj_t mp_obj_new_dict(size_t n_args);
mp_obj_t mp_obj_new_set(size_t n_args, mp_obj_t *items);
mp_obj_t mp_obj_new_slice(mp_obj_t start, mp_obj_t stop, mp_obj_t step);
mp_obj_t mp_obj_new_bound_meth(mp_obj_t meth, mp_obj_t self);
mp_obj_t mp_obj_new_getitem_iter(mp_obj_t *args, mp_obj_iter_buf_t *iter_buf);
mp_obj_t mp_obj_new_module(qstr module_name);
mp_obj_t mp_obj_new_memoryview(byte typecode, size_t nitems, void *items);

const mp_obj_type_t *mp_obj_get_type(mp_const_obj_t o_in);
const char *mp_obj_get_type_str(mp_const_obj_t o_in);
_Bool mp_obj_is_subclass_fast(mp_const_obj_t object, mp_const_obj_t classinfo);
mp_obj_t mp_obj_cast_to_native_base(mp_obj_t self_in, mp_const_obj_t native_type);

void mp_obj_print_helper(const mp_print_t *print, mp_obj_t o_in, mp_print_kind_t kind);
void mp_obj_print(mp_obj_t o, mp_print_kind_t kind);
void mp_obj_print_exception(const mp_print_t *print, mp_obj_t exc);

_Bool mp_obj_is_true(mp_obj_t arg);
_Bool mp_obj_is_callable(mp_obj_t o_in);
mp_obj_t mp_obj_equal_not_equal(mp_binary_op_t op, mp_obj_t o1, mp_obj_t o2);
_Bool mp_obj_equal(mp_obj_t o1, mp_obj_t o2);


static inline _Bool mp_obj_is_integer(mp_const_obj_t o) {
    return (mp_obj_is_small_int(o) || (mp_obj_is_obj(o) && (((mp_obj_base_t *)((void *)o))->type == (&mp_type_int)))) || ((o) == ((mp_obj_t)(((1) << 3) | 6)) || (o) == ((mp_obj_t)(((3) << 3) | 6)));
}

mp_int_t mp_obj_get_int(mp_const_obj_t arg);
mp_int_t mp_obj_get_int_truncated(mp_const_obj_t arg);
_Bool mp_obj_get_int_maybe(mp_const_obj_t arg, mp_int_t *value);

mp_float_t mp_obj_get_float(mp_obj_t self_in);
_Bool mp_obj_get_float_maybe(mp_obj_t arg, mp_float_t *value);
void mp_obj_get_complex(mp_obj_t self_in, mp_float_t *real, mp_float_t *imag);
_Bool mp_obj_get_complex_maybe(mp_obj_t self_in, mp_float_t *real, mp_float_t *imag);

void mp_obj_get_array(mp_obj_t o, size_t *len, mp_obj_t **items);
void mp_obj_get_array_fixed_n(mp_obj_t o, size_t len, mp_obj_t **items);
size_t mp_get_index(const mp_obj_type_t *type, size_t len, mp_obj_t index, _Bool is_slice);
mp_obj_t mp_obj_id(mp_obj_t o_in);
mp_obj_t mp_obj_len(mp_obj_t o_in);
mp_obj_t mp_obj_len_maybe(mp_obj_t o_in);
mp_obj_t mp_obj_subscr(mp_obj_t base, mp_obj_t index, mp_obj_t val);
mp_obj_t mp_generic_unary_op(mp_unary_op_t op, mp_obj_t o_in);


mp_obj_t mp_obj_cell_get(mp_obj_t self_in);
void mp_obj_cell_set(mp_obj_t self_in, mp_obj_t obj);



mp_int_t mp_obj_int_get_truncated(mp_const_obj_t self_in);

mp_int_t mp_obj_int_get_checked(mp_const_obj_t self_in);

mp_uint_t mp_obj_int_get_uint_checked(mp_const_obj_t self_in);



_Bool mp_obj_is_exception_type(mp_obj_t self_in);
_Bool mp_obj_is_exception_instance(mp_obj_t self_in);
_Bool mp_obj_exception_match(mp_obj_t exc, mp_const_obj_t exc_type);
void mp_obj_exception_clear_traceback(mp_obj_t self_in);
void mp_obj_exception_add_traceback(mp_obj_t self_in, qstr file, size_t line, qstr block);
void mp_obj_exception_get_traceback(mp_obj_t self_in, size_t *n, size_t **values);
mp_obj_t mp_obj_exception_get_value(mp_obj_t self_in);
mp_obj_t mp_obj_exception_make_new(const mp_obj_type_t *type_in, size_t n_args, size_t n_kw, const mp_obj_t *args);
mp_obj_t mp_alloc_emergency_exception_buf(mp_obj_t size_in);
void mp_init_emergency_exception_buf(void);
static inline mp_obj_t mp_obj_new_exception_arg1(const mp_obj_type_t *exc_type, mp_obj_t arg) {
    (void)0;
    return mp_obj_exception_make_new(exc_type, 1, 0, &arg);
}


_Bool mp_obj_str_equal(mp_obj_t s1, mp_obj_t s2);
qstr mp_obj_str_get_qstr(mp_obj_t self_in);
const char *mp_obj_str_get_str(mp_obj_t self_in);
const char *mp_obj_str_get_data(mp_obj_t self_in, size_t *len);
mp_obj_t mp_obj_str_intern(mp_obj_t str);
mp_obj_t mp_obj_str_intern_checked(mp_obj_t obj);
void mp_str_print_quoted(const mp_print_t *print, const byte *str_data, size_t str_len, _Bool is_bytes);
# 896 "../../py/obj.h"
static inline float mp_obj_get_float_to_f(mp_obj_t o) {
    return (float)mp_obj_get_float(o);
}

static inline double mp_obj_get_float_to_d(mp_obj_t o) {
    return mp_obj_get_float(o);
}

static inline mp_obj_t mp_obj_new_float_from_f(float o) {
    return mp_obj_new_float((mp_float_t)o);
}

static inline mp_obj_t mp_obj_new_float_from_d(double o) {
    return mp_obj_new_float(o);
}




static inline mp_int_t mp_float_hash(mp_float_t val) {
    return (mp_int_t)val;
}

mp_obj_t mp_obj_float_binary_op(mp_binary_op_t op, mp_float_t lhs_val, mp_obj_t rhs);


void mp_obj_complex_get(mp_obj_t self_in, mp_float_t *real, mp_float_t *imag);
mp_obj_t mp_obj_complex_binary_op(mp_binary_op_t op, mp_float_t lhs_real, mp_float_t lhs_imag, mp_obj_t rhs_in);





void mp_obj_tuple_get(mp_obj_t self_in, size_t *len, mp_obj_t **items);
void mp_obj_tuple_del(mp_obj_t self_in);
mp_int_t mp_obj_tuple_hash(mp_obj_t self_in);


mp_obj_t mp_obj_list_append(mp_obj_t self_in, mp_obj_t arg);
mp_obj_t mp_obj_list_remove(mp_obj_t self_in, mp_obj_t value);
void mp_obj_list_get(mp_obj_t self_in, size_t *len, mp_obj_t **items);
void mp_obj_list_set_len(mp_obj_t self_in, size_t len);
void mp_obj_list_store(mp_obj_t self_in, mp_obj_t index, mp_obj_t value);
mp_obj_t mp_obj_list_sort(size_t n_args, const mp_obj_t *args, mp_map_t *kwargs);


typedef struct _mp_obj_dict_t {
    mp_obj_base_t base;
    mp_map_t map;
} mp_obj_dict_t;
mp_obj_t mp_obj_dict_make_new(const mp_obj_type_t *type, size_t n_args, size_t n_kw, const mp_obj_t *args);
void mp_obj_dict_init(mp_obj_dict_t *dict, size_t n_args);
size_t mp_obj_dict_len(mp_obj_t self_in);
mp_obj_t mp_obj_dict_get(mp_obj_t self_in, mp_obj_t index);
mp_obj_t mp_obj_dict_store(mp_obj_t self_in, mp_obj_t key, mp_obj_t value);
mp_obj_t mp_obj_dict_delete(mp_obj_t self_in, mp_obj_t key);
mp_obj_t mp_obj_dict_copy(mp_obj_t self_in);
static inline mp_map_t *mp_obj_dict_get_map(mp_obj_t dict) {
    return &((mp_obj_dict_t *)((void *)dict))->map;
}


void mp_obj_set_store(mp_obj_t self_in, mp_obj_t item);


typedef struct {
    mp_int_t start;
    mp_int_t stop;
    mp_int_t step;
} mp_bound_slice_t;


typedef struct _mp_obj_slice_t {
    mp_obj_base_t base;
    mp_obj_t start;
    mp_obj_t stop;
    mp_obj_t step;
} mp_obj_slice_t;
void mp_obj_slice_indices(mp_obj_t self_in, mp_int_t length, mp_bound_slice_t *result);



typedef struct _mp_obj_fun_builtin_fixed_t {
    mp_obj_base_t base;
    union {
        mp_fun_0_t _0;
        mp_fun_1_t _1;
        mp_fun_2_t _2;
        mp_fun_3_t _3;
    } fun;
} mp_obj_fun_builtin_fixed_t;

typedef struct _mp_obj_fun_builtin_var_t {
    mp_obj_base_t base;
    uint32_t sig;
    union {
        mp_fun_var_t var;
        mp_fun_kw_t kw;
    } fun;
} mp_obj_fun_builtin_var_t;

qstr mp_obj_fun_get_name(mp_const_obj_t fun);

mp_obj_t mp_identity(mp_obj_t self);
extern const mp_obj_fun_builtin_fixed_t mp_identity_obj;
mp_obj_t mp_identity_getiter(mp_obj_t self, mp_obj_iter_buf_t *iter_buf);


typedef struct _mp_obj_module_t {
    mp_obj_base_t base;
    mp_obj_dict_t *globals;
} mp_obj_module_t;
static inline mp_obj_dict_t *mp_obj_module_get_globals(mp_obj_t module) {
    return ((mp_obj_module_t *)((void *)module))->globals;
}

_Bool mp_obj_is_package(mp_obj_t module);



typedef struct _mp_obj_static_class_method_t {
    mp_obj_base_t base;
    mp_obj_t fun;
} mp_obj_static_class_method_t;
typedef struct _mp_rom_obj_static_class_method_t {
    mp_obj_base_t base;
    mp_rom_obj_t fun;
} mp_rom_obj_static_class_method_t;


const mp_obj_t *mp_obj_property_get(mp_obj_t self_in);



void mp_seq_multiply(const void *items, size_t item_sz, size_t len, size_t times, void *dest);

_Bool mp_seq_get_fast_slice_indexes(mp_uint_t len, mp_obj_t slice, mp_bound_slice_t *indexes);



_Bool mp_seq_cmp_bytes(mp_uint_t op, const byte *data1, size_t len1, const byte *data2, size_t len2);
_Bool mp_seq_cmp_objs(mp_uint_t op, const mp_obj_t *items1, size_t len1, const mp_obj_t *items2, size_t len2);
mp_obj_t mp_seq_index_obj(const mp_obj_t *items, size_t len, size_t n_args, const mp_obj_t *args);
mp_obj_t mp_seq_count_obj(const mp_obj_t *items, size_t len, mp_obj_t value);
mp_obj_t mp_seq_extract_slice(size_t len, const mp_obj_t *seq, mp_bound_slice_t *indexes);
# 28 "./mphalport.h" 2
# 1 "../../shared/runtime/interrupt_char.h" 1
# 29 "../../shared/runtime/interrupt_char.h"
extern int mp_interrupt_char;
void mp_hal_set_interrupt_char(int c);
# 29 "./mphalport.h" 2


void mp_hal_stdout_tx_strn(const char *str, size_t len);

void mp_hal_delay_ms(mp_uint_t ms);
void mp_hal_delay_us(mp_uint_t us);
mp_uint_t mp_hal_ticks_ms(void);
mp_uint_t mp_hal_ticks_us(void);
mp_uint_t mp_hal_ticks_cpu(void);

int mp_hal_get_interrupt_char(void);
# 36 "../../py/mphal.h" 2



uintptr_t mp_hal_stdio_poll(uintptr_t poll_flags);







void mp_hal_stdout_tx_str(const char *str);



void mp_hal_stdout_tx_strn(const char *str, size_t len);



void mp_hal_stdout_tx_strn_cooked(const char *str, size_t len);



void mp_hal_delay_ms(mp_uint_t ms);



void mp_hal_delay_us(mp_uint_t us);



mp_uint_t mp_hal_ticks_ms(void);



mp_uint_t mp_hal_ticks_us(void);



mp_uint_t mp_hal_ticks_cpu(void);




uint64_t mp_hal_time_ns(void);
# 90 "../../py/mphal.h"
# 1 "../../extmod/virtpin.h" 1
# 37 "../../extmod/virtpin.h"
typedef struct _mp_pin_p_t {
    mp_uint_t (*ioctl)(mp_obj_t obj, mp_uint_t request, uintptr_t arg, int *errcode);
} mp_pin_p_t;

int mp_virtual_pin_read(mp_obj_t pin);
void mp_virtual_pin_write(mp_obj_t pin, int value);


mp_obj_t mp_pin_make_new(const mp_obj_type_t *type, size_t n_args, size_t n_kw, const mp_obj_t *args);
# 91 "../../py/mphal.h" 2
# 5 "../../extmod/tulip/polyfills.h" 2
# 1 "../../extmod/amy/src/amy.h" 1





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/stddef.h" 1 3
# 7 "../../extmod/amy/src/amy.h" 2




# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/unistd.h" 1 3
# 43 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/unistd.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 1 3
# 44 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/unistd.h" 2 3

int pipe(int [2]);
int pipe2(int [2], int);
int close(int);
int posix_close(int, int);
int dup(int);
int dup2(int, int);
int dup3(int, int, int);
off_t lseek(int, off_t, int);
int fsync(int);
int fdatasync(int);

ssize_t read(int, void *, size_t);
ssize_t write(int, const void *, size_t);
ssize_t pread(int, void *, size_t, off_t);
ssize_t pwrite(int, const void *, size_t, off_t);

int chown(const char *, uid_t, gid_t);
int fchown(int, uid_t, gid_t);
int lchown(const char *, uid_t, gid_t);
int fchownat(int, const char *, uid_t, gid_t, int);

int link(const char *, const char *);
int linkat(int, const char *, int, const char *, int);
int symlink(const char *, const char *);
int symlinkat(const char *, int, const char *);
ssize_t readlink(const char *restrict, char *restrict, size_t);
ssize_t readlinkat(int, const char *restrict, char *restrict, size_t);
int unlink(const char *);
int unlinkat(int, const char *, int);
int rmdir(const char *);
int truncate(const char *, off_t);
int ftruncate(int, off_t);






int access(const char *, int);
int faccessat(int, const char *, int, int);

int chdir(const char *);
int fchdir(int);
char *getcwd(char *, size_t);

unsigned alarm(unsigned);
unsigned sleep(unsigned);
int pause(void);

pid_t fork(void);
pid_t _Fork(void);
int execve(const char *, char *const [], char *const []);
int execv(const char *, char *const []);
int execle(const char *, const char *, ...);
int execl(const char *, const char *, ...);
int execvp(const char *, char *const []);
int execlp(const char *, const char *, ...);
int fexecve(int, char *const [], char *const []);
__attribute__((__noreturn__)) void _exit(int);

pid_t getpid(void);
pid_t getppid(void);
pid_t getpgrp(void);
pid_t getpgid(pid_t);
int setpgid(pid_t, pid_t);
pid_t setsid(void);
pid_t getsid(pid_t);
char *ttyname(int);
int ttyname_r(int, char *, size_t);
int isatty(int);
pid_t tcgetpgrp(int);
int tcsetpgrp(int, pid_t);

uid_t getuid(void);
uid_t geteuid(void);
gid_t getgid(void);
gid_t getegid(void);
int getgroups(int, gid_t []);
int setuid(uid_t);
int seteuid(uid_t);
int setgid(gid_t);
int setegid(gid_t);

char *getlogin(void);
int getlogin_r(char *, size_t);
int gethostname(char *, size_t);
char *ctermid(char *);

int getopt(int, char * const [], const char *);
extern char *optarg;
extern int optind, opterr, optopt;

long pathconf(const char *, int);
long fpathconf(int, int);
long sysconf(int);
size_t confstr(int, char *, size_t);
# 284 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/unistd.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/posix.h" 1 3
# 285 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/unistd.h" 2 3
# 12 "../../extmod/amy/src/amy.h" 2
# 1 "../../extmod/tulip/polyfills.h" 1




# 1 "../../extmod/amy/src/amy.h" 1
# 6 "../../extmod/tulip/polyfills.h" 2






# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/sys/time.h" 1 3








# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/sys/select.h" 1 3
# 16 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/sys/select.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 1 3
# 307 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
struct timeval { time_t tv_sec; suseconds_t tv_usec; };




struct timespec { time_t tv_sec; long tv_nsec; };
# 416 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 3
typedef struct __sigset_t { unsigned long __bits[128/sizeof(long)]; } sigset_t;
# 17 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/sys/select.h" 2 3



typedef unsigned long fd_mask;

typedef struct {
 unsigned long fds_bits[1024 / 8 / sizeof(long)];
} fd_set;






int select (int, fd_set *restrict, fd_set *restrict, fd_set *restrict, struct timeval *restrict);
int pselect (int, fd_set *restrict, fd_set *restrict, fd_set *restrict, const struct timespec *restrict, const sigset_t *restrict);
# 10 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/sys/time.h" 2 3

int gettimeofday (struct timeval *restrict, void *restrict);





struct itimerval {
 struct timeval it_interval;
 struct timeval it_value;
};

int getitimer (int, struct itimerval *);
int setitimer (int, const struct itimerval *restrict, struct itimerval *restrict);
int utimes (const char *, const struct timeval [2]);
# 13 "../../extmod/tulip/polyfills.h" 2








void take_semaphore();
int64_t get_time_ms();
int64_t get_ticks_ms();
int64_t get_time_us();
void * malloc_caps(uint32_t size, uint32_t flags);
void *calloc_caps(uint32_t align, uint32_t count, uint32_t size, uint32_t flags);
void *realloc_caps(void* ptr, uint32_t size, uint32_t caps);
void free_caps(void *ptr);
float compute_cpu_usage(uint8_t debug);
void delay_ms(uint32_t ms);
# 13 "../../extmod/amy/src/amy.h" 2
# 31 "../../extmod/amy/src/amy.h"
typedef int16_t output_sample_type;
# 91 "../../extmod/amy/src/amy.h"
typedef int amy_err_t;
# 102 "../../extmod/amy/src/amy.h"
enum params{
    WAVE, PATCH, MIDI_NOTE, AMP, DUTY, FEEDBACK, FREQ, VELOCITY, PHASE, DETUNE, VOLUME, FILTER_FREQ, RATIO, RESONANCE,
    MOD_SOURCE, MOD_TARGET, FILTER_TYPE, EQ_L, EQ_M, EQ_H, BP0_TARGET, BP1_TARGET, BP2_TARGET, ALGORITHM, LATENCY,
    ALGO_SOURCE_START=30,
    ALGO_SOURCE_END=30+6,
    BP_START=ALGO_SOURCE_END+1,
    BP_END=BP_START + (3 * 8 * 2),
    NO_PARAM
};



struct delta {
    uint32_t data;
    enum params param;
    uint32_t time;
    int8_t osc;
    struct delta * next;
};



struct event {

    int64_t time;
    int8_t osc;
    int16_t wave;
    int16_t patch;
    int16_t midi_note;
    float amp;
    float duty;
    float feedback;
    float freq;
    uint8_t status;
    float velocity;
    float phase;
    float detune;
    float step;
    float substep;
    float sample;
    float volume;
    int16_t latency_ms;
    float filter_freq;
    float ratio;
    float resonance;
    int8_t mod_source;
    int8_t mod_target;
    int8_t algorithm;
    int8_t filter_type;
    int8_t algo_source[6];

    int64_t note_on_clock;
    int64_t note_off_clock;
    int16_t breakpoint_target[3];
    int32_t breakpoint_times[3][8];
    float breakpoint_values[3][8];
    float last_scale[3];


    float lpf_state;

    float dc_offset;

    float lpf_alpha;

    float last_amp;

    const float *lut;
    int16_t lut_size;
    float eq_l;
    float eq_m;
    float eq_h;

    float last_two[2];
};


struct mod_event {
    float amp;
    float duty;
    float freq;
    float filter_freq;
    float resonance;
    float feedback;
};


void (*amy_parse_callback)(char,char*);

struct event amy_default_event();
void amy_add_event(struct event e);
void render_task(uint8_t start, uint8_t end, uint8_t core);
void show_debug(uint8_t type) ;
void oscs_deinit() ;
int64_t amy_sysclock();
float freq_for_midi_note(uint8_t midi_note);
int8_t check_init(amy_err_t (*fn)(), char *name);
void amy_increase_volume();
void amy_decrease_volume();



struct state {
    float volume;

    float hpf_state;
    float eq[3];
    uint16_t event_qsize;
    int16_t next_event_write;
    struct delta * event_start;
    int16_t latency_ms;
};


extern float coeffs[64][5];
extern float delay[64][2];
extern int64_t total_samples;
extern struct event *synth;
extern struct mod_event *msynth;
extern struct state global;


int8_t oscs_init();
void parse_breakpoint(struct event * e, char* message, uint8_t bp_set) ;
void parse_algorithm(struct event * e, char* message) ;
void hold_and_modify(uint8_t osc) ;
int16_t * fill_audio_buffer_task();
int32_t ms_to_samples(int32_t ms) ;



void amy_play_message(char *message);
struct event amy_parse_message(char * message);
void amy_start();
void amy_stop();
void amy_live_start();
void amy_live_stop();
void amy_reset_oscs();
void amy_print_devices();


extern float render_am_lut(float * buf, float step, float skip, float incoming_amp, float ending_amp, const float* lut, int16_t lut_size, float *mod, float bandwidth);
extern void ks_init();
extern void ks_deinit();
extern void algo_init();
extern void pcm_init();
extern void render_ks(float * buf, uint8_t osc);
extern void render_sine(float * buf, uint8_t osc);
extern void render_fm_sine(float *buf, uint8_t osc, float *mod, float feedback_level, uint8_t algo_osc);
extern void render_pulse(float * buf, uint8_t osc);
extern void render_saw_down(float * buf, uint8_t osc);
extern void render_saw_up(float * buf, uint8_t osc);
extern void render_triangle(float * buf, uint8_t osc);
extern void render_noise(float * buf, uint8_t osc);
extern void render_pcm(float * buf, uint8_t osc);
extern void render_algo(float * buf, uint8_t osc) ;
extern void render_partial(float *buf, uint8_t osc) ;
extern void partials_note_on(uint8_t osc);
extern void partials_note_off(uint8_t osc);
extern void render_partials(float *buf, uint8_t osc);

extern float compute_mod_pulse(uint8_t osc);
extern float compute_mod_noise(uint8_t osc);
extern float compute_mod_sine(uint8_t osc);
extern float compute_mod_saw_up(uint8_t osc);
extern float compute_mod_saw_down(uint8_t osc);
extern float compute_mod_triangle(uint8_t osc);
extern float compute_mod_pcm(uint8_t osc);

extern void ks_note_on(uint8_t osc);
extern void ks_note_off(uint8_t osc);
extern void sine_note_on(uint8_t osc);
extern void fm_sine_note_on(uint8_t osc, uint8_t algo_osc);
extern void saw_down_note_on(uint8_t osc);
extern void saw_up_note_on(uint8_t osc);
extern void triangle_note_on(uint8_t osc);
extern void pulse_note_on(uint8_t osc);
extern void pcm_note_on(uint8_t osc);
extern void pcm_note_off(uint8_t osc);
extern void partial_note_on(uint8_t osc);
extern void partial_note_off(uint8_t osc);
extern void algo_note_on(uint8_t osc);
extern void algo_note_off(uint8_t osc) ;
extern void sine_mod_trigger(uint8_t osc);
extern void saw_down_mod_trigger(uint8_t osc);
extern void saw_up_mod_trigger(uint8_t osc);
extern void triangle_mod_trigger(uint8_t osc);
extern void pulse_mod_trigger(uint8_t osc);
extern void pcm_mod_trigger(uint8_t osc);
extern float amy_get_random();


extern void filters_init();
extern void filters_deinit();
extern void filter_process(float * block, uint8_t osc);
extern void parametric_eq_process(float *block);
extern void update_filter(uint8_t osc);
extern float dsps_sqrtf_f32_ansi(float f);
extern int8_t dsps_biquad_gen_lpf_f32(float *coeffs, float f, float qFactor);
extern int8_t dsps_biquad_f32_ansi(const float *input, float *output, int len, float *coef, float *w);
# 311 "../../extmod/amy/src/amy.h"
extern float compute_breakpoint_scale(uint8_t osc, uint8_t bp_set);
extern float compute_mod_scale(uint8_t osc);
extern void retrigger_mod_source(uint8_t osc);
# 6 "../../extmod/tulip/polyfills.h" 2
# 21 "../../extmod/tulip/polyfills.h"
void take_semaphore();
int64_t get_time_ms();
int64_t get_ticks_ms();
int64_t get_time_us();
void * malloc_caps(uint32_t size, uint32_t flags);
void *calloc_caps(uint32_t align, uint32_t count, uint32_t size, uint32_t flags);
void *realloc_caps(void* ptr, uint32_t size, uint32_t caps);
void free_caps(void *ptr);
float compute_cpu_usage(uint8_t debug);
void delay_ms(uint32_t ms);
# 4 "unix_display.c" 2
# 1 "../../extmod/tulip/display.h" 1






# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/compat/time.h" 1 3







int dysize(int year);







# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/time.h" 1 3
# 31 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/time.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 1 3
# 32 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/time.h" 2 3






struct tm {
 int tm_sec;
 int tm_min;
 int tm_hour;
 int tm_mday;
 int tm_mon;
 int tm_year;
 int tm_wday;
 int tm_yday;
 int tm_isdst;
 long __tm_gmtoff;
 const char *__tm_zone;
};

clock_t clock (void);
time_t time (time_t *);
double difftime (time_t, time_t);
time_t mktime (struct tm *);
size_t strftime (char *restrict, size_t, const char *restrict, const struct tm *restrict);
struct tm *gmtime (const time_t *);
struct tm *localtime (const time_t *);
char *asctime (const struct tm *);
char *ctime (const time_t *);
int timespec_get(struct timespec *, int);
# 17 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/compat/time.h" 2 3
# 8 "../../extmod/tulip/display.h" 2

# 1 "../../extmod/tulip/lodepng.h" 1
# 31 "../../extmod/tulip/lodepng.h"
extern const char* LODEPNG_VERSION_STRING;
# 99 "../../extmod/tulip/lodepng.h"
typedef enum LodePNGColorType {
  LCT_GREY = 0,
  LCT_RGB = 2,
  LCT_PALETTE = 3,
  LCT_GREY_ALPHA = 4,
  LCT_RGBA = 6,





  LCT_MAX_OCTET_VALUE = 255
} LodePNGColorType;
# 129 "../../extmod/tulip/lodepng.h"
unsigned lodepng_decode_memory(unsigned char** out, unsigned* w, unsigned* h,
                               const unsigned char* in, size_t insize,
                               LodePNGColorType colortype, unsigned bitdepth);


unsigned lodepng_decode32(unsigned char** out, unsigned* w, unsigned* h,
                          const unsigned char* in, size_t insize);


unsigned lodepng_decode24(unsigned char** out, unsigned* w, unsigned* h,
                          const unsigned char* in, size_t insize);
# 148 "../../extmod/tulip/lodepng.h"
unsigned lodepng_decode_file(unsigned char** out, unsigned* w, unsigned* h,
                             const char* filename,
                             LodePNGColorType colortype, unsigned bitdepth);





unsigned lodepng_decode32_file(unsigned char** out, unsigned* w, unsigned* h,
                               const char* filename);





unsigned lodepng_decode24_file(unsigned char** out, unsigned* w, unsigned* h,
                               const char* filename);
# 186 "../../extmod/tulip/lodepng.h"
unsigned lodepng_encode_memory(unsigned char** out, size_t* outsize,
                               const unsigned char* image, unsigned w, unsigned h,
                               LodePNGColorType colortype, unsigned bitdepth);


unsigned lodepng_encode32(unsigned char** out, size_t* outsize,
                          const unsigned char* image, unsigned w, unsigned h);


unsigned lodepng_encode24(unsigned char** out, size_t* outsize,
                          const unsigned char* image, unsigned w, unsigned h);
# 207 "../../extmod/tulip/lodepng.h"
unsigned lodepng_encode_file(const char* filename,
                             const unsigned char* image, unsigned w, unsigned h,
                             LodePNGColorType colortype, unsigned bitdepth);





unsigned lodepng_encode32_file(const char* filename,
                               const unsigned char* image, unsigned w, unsigned h);





unsigned lodepng_encode24_file(const char* filename,
                               const unsigned char* image, unsigned w, unsigned h);
# 286 "../../extmod/tulip/lodepng.h"
const char* lodepng_error_text(unsigned code);




typedef struct LodePNGDecompressSettings LodePNGDecompressSettings;
struct LodePNGDecompressSettings {

  unsigned ignore_adler32;
  unsigned ignore_nlen;






  size_t max_output_size;



  unsigned (*custom_zlib)(unsigned char**, size_t*,
                          const unsigned char*, size_t,
                          const LodePNGDecompressSettings*);



  unsigned (*custom_inflate)(unsigned char**, size_t*,
                             const unsigned char*, size_t,
                             const LodePNGDecompressSettings*);

  const void* custom_context;
};

extern const LodePNGDecompressSettings lodepng_default_decompress_settings;
void lodepng_decompress_settings_init(LodePNGDecompressSettings* settings);







typedef struct LodePNGCompressSettings LodePNGCompressSettings;
struct LodePNGCompressSettings {

  unsigned btype;
  unsigned use_lz77;
  unsigned windowsize;
  unsigned minmatch;
  unsigned nicematch;
  unsigned lazymatching;


  unsigned (*custom_zlib)(unsigned char**, size_t*,
                          const unsigned char*, size_t,
                          const LodePNGCompressSettings*);



  unsigned (*custom_deflate)(unsigned char**, size_t*,
                             const unsigned char*, size_t,
                             const LodePNGCompressSettings*);

  const void* custom_context;
};

extern const LodePNGCompressSettings lodepng_default_compress_settings;
void lodepng_compress_settings_init(LodePNGCompressSettings* settings);
# 362 "../../extmod/tulip/lodepng.h"
typedef struct LodePNGColorMode {

  LodePNGColorType colortype;
  unsigned bitdepth;
# 382 "../../extmod/tulip/lodepng.h"
  unsigned char* palette;
  size_t palettesize;
# 396 "../../extmod/tulip/lodepng.h"
  unsigned key_defined;
  unsigned key_r;
  unsigned key_g;
  unsigned key_b;
} LodePNGColorMode;


void lodepng_color_mode_init(LodePNGColorMode* info);
void lodepng_color_mode_cleanup(LodePNGColorMode* info);

unsigned lodepng_color_mode_copy(LodePNGColorMode* dest, const LodePNGColorMode* source);

LodePNGColorMode lodepng_color_mode_make(LodePNGColorType colortype, unsigned bitdepth);

void lodepng_palette_clear(LodePNGColorMode* info);

unsigned lodepng_palette_add(LodePNGColorMode* info,
                             unsigned char r, unsigned char g, unsigned char b, unsigned char a);


unsigned lodepng_get_bpp(const LodePNGColorMode* info);


unsigned lodepng_get_channels(const LodePNGColorMode* info);

unsigned lodepng_is_greyscale_type(const LodePNGColorMode* info);

unsigned lodepng_is_alpha_type(const LodePNGColorMode* info);

unsigned lodepng_is_palette_type(const LodePNGColorMode* info);


unsigned lodepng_has_palette_alpha(const LodePNGColorMode* info);







unsigned lodepng_can_have_alpha(const LodePNGColorMode* info);

size_t lodepng_get_raw_size(unsigned w, unsigned h, const LodePNGColorMode* color);



typedef struct LodePNGTime {
  unsigned year;
  unsigned month;
  unsigned day;
  unsigned hour;
  unsigned minute;
  unsigned second;
} LodePNGTime;



typedef struct LodePNGInfo {

  unsigned compression_method;
  unsigned filter_method;
  unsigned interlace_method;
  LodePNGColorMode color;
# 484 "../../extmod/tulip/lodepng.h"
  unsigned background_defined;
  unsigned background_r;
  unsigned background_g;
  unsigned background_b;
# 509 "../../extmod/tulip/lodepng.h"
  size_t text_num;
  char** text_keys;
  char** text_strings;
# 521 "../../extmod/tulip/lodepng.h"
  size_t itext_num;
  char** itext_keys;
  char** itext_langtags;
  char** itext_transkeys;
  char** itext_strings;


  unsigned time_defined;
  LodePNGTime time;


  unsigned phys_defined;
  unsigned phys_x;
  unsigned phys_y;
  unsigned phys_unit;
# 548 "../../extmod/tulip/lodepng.h"
  unsigned gama_defined;
  unsigned gama_gamma;


  unsigned chrm_defined;
  unsigned chrm_white_x;
  unsigned chrm_white_y;
  unsigned chrm_red_x;
  unsigned chrm_red_y;
  unsigned chrm_green_x;
  unsigned chrm_green_y;
  unsigned chrm_blue_x;
  unsigned chrm_blue_y;






  unsigned srgb_defined;
  unsigned srgb_intent;
# 591 "../../extmod/tulip/lodepng.h"
  unsigned iccp_defined;
  char* iccp_name;





  unsigned char* iccp_profile;
  unsigned iccp_profile_size;
# 621 "../../extmod/tulip/lodepng.h"
  unsigned char* unknown_chunks_data[3];
  size_t unknown_chunks_size[3];

} LodePNGInfo;


void lodepng_info_init(LodePNGInfo* info);
void lodepng_info_cleanup(LodePNGInfo* info);

unsigned lodepng_info_copy(LodePNGInfo* dest, const LodePNGInfo* source);


unsigned lodepng_add_text(LodePNGInfo* info, const char* key, const char* str);
void lodepng_clear_text(LodePNGInfo* info);

unsigned lodepng_add_itext(LodePNGInfo* info, const char* key, const char* langtag,
                           const char* transkey, const char* str);
void lodepng_clear_itext(LodePNGInfo* info);


unsigned lodepng_set_icc(LodePNGInfo* info, const char* name, const unsigned char* profile, unsigned profile_size);
void lodepng_clear_icc(LodePNGInfo* info);
# 656 "../../extmod/tulip/lodepng.h"
unsigned lodepng_convert(unsigned char* out, const unsigned char* in,
                         const LodePNGColorMode* mode_out, const LodePNGColorMode* mode_in,
                         unsigned w, unsigned h);






typedef struct LodePNGDecoderSettings {
  LodePNGDecompressSettings zlibsettings;


  unsigned ignore_crc;
  unsigned ignore_critical;
  unsigned ignore_end;





  unsigned color_convert;


  unsigned read_text_chunks;


  unsigned remember_unknown_chunks;




  size_t max_text_size;




  size_t max_icc_size;

} LodePNGDecoderSettings;

void lodepng_decoder_settings_init(LodePNGDecoderSettings* settings);




typedef enum LodePNGFilterStrategy {

  LFS_ZERO = 0,

  LFS_ONE = 1,
  LFS_TWO = 2,
  LFS_THREE = 3,
  LFS_FOUR = 4,

  LFS_MINSUM,


  LFS_ENTROPY,




  LFS_BRUTE_FORCE,

  LFS_PREDEFINED
} LodePNGFilterStrategy;




typedef struct LodePNGColorStats {
  unsigned colored;
  unsigned key;
  unsigned short key_r;
  unsigned short key_g;
  unsigned short key_b;
  unsigned alpha;
  unsigned numcolors;
  unsigned char palette[1024];
  unsigned bits;
  size_t numpixels;


  unsigned allow_palette;
  unsigned allow_greyscale;
} LodePNGColorStats;

void lodepng_color_stats_init(LodePNGColorStats* stats);



unsigned lodepng_compute_color_stats(LodePNGColorStats* stats,
                                     const unsigned char* image, unsigned w, unsigned h,
                                     const LodePNGColorMode* mode_in);


typedef struct LodePNGEncoderSettings {
  LodePNGCompressSettings zlibsettings;

  unsigned auto_convert;





  unsigned filter_palette_zero;


  LodePNGFilterStrategy filter_strategy;




  const unsigned char* predefined_filters;



  unsigned force_palette;


  unsigned add_id;

  unsigned text_compression;

} LodePNGEncoderSettings;

void lodepng_encoder_settings_init(LodePNGEncoderSettings* settings);





typedef struct LodePNGState {

  LodePNGDecoderSettings decoder;


  LodePNGEncoderSettings encoder;

  LodePNGColorMode info_raw;
  LodePNGInfo info_png;
  unsigned error;
} LodePNGState;


void lodepng_state_init(LodePNGState* state);
void lodepng_state_cleanup(LodePNGState* state);
void lodepng_state_copy(LodePNGState* dest, const LodePNGState* source);







unsigned lodepng_decode(unsigned char** out, unsigned* w, unsigned* h,
                        LodePNGState* state,
                        const unsigned char* in, size_t insize);






unsigned lodepng_inspect(unsigned* w, unsigned* h,
                         LodePNGState* state,
                         const unsigned char* in, size_t insize);
# 838 "../../extmod/tulip/lodepng.h"
unsigned lodepng_inspect_chunk(LodePNGState* state, size_t pos,
                               const unsigned char* in, size_t insize);



unsigned lodepng_encode(unsigned char** out, size_t* outsize,
                        const unsigned char* image, unsigned w, unsigned h,
                        LodePNGState* state);
# 877 "../../extmod/tulip/lodepng.h"
unsigned lodepng_chunk_length(const unsigned char* chunk);


void lodepng_chunk_type(char type[5], const unsigned char* chunk);


unsigned char lodepng_chunk_type_equals(const unsigned char* chunk, const char* type);


unsigned char lodepng_chunk_ancillary(const unsigned char* chunk);


unsigned char lodepng_chunk_private(const unsigned char* chunk);


unsigned char lodepng_chunk_safetocopy(const unsigned char* chunk);


unsigned char* lodepng_chunk_data(unsigned char* chunk);
const unsigned char* lodepng_chunk_data_const(const unsigned char* chunk);


unsigned lodepng_chunk_check_crc(const unsigned char* chunk);


void lodepng_chunk_generate_crc(unsigned char* chunk);
# 915 "../../extmod/tulip/lodepng.h"
unsigned char* lodepng_chunk_next(unsigned char* chunk, unsigned char* end);
const unsigned char* lodepng_chunk_next_const(const unsigned char* chunk, const unsigned char* end);


unsigned char* lodepng_chunk_find(unsigned char* chunk, unsigned char* end, const char type[5]);
const unsigned char* lodepng_chunk_find_const(const unsigned char* chunk, const unsigned char* end, const char type[5]);






unsigned lodepng_chunk_append(unsigned char** out, size_t* outsize, const unsigned char* chunk);







unsigned lodepng_chunk_create(unsigned char** out, size_t* outsize, unsigned length,
                              const char* type, const unsigned char* data);



unsigned lodepng_crc32(const unsigned char* buf, size_t len);
# 953 "../../extmod/tulip/lodepng.h"
unsigned lodepng_inflate(unsigned char** out, size_t* outsize,
                         const unsigned char* in, size_t insize,
                         const LodePNGDecompressSettings* settings);







unsigned lodepng_zlib_decompress(unsigned char** out, size_t* outsize,
                                 const unsigned char* in, size_t insize,
                                 const LodePNGDecompressSettings* settings);
# 976 "../../extmod/tulip/lodepng.h"
unsigned lodepng_zlib_compress(unsigned char** out, size_t* outsize,
                               const unsigned char* in, size_t insize,
                               const LodePNGCompressSettings* settings);





unsigned lodepng_huffman_code_lengths(unsigned* lengths, const unsigned* frequencies,
                                      size_t numcodes, unsigned maxbitlen);


unsigned lodepng_deflate(unsigned char** out, size_t* outsize,
                         const unsigned char* in, size_t insize,
                         const LodePNGCompressSettings* settings);
# 1007 "../../extmod/tulip/lodepng.h"
unsigned lodepng_load_file(unsigned char** out, size_t* outsize, const char* filename);
# 1020 "../../extmod/tulip/lodepng.h"
unsigned lodepng_save_file(const unsigned char* buffer, size_t buffersize, const char* filename);
# 10 "../../extmod/tulip/display.h" 2
# 1 "../../extmod/tulip/tulip_helpers.h" 1

# 1 "../../py/runtime.h" 1
# 29 "../../py/runtime.h"
# 1 "../../py/mpstate.h" 1
# 32 "../../py/mpstate.h"
# 1 "../../py/mpthread.h" 1
# 33 "../../py/mpstate.h" 2

# 1 "../../py/nlr.h" 1
# 32 "../../py/nlr.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/limits.h" 1 3
# 21 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/limits.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/limits.h" 1 3





# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/alltypes.h" 1 3
# 7 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/limits.h" 2 3
# 22 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/limits.h" 2 3
# 33 "../../py/nlr.h" 2
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/assert.h" 1 3
# 19 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/assert.h" 3
__attribute__((__noreturn__)) void __assert_fail (const char *, const char *, int, const char *);
# 34 "../../py/nlr.h" 2
# 95 "../../py/nlr.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/setjmp.h" 1 3
# 10 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/setjmp.h" 3
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/bits/setjmp.h" 1 3
typedef unsigned long __jmp_buf[6];
# 11 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/setjmp.h" 2 3

typedef struct __jmp_buf_tag {
 __jmp_buf __jb;
 unsigned long __fl;
 unsigned long __ss[128/sizeof(long)];
} jmp_buf[1];
# 38 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/cache/sysroot/include/setjmp.h" 3
int setjmp (jmp_buf);
__attribute__((__noreturn__)) void longjmp (jmp_buf, int);
# 96 "../../py/nlr.h" 2


typedef struct _nlr_buf_t nlr_buf_t;
struct _nlr_buf_t {

    nlr_buf_t *prev;
    void *ret_val;


    jmp_buf jmpbuf;





    void *pystack;

};
# 144 "../../py/nlr.h"
unsigned int nlr_push_tail(nlr_buf_t *top);
void nlr_pop(void);
__attribute__((noreturn)) void nlr_jump(void *val);




__attribute__((noreturn)) void nlr_jump_fail(void *val);
# 35 "../../py/mpstate.h" 2

# 1 "../../py/objlist.h" 1
# 31 "../../py/objlist.h"
typedef struct _mp_obj_list_t {
    mp_obj_base_t base;
    size_t alloc;
    size_t len;
    mp_obj_t *items;
} mp_obj_list_t;

void mp_obj_list_init(mp_obj_list_t *o, size_t n);
# 37 "../../py/mpstate.h" 2
# 1 "../../py/objexcept.h" 1
# 30 "../../py/objexcept.h"
# 1 "../../py/objtuple.h" 1
# 31 "../../py/objtuple.h"
typedef struct _mp_obj_tuple_t {
    mp_obj_base_t base;
    size_t len;
    mp_obj_t items[];
} mp_obj_tuple_t;

typedef struct _mp_rom_obj_tuple_t {
    mp_obj_base_t base;
    size_t len;
    mp_rom_obj_t items[];
} mp_rom_obj_tuple_t;

void mp_obj_tuple_print(const mp_print_t *print, mp_obj_t o_in, mp_print_kind_t kind);
mp_obj_t mp_obj_tuple_unary_op(mp_unary_op_t op, mp_obj_t self_in);
mp_obj_t mp_obj_tuple_binary_op(mp_binary_op_t op, mp_obj_t lhs, mp_obj_t rhs);
mp_obj_t mp_obj_tuple_subscr(mp_obj_t base, mp_obj_t index, mp_obj_t value);
mp_obj_t mp_obj_tuple_getiter(mp_obj_t o_in, mp_obj_iter_buf_t *iter_buf);

extern const mp_obj_type_t mp_type_attrtuple;
# 59 "../../py/objtuple.h"
void mp_obj_attrtuple_print_helper(const mp_print_t *print, const qstr *fields, mp_obj_tuple_t *o);


mp_obj_t mp_obj_new_attrtuple(const qstr *fields, size_t n, const mp_obj_t *items);
# 31 "../../py/objexcept.h" 2

typedef struct _mp_obj_exception_t {
    mp_obj_base_t base;
    size_t traceback_alloc : (8 * sizeof(size_t) / 2);
    size_t traceback_len : (8 * sizeof(size_t) / 2);
    size_t *traceback_data;
    mp_obj_tuple_t *args;
} mp_obj_exception_t;

void mp_obj_exception_print(const mp_print_t *print, mp_obj_t o_in, mp_print_kind_t kind);
void mp_obj_exception_attr(mp_obj_t self_in, qstr attr, mp_obj_t *dest);
# 38 "../../py/mpstate.h" 2





enum {







    MP_SYS_MUTABLE_NUM,
};
# 70 "../../py/mpstate.h"
typedef struct _mp_sched_item_t {
    mp_obj_t func;
    mp_obj_t arg;
} mp_sched_item_t;


typedef struct _mp_state_mem_t {






    byte *gc_alloc_table_start;
    size_t gc_alloc_table_byte_len;



    byte *gc_pool_start;
    byte *gc_pool_end;

    int gc_stack_overflow;
    size_t gc_stack[(64)];




    uint16_t gc_auto_collect_enabled;


    size_t gc_alloc_amount;
    size_t gc_alloc_threshold;


    size_t gc_last_free_atb_index;
# 114 "../../py/mpstate.h"
} mp_state_mem_t;



typedef struct _mp_state_vm_t {







    qstr_pool_t *last_pool;






    mp_obj_exception_t mp_emergency_exception_obj;
# 148 "../../py/mpstate.h"
    mp_obj_exception_t mp_kbd_exception;



    mp_obj_dict_t mp_loaded_modules_dict;


    mp_sched_item_t sched_queue[(1)];
# 169 "../../py/mpstate.h"
    mp_obj_dict_t dict_main;




    mp_obj_list_t mp_sys_path_obj;
    mp_obj_list_t mp_sys_argv_obj;
# 185 "../../py/mpstate.h"
    mp_obj_dict_t *mp_module_builtins_override_dict;
# 194 "../../py/mpstate.h"
    const char *readline_hist[8];




    vstr_t *repl_line;
# 225 "../../py/mpstate.h"
    char *qstr_last_chunk;
    size_t qstr_last_alloc;
    size_t qstr_last_used;







    mp_uint_t mp_optimise_value;
# 247 "../../py/mpstate.h"
    volatile int16_t sched_state;
# 258 "../../py/mpstate.h"
    uint8_t sched_len;
    uint8_t sched_idx;
# 271 "../../py/mpstate.h"
} mp_state_vm_t;



typedef struct _mp_state_thread_t {

    char *stack_top;






    uint8_t *pystack_start;
    uint8_t *pystack_end;
    uint8_t *pystack_cur;



    uint16_t gc_lock_depth;







    mp_obj_dict_t *dict_locals;
    mp_obj_dict_t *dict_globals;

    nlr_buf_t *nlr_top;


    volatile mp_obj_t mp_pending_exception;


    mp_obj_t stop_iteration_arg;






} mp_state_thread_t;



typedef struct _mp_state_ctx_t {
    mp_state_thread_t thread;
    mp_state_vm_t vm;
    mp_state_mem_t mem;
} mp_state_ctx_t;

extern mp_state_ctx_t mp_state_ctx;
# 30 "../../py/runtime.h" 2
# 1 "../../py/pystack.h" 1
# 37 "../../py/pystack.h"
void mp_pystack_init(void *start, void *end);
void *mp_pystack_alloc(size_t n_bytes);




static inline void mp_pystack_free(void *ptr) {
    (void)0;
    (void)0;
# 58 "../../py/pystack.h"
    (mp_state_ctx.thread.pystack_cur) = (uint8_t *)ptr;
}

static inline void mp_pystack_realloc(void *ptr, size_t n_bytes) {
    mp_pystack_free(ptr);
    mp_pystack_alloc(n_bytes);
}

static inline size_t mp_pystack_usage(void) {
    return (mp_state_ctx.thread.pystack_cur) - (mp_state_ctx.thread.pystack_start);
}

static inline size_t mp_pystack_limit(void) {
    return (mp_state_ctx.thread.pystack_end) - (mp_state_ctx.thread.pystack_start);
}
# 98 "../../py/pystack.h"
static inline void *mp_local_alloc(size_t n_bytes) {
    return mp_pystack_alloc(n_bytes);
}

static inline void mp_local_free(void *ptr) {
    mp_pystack_free(ptr);
}

static inline void *mp_nonlocal_alloc(size_t n_bytes) {
    return mp_pystack_alloc(n_bytes);
}

static inline void *mp_nonlocal_realloc(void *ptr, size_t old_n_bytes, size_t new_n_bytes) {
    (void)old_n_bytes;
    mp_pystack_realloc(ptr, new_n_bytes);
    return ptr;
}

static inline void mp_nonlocal_free(void *ptr, size_t n_bytes) {
    (void)n_bytes;
    mp_pystack_free(ptr);
}
# 31 "../../py/runtime.h" 2

typedef enum {
    MP_VM_RETURN_NORMAL,
    MP_VM_RETURN_YIELD,
    MP_VM_RETURN_EXCEPTION,
} mp_vm_return_kind_t;

typedef enum {
    MP_ARG_BOOL = 0x001,
    MP_ARG_INT = 0x002,
    MP_ARG_OBJ = 0x003,
    MP_ARG_KIND_MASK = 0x0ff,
    MP_ARG_REQUIRED = 0x100,
    MP_ARG_KW_ONLY = 0x200,
} mp_arg_flag_t;

typedef union _mp_arg_val_t {
    _Bool u_bool;
    mp_int_t u_int;
    mp_obj_t u_obj;
    mp_rom_obj_t u_rom_obj;
} mp_arg_val_t;

typedef struct _mp_arg_t {
    uint16_t qst;
    uint16_t flags;
    mp_arg_val_t defval;
} mp_arg_t;

struct _mp_sched_node_t;

typedef void (*mp_sched_callback_t)(struct _mp_sched_node_t *);

typedef struct _mp_sched_node_t {
    mp_sched_callback_t callback;
    struct _mp_sched_node_t *next;
} mp_sched_node_t;


extern const byte mp_unary_op_method_name[];
extern const byte mp_binary_op_method_name[];

void mp_init(void);
void mp_deinit(void);

void mp_sched_exception(mp_obj_t exc);
void mp_sched_keyboard_interrupt(void);
void mp_handle_pending(_Bool raise_exc);
void mp_handle_pending_tail(mp_uint_t atomic_state);


void mp_sched_lock(void);
void mp_sched_unlock(void);

_Bool mp_sched_schedule(mp_obj_t function, mp_obj_t arg);
_Bool mp_sched_schedule_node(mp_sched_node_t *node, mp_sched_callback_t callback);



int mp_print_mp_int(const mp_print_t *print, mp_obj_t x, int base, int base_char, int flags, char fill, int width, int prec);

void mp_arg_check_num_sig(size_t n_args, size_t n_kw, uint32_t sig);
static inline void mp_arg_check_num(size_t n_args, size_t n_kw, size_t n_args_min, size_t n_args_max, _Bool takes_kw) {
    mp_arg_check_num_sig(n_args, n_kw, ((uint32_t)((((uint32_t)(n_args_min)) << 17) | (((uint32_t)(n_args_max)) << 1) | ((takes_kw) ? 1 : 0))));
}
void mp_arg_parse_all(size_t n_pos, const mp_obj_t *pos, mp_map_t *kws, size_t n_allowed, const mp_arg_t *allowed, mp_arg_val_t *out_vals);
void mp_arg_parse_all_kw_array(size_t n_pos, size_t n_kw, const mp_obj_t *args, size_t n_allowed, const mp_arg_t *allowed, mp_arg_val_t *out_vals);
__attribute__((noreturn)) void mp_arg_error_terse_mismatch(void);
__attribute__((noreturn)) void mp_arg_error_unimpl_kw(void);

static inline mp_obj_dict_t *mp_locals_get(void) {
    return (mp_state_ctx.thread.dict_locals);
}
static inline void mp_locals_set(mp_obj_dict_t *d) {
    (mp_state_ctx.thread.dict_locals) = d;
}
static inline mp_obj_dict_t *mp_globals_get(void) {
    return (mp_state_ctx.thread.dict_globals);
}
static inline void mp_globals_set(mp_obj_dict_t *d) {
    (mp_state_ctx.thread.dict_globals) = d;
}

mp_obj_t mp_load_name(qstr qst);
mp_obj_t mp_load_global(qstr qst);
mp_obj_t mp_load_build_class(void);
void mp_store_name(qstr qst, mp_obj_t obj);
void mp_store_global(qstr qst, mp_obj_t obj);
void mp_delete_name(qstr qst);
void mp_delete_global(qstr qst);

mp_obj_t mp_unary_op(mp_unary_op_t op, mp_obj_t arg);
mp_obj_t mp_binary_op(mp_binary_op_t op, mp_obj_t lhs, mp_obj_t rhs);

mp_obj_t mp_call_function_0(mp_obj_t fun);
mp_obj_t mp_call_function_1(mp_obj_t fun, mp_obj_t arg);
mp_obj_t mp_call_function_2(mp_obj_t fun, mp_obj_t arg1, mp_obj_t arg2);
mp_obj_t mp_call_function_n_kw(mp_obj_t fun, size_t n_args, size_t n_kw, const mp_obj_t *args);
mp_obj_t mp_call_method_n_kw(size_t n_args, size_t n_kw, const mp_obj_t *args);
mp_obj_t mp_call_method_n_kw_var(_Bool have_self, size_t n_args_n_kw, const mp_obj_t *args);
mp_obj_t mp_call_method_self_n_kw(mp_obj_t meth, mp_obj_t self, size_t n_args, size_t n_kw, const mp_obj_t *args);


mp_obj_t mp_call_function_1_protected(mp_obj_t fun, mp_obj_t arg);
mp_obj_t mp_call_function_2_protected(mp_obj_t fun, mp_obj_t arg1, mp_obj_t arg2);

typedef struct _mp_call_args_t {
    mp_obj_t fun;
    size_t n_args, n_kw, n_alloc;
    mp_obj_t *args;
} mp_call_args_t;
# 151 "../../py/runtime.h"
void mp_unpack_sequence(mp_obj_t seq, size_t num, mp_obj_t *items);
void mp_unpack_ex(mp_obj_t seq, size_t num, mp_obj_t *items);
mp_obj_t mp_store_map(mp_obj_t map, mp_obj_t key, mp_obj_t value);
mp_obj_t mp_load_attr(mp_obj_t base, qstr attr);
void mp_convert_member_lookup(mp_obj_t obj, const mp_obj_type_t *type, mp_obj_t member, mp_obj_t *dest);
void mp_load_method(mp_obj_t base, qstr attr, mp_obj_t *dest);
void mp_load_method_maybe(mp_obj_t base, qstr attr, mp_obj_t *dest);
void mp_load_method_protected(mp_obj_t obj, qstr attr, mp_obj_t *dest, _Bool catch_all_exc);
void mp_load_super_method(qstr attr, mp_obj_t *dest);
void mp_store_attr(mp_obj_t base, qstr attr, mp_obj_t val);

mp_obj_t mp_getiter(mp_obj_t o, mp_obj_iter_buf_t *iter_buf);
mp_obj_t mp_iternext_allow_raise(mp_obj_t o);
mp_obj_t mp_iternext(mp_obj_t o);
mp_vm_return_kind_t mp_resume(mp_obj_t self_in, mp_obj_t send_value, mp_obj_t throw_value, mp_obj_t *ret_val);

static inline mp_obj_t mp_make_stop_iteration(mp_obj_t o) {
    (mp_state_ctx.thread.stop_iteration_arg) = o;
    return (((mp_obj_t)(void *)0));
}

mp_obj_t mp_make_raise_obj(mp_obj_t o);

mp_obj_t mp_import_name(qstr name, mp_obj_t fromlist, mp_obj_t level);
mp_obj_t mp_import_from(mp_obj_t module, qstr name);
void mp_import_all(mp_obj_t module);
# 190 "../../py/runtime.h"
__attribute__((noreturn)) void mp_raise_msg(const mp_obj_type_t *exc_type, mp_rom_error_text_t msg);
__attribute__((noreturn)) void mp_raise_msg_varg(const mp_obj_type_t *exc_type, mp_rom_error_text_t fmt, ...);
__attribute__((noreturn)) void mp_raise_ValueError(mp_rom_error_text_t msg);
__attribute__((noreturn)) void mp_raise_TypeError(mp_rom_error_text_t msg);
__attribute__((noreturn)) void mp_raise_NotImplementedError(mp_rom_error_text_t msg);


__attribute__((noreturn)) void mp_raise_type_arg(const mp_obj_type_t *exc_type, mp_obj_t arg);
__attribute__((noreturn)) void mp_raise_StopIteration(mp_obj_t arg);
__attribute__((noreturn)) void mp_raise_OSError(int errno_);
__attribute__((noreturn)) void mp_raise_recursion_depth(void);
# 213 "../../py/runtime.h"
int mp_native_type_from_qstr(qstr qst);
mp_uint_t mp_native_from_obj(mp_obj_t obj, mp_uint_t type);
mp_obj_t mp_native_to_obj(mp_uint_t val, mp_uint_t type);






void mp_warning(const char *category, const char *msg, ...);
# 3 "../../extmod/tulip/tulip_helpers.h" 2
# 1 "../../py/mperrno.h" 1
# 148 "../../py/mperrno.h"
qstr mp_errno_to_str(mp_obj_t errno_val);
# 4 "../../extmod/tulip/tulip_helpers.h" 2

# 1 "../../extmod/vfs.h" 1
# 29 "../../extmod/vfs.h"
# 1 "../../py/lexer.h" 1
# 33 "../../py/lexer.h"
# 1 "../../py/reader.h" 1
# 36 "../../py/reader.h"
typedef struct _mp_reader_t {
    void *data;
    mp_uint_t (*readbyte)(void *data);
    void (*close)(void *data);
} mp_reader_t;

void mp_reader_new_mem(mp_reader_t *reader, const byte *buf, size_t len, size_t free_len);
void mp_reader_new_file(mp_reader_t *reader, const char *filename);
void mp_reader_new_file_from_fd(mp_reader_t *reader, int fd, _Bool close_fd);
# 34 "../../py/lexer.h" 2







typedef enum _mp_token_kind_t {
    MP_TOKEN_END,

    MP_TOKEN_INVALID,
    MP_TOKEN_DEDENT_MISMATCH,
    MP_TOKEN_LONELY_STRING_OPEN,





    MP_TOKEN_NEWLINE,
    MP_TOKEN_INDENT,
    MP_TOKEN_DEDENT,

    MP_TOKEN_NAME,
    MP_TOKEN_INTEGER,
    MP_TOKEN_FLOAT_OR_IMAG,
    MP_TOKEN_STRING,
    MP_TOKEN_BYTES,

    MP_TOKEN_ELLIPSIS,

    MP_TOKEN_KW_FALSE,
    MP_TOKEN_KW_NONE,
    MP_TOKEN_KW_TRUE,
    MP_TOKEN_KW___DEBUG__,
    MP_TOKEN_KW_AND,
    MP_TOKEN_KW_AS,
    MP_TOKEN_KW_ASSERT,

    MP_TOKEN_KW_ASYNC,
    MP_TOKEN_KW_AWAIT,

    MP_TOKEN_KW_BREAK,
    MP_TOKEN_KW_CLASS,
    MP_TOKEN_KW_CONTINUE,
    MP_TOKEN_KW_DEF,
    MP_TOKEN_KW_DEL,
    MP_TOKEN_KW_ELIF,
    MP_TOKEN_KW_ELSE,
    MP_TOKEN_KW_EXCEPT,
    MP_TOKEN_KW_FINALLY,
    MP_TOKEN_KW_FOR,
    MP_TOKEN_KW_FROM,
    MP_TOKEN_KW_GLOBAL,
    MP_TOKEN_KW_IF,
    MP_TOKEN_KW_IMPORT,
    MP_TOKEN_KW_IN,
    MP_TOKEN_KW_IS,
    MP_TOKEN_KW_LAMBDA,
    MP_TOKEN_KW_NONLOCAL,
    MP_TOKEN_KW_NOT,
    MP_TOKEN_KW_OR,
    MP_TOKEN_KW_PASS,
    MP_TOKEN_KW_RAISE,
    MP_TOKEN_KW_RETURN,
    MP_TOKEN_KW_TRY,
    MP_TOKEN_KW_WHILE,
    MP_TOKEN_KW_WITH,
    MP_TOKEN_KW_YIELD,

    MP_TOKEN_OP_ASSIGN,
    MP_TOKEN_OP_TILDE,


    MP_TOKEN_OP_LESS,
    MP_TOKEN_OP_MORE,
    MP_TOKEN_OP_DBL_EQUAL,
    MP_TOKEN_OP_LESS_EQUAL,
    MP_TOKEN_OP_MORE_EQUAL,
    MP_TOKEN_OP_NOT_EQUAL,


    MP_TOKEN_OP_PIPE,
    MP_TOKEN_OP_CARET,
    MP_TOKEN_OP_AMPERSAND,
    MP_TOKEN_OP_DBL_LESS,
    MP_TOKEN_OP_DBL_MORE,
    MP_TOKEN_OP_PLUS,
    MP_TOKEN_OP_MINUS,
    MP_TOKEN_OP_STAR,
    MP_TOKEN_OP_AT,
    MP_TOKEN_OP_DBL_SLASH,
    MP_TOKEN_OP_SLASH,
    MP_TOKEN_OP_PERCENT,
    MP_TOKEN_OP_DBL_STAR,


    MP_TOKEN_DEL_PIPE_EQUAL,
    MP_TOKEN_DEL_CARET_EQUAL,
    MP_TOKEN_DEL_AMPERSAND_EQUAL,
    MP_TOKEN_DEL_DBL_LESS_EQUAL,
    MP_TOKEN_DEL_DBL_MORE_EQUAL,
    MP_TOKEN_DEL_PLUS_EQUAL,
    MP_TOKEN_DEL_MINUS_EQUAL,
    MP_TOKEN_DEL_STAR_EQUAL,
    MP_TOKEN_DEL_AT_EQUAL,
    MP_TOKEN_DEL_DBL_SLASH_EQUAL,
    MP_TOKEN_DEL_SLASH_EQUAL,
    MP_TOKEN_DEL_PERCENT_EQUAL,
    MP_TOKEN_DEL_DBL_STAR_EQUAL,

    MP_TOKEN_DEL_PAREN_OPEN,
    MP_TOKEN_DEL_PAREN_CLOSE,
    MP_TOKEN_DEL_BRACKET_OPEN,
    MP_TOKEN_DEL_BRACKET_CLOSE,
    MP_TOKEN_DEL_BRACE_OPEN,
    MP_TOKEN_DEL_BRACE_CLOSE,
    MP_TOKEN_DEL_COMMA,
    MP_TOKEN_DEL_COLON,
    MP_TOKEN_DEL_PERIOD,
    MP_TOKEN_DEL_SEMICOLON,
    MP_TOKEN_DEL_EQUAL,
    MP_TOKEN_DEL_MINUS_MORE,
} mp_token_kind_t;



typedef struct _mp_lexer_t {
    qstr source_name;
    mp_reader_t reader;

    unichar_mp chr0, chr1, chr2;




    size_t line;
    size_t column;

    mp_int_t emit_dent;
    mp_int_t nested_bracket_level;

    size_t alloc_indent_level;
    size_t num_indent_level;
    uint16_t *indent_level;

    size_t tok_line;
    size_t tok_column;
    mp_token_kind_t tok_kind;
    vstr_t vstr;




} mp_lexer_t;

mp_lexer_t *mp_lexer_new(qstr src_name, mp_reader_t reader);
mp_lexer_t *mp_lexer_new_from_str_len(qstr src_name, const char *str, size_t len, size_t free_len);

void mp_lexer_free(mp_lexer_t *lex);
void mp_lexer_to_next(mp_lexer_t *lex);





typedef enum {
    MP_IMPORT_STAT_NO_EXIST,
    MP_IMPORT_STAT_DIR,
    MP_IMPORT_STAT_FILE,
} mp_import_stat_t;

mp_import_stat_t mp_import_stat(const char *path);
mp_lexer_t *mp_lexer_new_from_file(const char *filename);
# 30 "../../extmod/vfs.h" 2
# 56 "../../extmod/vfs.h"
typedef struct _mp_vfs_proto_t {
    mp_import_stat_t (*import_stat)(void *self, const char *path);
} mp_vfs_proto_t;

typedef struct _mp_vfs_blockdev_t {
    uint16_t flags;
    size_t block_size;
    mp_obj_t readblocks[5];
    mp_obj_t writeblocks[5];

    union {
        mp_obj_t ioctl[4];
        struct {
            mp_obj_t sync[2];
            mp_obj_t count[2];
        } old;
    } u;
} mp_vfs_blockdev_t;

typedef struct _mp_vfs_mount_t {
    const char *str;
    size_t len;
    mp_obj_t obj;
    struct _mp_vfs_mount_t *next;
} mp_vfs_mount_t;

void mp_vfs_blockdev_init(mp_vfs_blockdev_t *self, mp_obj_t bdev);
int mp_vfs_blockdev_read(mp_vfs_blockdev_t *self, size_t block_num, size_t num_blocks, uint8_t *buf);
int mp_vfs_blockdev_read_ext(mp_vfs_blockdev_t *self, size_t block_num, size_t block_off, size_t len, uint8_t *buf);
int mp_vfs_blockdev_write(mp_vfs_blockdev_t *self, size_t block_num, size_t num_blocks, const uint8_t *buf);
int mp_vfs_blockdev_write_ext(mp_vfs_blockdev_t *self, size_t block_num, size_t block_off, size_t len, const uint8_t *buf);
mp_obj_t mp_vfs_blockdev_ioctl(mp_vfs_blockdev_t *self, uintptr_t cmd, uintptr_t arg);

mp_vfs_mount_t *mp_vfs_lookup_path(const char *path, const char **path_out);
mp_import_stat_t mp_vfs_import_stat(const char *path);
mp_obj_t mp_vfs_mount(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args);
mp_obj_t mp_vfs_umount(mp_obj_t mnt_in);
mp_obj_t mp_vfs_open(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args);
mp_obj_t mp_vfs_chdir(mp_obj_t path_in);
mp_obj_t mp_vfs_getcwd(void);
mp_obj_t mp_vfs_ilistdir(size_t n_args, const mp_obj_t *args);
mp_obj_t mp_vfs_listdir(size_t n_args, const mp_obj_t *args);
mp_obj_t mp_vfs_mkdir(mp_obj_t path_in);
mp_obj_t mp_vfs_remove(mp_obj_t path_in);
mp_obj_t mp_vfs_rename(mp_obj_t old_path_in, mp_obj_t new_path_in);
mp_obj_t mp_vfs_rmdir(mp_obj_t path_in);
mp_obj_t mp_vfs_stat(mp_obj_t path_in);
mp_obj_t mp_vfs_statvfs(mp_obj_t path_in);

int mp_vfs_mount_and_chdir_protected(mp_obj_t bdev, mp_obj_t mount_point);

extern const mp_obj_fun_builtin_var_t mp_vfs_mount_obj;
extern const mp_obj_fun_builtin_fixed_t mp_vfs_umount_obj;
extern const mp_obj_fun_builtin_var_t mp_vfs_open_obj;
extern const mp_obj_fun_builtin_fixed_t mp_vfs_chdir_obj;
extern const mp_obj_fun_builtin_fixed_t mp_vfs_getcwd_obj;
extern const mp_obj_fun_builtin_var_t mp_vfs_ilistdir_obj;
extern const mp_obj_fun_builtin_var_t mp_vfs_listdir_obj;
extern const mp_obj_fun_builtin_fixed_t mp_vfs_mkdir_obj;
extern const mp_obj_fun_builtin_fixed_t mp_vfs_remove_obj;
extern const mp_obj_fun_builtin_fixed_t mp_vfs_rename_obj;
extern const mp_obj_fun_builtin_fixed_t mp_vfs_rmdir_obj;
extern const mp_obj_fun_builtin_fixed_t mp_vfs_stat_obj;
extern const mp_obj_fun_builtin_fixed_t mp_vfs_statvfs_obj;
# 6 "../../extmod/tulip/tulip_helpers.h" 2
# 1 "../../py/stream.h" 1
# 55 "../../py/stream.h"
struct mp_stream_seek_t {



    mp_off_t offset;
    int whence;
};







typedef struct _mp_stream_p_t {


    mp_uint_t (*read)(mp_obj_t obj, void *buf, mp_uint_t size, int *errcode);
    mp_uint_t (*write)(mp_obj_t obj, const void *buf, mp_uint_t size, int *errcode);
    mp_uint_t (*ioctl)(mp_obj_t obj, mp_uint_t request, uintptr_t arg, int *errcode);
    mp_uint_t is_text : 1;
} mp_stream_p_t;

extern const mp_obj_fun_builtin_var_t mp_stream_read_obj;
extern const mp_obj_fun_builtin_var_t mp_stream_read1_obj;
extern const mp_obj_fun_builtin_var_t mp_stream_readinto_obj;
extern const mp_obj_fun_builtin_var_t mp_stream_unbuffered_readline_obj;
extern const mp_obj_fun_builtin_fixed_t mp_stream_unbuffered_readlines_obj;
extern const mp_obj_fun_builtin_var_t mp_stream_write_obj;
extern const mp_obj_fun_builtin_fixed_t mp_stream_write1_obj;
extern const mp_obj_fun_builtin_fixed_t mp_stream_close_obj;
extern const mp_obj_fun_builtin_var_t mp_stream_seek_obj;
extern const mp_obj_fun_builtin_fixed_t mp_stream_tell_obj;
extern const mp_obj_fun_builtin_fixed_t mp_stream_flush_obj;
extern const mp_obj_fun_builtin_var_t mp_stream_ioctl_obj;







static inline const mp_stream_p_t *mp_get_stream(mp_const_obj_t self) {
    return (const mp_stream_p_t *)((const mp_obj_base_t *)((void *)self))->type->protocol;
}

const mp_stream_p_t *mp_get_stream_raise(mp_obj_t self_in, int flags);
mp_obj_t mp_stream_close(mp_obj_t stream);


mp_obj_t mp_stream_unbuffered_iter(mp_obj_t self);

mp_obj_t mp_stream_write(mp_obj_t self_in, const void *buf, size_t len, byte flags);





mp_uint_t mp_stream_rw(mp_obj_t stream, void *buf, mp_uint_t size, int *errcode, byte flags);



void mp_stream_write_adaptor(void *self, const char *buf, size_t len);
# 7 "../../extmod/tulip/tulip_helpers.h" 2
# 1 "../../py/ringbuf.h" 1
# 29 "../../py/ringbuf.h"
# 1 "/opt/homebrew/Cellar/emscripten/3.1.21/libexec/llvm/lib/clang/16.0.0/include/stddef.h" 1 3
# 30 "../../py/ringbuf.h" 2






typedef struct _ringbuf_t {
    uint8_t *buf;
    uint16_t size;
    uint16_t iget;
    uint16_t iput;
} ringbuf_t;
# 55 "../../py/ringbuf.h"
static inline int ringbuf_get(ringbuf_t *r) {
    if (r->iget == r->iput) {
        return -1;
    }
    uint8_t v = r->buf[r->iget++];
    if (r->iget >= r->size) {
        r->iget = 0;
    }
    return v;
}

static inline int ringbuf_peek(ringbuf_t *r) {
    if (r->iget == r->iput) {
        return -1;
    }
    return r->buf[r->iget];
}

static inline int ringbuf_put(ringbuf_t *r, uint8_t v) {
    uint32_t iput_new = r->iput + 1;
    if (iput_new >= r->size) {
        iput_new = 0;
    }
    if (iput_new == r->iget) {
        return -1;
    }
    r->buf[r->iput] = v;
    r->iput = iput_new;
    return 0;
}

static inline size_t ringbuf_free(ringbuf_t *r) {
    return (r->size + r->iget - r->iput - 1) % r->size;
}

static inline size_t ringbuf_avail(ringbuf_t *r) {
    return (r->size + r->iput - r->iget) % r->size;
}


int ringbuf_get16(ringbuf_t *r);
int ringbuf_peek16(ringbuf_t *r);
int ringbuf_put16(ringbuf_t *r, uint16_t v);
# 8 "../../extmod/tulip/tulip_helpers.h" 2



extern ringbuf_t stdin_ringbuf;

uint8_t file_exists(const char *filename);
int32_t file_size(const char *filename);
uint32_t read_file(const char *filename, uint8_t *buf, int32_t len, uint8_t binary);
uint32_t write_file(const char *filename, uint8_t *buf, uint32_t len, uint8_t binary);
int check_rx_char();
void tx_char(int c);
mp_obj_t tulip_fopen(const char *filename, const char *mode);
uint32_t tulip_fwrite(mp_obj_t file, uint8_t * buf, uint32_t len);
void tulip_fclose(mp_obj_t file);
# 11 "../../extmod/tulip/display.h" 2
# 1 "../../extmod/tulip/polyfills.h" 1
# 21 "../../extmod/tulip/polyfills.h"
void take_semaphore();
int64_t get_time_ms();
int64_t get_ticks_ms();
int64_t get_time_us();
void * malloc_caps(uint32_t size, uint32_t flags);
void *calloc_caps(uint32_t align, uint32_t count, uint32_t size, uint32_t flags);
void *realloc_caps(void* ptr, uint32_t size, uint32_t caps);
void free_caps(void *ptr);
float compute_cpu_usage(uint8_t debug);
void delay_ms(uint32_t ms);
# 12 "../../extmod/tulip/display.h" 2
# 1 "../../extmod/tulip/ui.h" 1



# 1 "../../extmod/tulip/polyfills.h" 1
# 21 "../../extmod/tulip/polyfills.h"
void take_semaphore();
int64_t get_time_ms();
int64_t get_ticks_ms();
int64_t get_time_us();
void * malloc_caps(uint32_t size, uint32_t flags);
void *calloc_caps(uint32_t align, uint32_t count, uint32_t size, uint32_t flags);
void *realloc_caps(void* ptr, uint32_t size, uint32_t caps);
void free_caps(void *ptr);
float compute_cpu_usage(uint8_t debug);
void delay_ms(uint32_t ms);
# 5 "../../extmod/tulip/ui.h" 2
# 1 "../../extmod/tulip/display.h" 1
# 6 "../../extmod/tulip/ui.h" 2
# 1 "../../extmod/tulip/bresenham.h" 1

# 1 "../../extmod/tulip/display.h" 1
# 3 "../../extmod/tulip/bresenham.h" 2




void plotQuadBezier(int x0, int y0, int x1, int y1, int x2, int y2, uint8_t pal_idx);
void plot_basic_bezier (int x0, int y0, int x1, int y1, int x2, int y2, uint8_t pal_idx);
void fillRect(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color);
void drawCircle(short x0, short y0, short r, unsigned short color);
void drawCircleHelper( short x0, short y0, short r, unsigned char cornername, unsigned short color);
void fillCircle(short x0, short y0, short r, unsigned short color) ;
void fillCircleHelper(short x0, short y0, short r, unsigned char cornername, short delta, unsigned short color) ;
void drawLine(short x0, short y0, short x1, short y1, unsigned short color);
void drawRect(short x, short y, short w, short h, unsigned short color) ;
void drawRoundRect(short x, short y, short w, short h, short r, unsigned short color);
void fillRoundRect(short x, short y, short w, short h, short r, unsigned short color);
void drawTriangle(short x0, short y0, short x1, short y1, short x2, short y2, unsigned short color);
void fillTriangle ( short x0, short y0, short x1, short y1, short x2, short y2, unsigned short color);
void fill(int16_t x, int16_t y, uint8_t color);
# 7 "../../extmod/tulip/ui.h" 2
# 1 "../../extmod/tulip/bitmap_fonts.h" 1

# 1 "../../extmod/tulip/display.h" 1
# 3 "../../extmod/tulip/bitmap_fonts.h" 2




typedef struct {
  uint16_t bitmapOffset;
  uint8_t width;
  uint8_t height;
  uint8_t xAdvance;
  int8_t xOffset;
  int8_t yOffset;
} GFXglyph;


typedef struct {
  uint8_t *bitmap;
  GFXglyph *glyph;
  uint16_t first;
  uint16_t last;
  uint8_t yAdvance;
} GFXfont;



uint8_t draw_glyph(uint8_t c, uint16_t x, uint16_t y, uint8_t pal_idx);
void width_height_glyph(uint8_t c, uint8_t *w, uint8_t *h);
# 8 "../../extmod/tulip/ui.h" 2
# 19 "../../extmod/tulip/ui.h"
struct ui_element {
    uint8_t active;
    uint16_t x;
    uint16_t y;
    uint16_t w;
    uint16_t h;
    float val;
    uint8_t c0;
    uint8_t c1;
    uint8_t type;
};

struct ui_element ** elements;

int8_t ui_id_held;


void tulip_ui_isr(uint8_t ui_id);
void send_touch_to_micropython(int16_t touch_x, int16_t touch_y, uint8_t up);
void ui_button_new(uint8_t ui_id, const char * str, uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t r, uint8_t fgc, uint8_t bc, uint8_t filled);
void ui_slider_new(uint8_t ui_id, uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint8_t o, float val, uint8_t bc, uint8_t hc);
float ui_slider_get_val(uint8_t ui_id);
void ui_element_del(uint8_t ui_id) ;
void ui_init();
# 13 "../../extmod/tulip/display.h" 2







uint8_t bg_pal_color;
uint8_t tfb_fg_pal_color;
uint8_t tfb_bg_pal_color;
uint8_t ansi_active_bg_color;
uint8_t ansi_active_fg_color;
int16_t ansi_active_format;


static const uint8_t ansi_pal[256] = {
0, 128, 16, 144, 2, 130, 18, 219, 146, 224, 28, 252, 3, 227, 31, 255, 0, 1, 2, 2, 3, 3, 8, 9, 10, 10,
11, 11, 16, 17, 18, 18, 19, 19, 20, 21, 22, 22, 23, 23, 24, 25, 26, 26, 27, 27, 28, 29, 30, 30, 31, 31,
64, 65, 66, 66, 67, 67, 72, 73, 74, 74, 75, 75, 80, 81, 82, 82, 83, 83, 84, 85, 86, 86, 87, 87, 88, 89,
90, 90, 91, 91, 92, 93, 94, 94, 95, 95, 128, 129, 130, 130, 131, 131, 136, 137, 138, 138, 139, 139, 144,
145, 146, 146, 147, 147, 148, 149, 150, 150, 151, 151, 152, 153, 154, 154, 155, 155, 156, 157, 158, 158,
159, 159, 160, 161, 162, 162, 163, 163, 168, 169, 170, 170, 171, 171, 176, 177, 178, 178, 179, 179, 180,
181, 182, 182, 183, 183, 184, 185, 186, 186, 187, 187, 188, 189, 190, 190, 191, 191, 192, 193, 194, 194,
195, 195, 200, 201, 202, 202, 203, 203, 208, 209, 210, 210, 211, 211, 212, 213, 214, 214, 215, 215, 216,
217, 218, 218, 219, 219, 220, 221, 222, 222, 223, 223, 224, 225, 226, 226, 227, 227, 232, 233, 234, 234,
235, 235, 240, 241, 242, 242, 243, 243, 244, 245, 246, 246, 247, 247, 248, 249, 250, 250, 251, 251, 252,
253, 254, 254, 255, 255, 0, 0, 0, 36, 36, 36, 73, 73, 73, 109, 109, 109, 146, 146, 146, 146, 182, 182,
182, 219, 219, 219, 255, 255
};

int16_t last_touch_x[3];
int16_t last_touch_y[3];
uint8_t touch_held;

void display_reset_sprites();
void display_reset_tfb();
void display_reset_bg();

void display_set_clock(uint8_t mhz) ;

void display_set_bg_pixel_pal(uint16_t x, uint16_t y, uint8_t pal_idx);
void display_set_bg_pixel(uint16_t x, uint16_t y, uint8_t r, uint8_t g, uint8_t b);
void display_get_bg_pixel(uint16_t x, uint16_t y, uint8_t *r, uint8_t *g, uint8_t *b);
uint8_t display_get_bg_pixel_pal(uint16_t x, uint16_t y);
void display_invert_bg(uint16_t x, uint16_t y, uint16_t w, uint16_t h) ;

void display_get_bg_bitmap_raw(uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint8_t *data);
void display_set_bg_bitmap_rgba(uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint8_t* data);
void display_set_bg_bitmap_raw(uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint8_t* data);
void display_bg_bitmap_blit(uint16_t x,uint16_t y,uint16_t w,uint16_t h,uint16_t x1,uint16_t y1);

void display_load_sprite_rgba(uint32_t mem_pos, uint32_t len, uint8_t* data);
void display_load_sprite_raw(uint32_t mem_pos, uint32_t len, uint8_t* data);
void display_screenshot(char * filename);
void display_screenshot_pal(char * filename);
void display_tfb_str(char*str, uint16_t len, uint8_t format, uint8_t fg_color, uint8_t bg_color);

void display_tfb_new_row();
void display_run();
void display_init();
void display_brightness(uint8_t amount);

void unpack_rgb_332(uint8_t px0, uint8_t *r, uint8_t *g, uint8_t *b);
void unpack_pal_idx(uint16_t pal_idx, uint8_t *r, uint8_t *g, uint8_t *b);
void unpack_ansi_idx(uint8_t ansi_idx, uint8_t *r, uint8_t *g, uint8_t *b);
 _Bool display_bounce_empty(void *bounce_buf, int pos_px, int len_bytes, void *user_ctx);
 _Bool display_frame_done_generic();

void display_teardown(void);

extern const unsigned char font_8x12_r[256][12];
# 98 "../../extmod/tulip/display.h"
uint16_t H_RES, V_RES, TFB_COLS, TFB_ROWS, BOUNCE_BUFFER_SIZE_PX, OFFSCREEN_X_PX, OFFSCREEN_Y_PX, PIXEL_CLOCK_MHZ;
# 146 "../../extmod/tulip/display.h"
uint8_t tfb_y_row;
uint8_t tfb_x_col;
uint8_t task_screenshot;
uint8_t task_start;
uint8_t task_stop;
int32_t vsync_count;
uint8_t brightness;
float reported_fps;
float reported_gpu_usage;


uint8_t *sprite_ram;
uint8_t * bg;


uint16_t *sprite_x_px;
uint16_t *sprite_y_px;
uint16_t *sprite_w_px;
uint16_t *sprite_h_px;
uint8_t *sprite_vis;
uint32_t *sprite_mem;

uint8_t *TFB;
uint8_t *TFBfg;
uint8_t *TFBbg;
uint8_t *TFBf;
int16_t *x_offsets;
int16_t *y_offsets;
int16_t *x_speeds;
int16_t *y_speeds;

uint32_t **bg_lines;
# 5 "unix_display.c" 2
# 1 "../../extmod/tulip/keyscan.h" 1
# 18 "../../extmod/tulip/keyscan.h"
# 1 "../../extmod/tulip/tulip_helpers.h" 1
# 11 "../../extmod/tulip/tulip_helpers.h"
extern ringbuf_t stdin_ringbuf;

uint8_t file_exists(const char *filename);
int32_t file_size(const char *filename);
uint32_t read_file(const char *filename, uint8_t *buf, int32_t len, uint8_t binary);
uint32_t write_file(const char *filename, uint8_t *buf, uint32_t len, uint8_t binary);
int check_rx_char();
void tx_char(int c);
mp_obj_t tulip_fopen(const char *filename, const char *mode);
uint32_t tulip_fwrite(mp_obj_t file, uint8_t * buf, uint32_t len);
void tulip_fclose(mp_obj_t file);
# 19 "../../extmod/tulip/keyscan.h" 2



uint8_t keyboard_send_keys_to_micropython;
uint8_t last_scan[8];

uint16_t scan_ascii(uint8_t code, uint32_t modifier);
void send_key_to_micropython(uint16_t c);
void send_touch_to_micropython(int16_t touch_x, int16_t touch_y, uint8_t up);
# 6 "unix_display.c" 2

SDL_Window *window;
SDL_Surface *window_surface;
SDL_Surface *surface_332;
SDL_Renderer *fixed_fps_renderer;
uint8_t *pixels_332;
uint8_t *frame_bb;

int64_t frame_ticks = 0;
int8_t unix_display_flag = 0;
SDL_Keymod last_held_mod;

void unix_set_fps_from_parameters() {

    float fps_map[20] = {14.98, 18.55, 23.19, 30.91, 46.37, 21.47, 34.36, 42.95, 57.26, 85.90,
                         19.91, 30.26, 37.82, 50.43, 75.65, 35.03, 56.05, 70.07, 93.45, 140.13};
    uint8_t clocks[5]= {10,14,18,22,28};
    uint16_t h_reses[2] = {1024, 512};
    uint16_t v_reses[2] = {600, 300};
    uint8_t fps_i = 0;
    for(uint8_t h_res_i = 0;h_res_i < 2;h_res_i++) {
        for(uint8_t v_res_i = 0;v_res_i < 2;v_res_i++) {
            for(uint8_t clock_i = 0;clock_i < 5;clock_i++) {
                if(H_RES==h_reses[h_res_i] && V_RES==v_reses[v_res_i] && PIXEL_CLOCK_MHZ==clocks[clock_i]) {

                    reported_fps = fps_map[fps_i];

                    clock_i = 10; v_res_i = 10; h_res_i = 10;
                }
                fps_i++;
            }
        }
    }
    if(fps_i == 20) {
        fprintf((stderr), "Problem: could not find matching fps from res %d, %d clock %d. returning 60fps.\n", H_RES, V_RES, PIXEL_CLOCK_MHZ);
        reported_fps = 60;
    }


}

void unix_display_set_clock(uint8_t mhz) {
    PIXEL_CLOCK_MHZ = mhz;
    unix_set_fps_from_parameters();
}


void unix_display_timings(uint32_t t0, uint32_t t1, uint32_t t2, uint32_t t3) {
    fprintf((stderr), "Stopping display task\n");
    H_RES = t0;
    V_RES = t1;
    OFFSCREEN_X_PX = t2;
    OFFSCREEN_Y_PX = t3;
    unix_display_flag = -2;
}


void init_window(uint16_t w, uint16_t h) {
    if (SDL_Init(0x00000020u) < 0) {
        fprintf((stderr),"SDL could not initialize! SDL_Error: %s\n", SDL_GetError());
    } else {
        window = SDL_CreateWindow("SDL Output", (0x1FFF0000u|(0)),
                                (0x1FFF0000u|(0)), w, h,
                                SDL_WINDOW_SHOWN | SDL_WINDOW_ALLOW_HIGHDPI);

    }
    if (window == ((void*)0)) {
        fprintf((stderr),"Window could not be created! SDL_Error: %s\n", SDL_GetError());
    } else {
        window_surface = SDL_GetWindowSurface(window);
        surface_332 = SDL_ConvertSurfaceFormat(window_surface, SDL_PIXELFORMAT_RGB332, 0);
        fixed_fps_renderer = SDL_CreateSoftwareRenderer( window_surface);
        pixels_332 = (uint8_t*) surface_332->pixels;
    }
    memset(pixels_332, 0, H_RES * V_RES);

    SDL_SetHint("SDL_VIDEO_ALLOW_SCREENSAVER", "1");
    SDL_SetWindowTitle(window, "Tulip Desktop");
    SDL_StartTextInput();
}

void destrow_window() {
    SDL_DestroyWindow(window);
    SDL_Quit();
}

void check_key() {
    SDL_Event e;
    while (SDL_PollEvent(&e) != 0) {
        if (e.type == SDL_QUIT) {
            unix_display_flag = -1;
        } else if(e.type == SDL_KEYDOWN) {
            last_held_mod = SDL_GetModState();
            SDL_KeyboardEvent key = e.key;
            if(key.keysym.scancode >= 0x04 && key.keysym.scancode <= 0x94) {
                send_key_to_micropython(scan_ascii(key.keysym.scancode, (uint32_t)last_held_mod));
            }
            uint8_t skip = 0;
            uint8_t pos = 10;
            for(uint8_t i=2;i<8;i++) {
                if(last_scan[i] == key.keysym.scancode) { skip = 1; }
                if(pos == 10 && last_scan[i] == 0) { pos = i; }
            }
            if(!skip && pos < 8) {
                last_scan[pos] = key.keysym.scancode;
            }
        }
        if(e.type == SDL_KEYUP) {
            SDL_KeyboardEvent key = e.key;
            for(uint8_t i=2;i<8;i++) {
                if(key.keysym.scancode == last_scan[i]) {
                    last_scan[i] = 0;
                }
            }
        }
        int x,y;
        uint32_t button = SDL_GetMouseState(&x, &y);
        if(button) {
            last_touch_x[0] = (int16_t)x;
            last_touch_y[0] = (int16_t)y;
            send_touch_to_micropython(last_touch_x[0], last_touch_y[0], 0);
        } else {
            last_touch_x[0] = (int16_t)x;
            last_touch_y[0] = (int16_t)y;
            send_touch_to_micropython(last_touch_x[0], last_touch_y[0], 1);
        }
    }
}


void start_draw() {
    SDL_LockSurface(surface_332);

}



void end_draw() {
    SDL_UnlockSurface(surface_332);

    SDL_Texture *blit_texture = SDL_CreateTextureFromSurface(fixed_fps_renderer, surface_332);
    SDL_RenderCopy(fixed_fps_renderer, blit_texture, ((void*)0), ((void*)0));
    SDL_RenderPresent(fixed_fps_renderer);


    SDL_DestroyTexture(blit_texture);
    SDL_UpdateWindowSurface(window);

    int64_t ticks_per_frame_ms = (int64_t) (1000.0 / (double)reported_fps);


    while(get_ticks_ms() - frame_ticks < ticks_per_frame_ms) {
        SDL_Delay(1);
        check_key();
    }
}

int unix_display_draw() {
    frame_ticks = get_ticks_ms();
    check_key();
    start_draw();
    uint32_t c = 0;

    for(uint16_t y=0;y<V_RES;y=y+12) {
        display_bounce_empty(frame_bb, y*H_RES, H_RES*12*1, ((void*)0));
        for(uint16_t x=0;x<12*H_RES*1;x=x+1) {
            pixels_332[c++] = frame_bb[x];
        }
    }
    end_draw();
    display_frame_done_generic();


    if(unix_display_flag < 0) {
        SDL_DestroyWindow(window);
        SDL_Quit();
        display_teardown();
        if(unix_display_flag==-2) {
            unix_display_flag = 0;
            return -2;
        } else {
            unix_display_flag = 0;
            return -1;
        }
    }
    return 1;
}

void unix_display_init() {
    display_init();
    unix_set_fps_from_parameters();
    init_window(H_RES,V_RES);
    frame_bb = (uint8_t *) malloc_caps(12*H_RES*1,0 | 0);
}
